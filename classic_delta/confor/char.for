      SUBROUTINE FET (IA, J, L)                                             CHAR
 
C* REVISED 19-NOV-95.
C* FETCHES DATA FROM SPECIAL STORAGE.
 
C  IA RETURNS THE DATA.
C  J RECEIVES THE STARTING POSITION OF THE DATA IN SPECIAL STORAGE,
C    IN STORAGE UNITS (RECORDS).
C  L RECEIVES THE LENGTH OF THE DATA IN SPECIAL STORAGE, IN WORDS.
 
      DIMENSION IA(L)
 
C     *** NOTE: THE DIMENSION OF IBUF MUST BE EQUAL TO LRECSS!
C     THIS LOCAL BUFFER IS USED BECAUSE IN THE WINDOWS VERSION OF THE
C     PROGRAM IA (I.E. ICSTR) MAY CROSS SEGMENT BOUNDARIES AND READING
C     INTO SUCH AN ARRAY DOES NOT WORK CORRECTLY!
 
      DIMENSION IBUF(128)
 
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /STOXXX/ ISTYPE,LRECSS
 
      M = (L+LRECSS-1)/LRECSS
      DO 50 K = 1, M
        IB = (K-1)*LRECSS + 1
        IE = MIN0(K*LRECSS,L)
        N = J + K - 1
        READ (LUNS3, REC=N) (IBUF(I),I=1,IE-IB+1)
        I = 0
        DO 40 KK = IB,IE
          I = I + 1
          IA(KK) = IBUF(I)
  40    CONTINUE
  50  CONTINUE
 
      RETURN
      END
      SUBROUTINE FETCHC (ICSTR, LCSTR, ICDES, LCDES, NC, IC,                CHAR
     * IAC, IAS, MS)
C
C* REVISED 13/7/87.
C* PREPARES A CHARACTER DESCRIPTION FOR USE.
C
C  ICSTR RETURNS THE CHARACTER DESCRIPTION.
C    IF ISTYPE.EQ.1, IT ALSO RECEIVES ALL THE CHARACTER DESCRIPTIONS.
C  LCSTR RECEIVES THE LENGTH OF ICSTR.
C  ICDES RECEIVES THE STARTING LOCATIONS OF THE CHARACTER DESCRIPTIONS
C    IN THE STORAGE MEDIUM (IN WORDS FOR MEMORY STORAGE, OR RECORDS
C    FOR DISC STORAGE).
C  LCDES RECEIVES THE LENGTHS OF THE CHARACTER DESCRIPTIONS (IN WORDS).
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  IC RECEIVES THE CURRENT CHARACTER NUMBER.
C  IAC RETURNS THE LOCATION IN ICSTR OF THE FEATURE DESCRIPTION.
C  IAS RETURNS THE LOCATIONS IN ICSTR OF THE STATE DESCRIPTIONS.
C  MS RECEIVES THE MAXIMUM NUMBER OF STATES.
C
      DIMENSION ICSTR(LCSTR),ICDES(NC),LCDES(NC),IAS(MS)
      COMMON /STOXXX/ ISTYPE,LRECSS
C
      GO TO (100,200), ISTYPE
C
C--   STANDARD STORAGE - ORDINARY MEMORY.
  100 IAC = ICDES(IC)
      GO TO 1000
C
C--   SPECIAL STORAGE - DISC ETC.
  200 CALL FET (ICSTR, ICDES(IC), LCDES(IC))
      IAC = 1
C--
 1000 IE = IAC + ICSTR(IAC)
      IAC = IAC + 1
      JG = IAC + ICSTR(IAC)
      IS = 1
C
 1020 IF (JG.GE.IE)  GO TO 1050
        IAS(IS) = JG
        IS = IS + 1
        JG = JG + ICSTR(JG)
        GO TO 1020
C
 1050 RETURN
      END
      SUBROUTINE RDCHAR (IDAT, LIDAT, ITYPC, NSTAT, NC, MS,                 CHAR
     * IKEYCH, IC, ICHAR)
 
C* REVISED 02-JUL-01.
C* READS CHARACTER AND STATE DESCRIPTIONS FOR ONE CHARACTER.
 
C  IDAT RETURNS THE FEATURE AND STATE DESCRIPTIONS, IN THE FORM OF
C    A SET OF SENTENCES BEGINNING AT IDAT(2). IDAT(1) RETURNS THE
C    TOTAL LENGTH.
C  LIDAT RECEIVES THE LENGTH OF IDAT.
C  ITYPC RECEIVES THE CHARACTER TYPES.
C  NSTAT RECEIVES THE NUMBERS OF STATES.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  MS RECEIVES THE MAXIMUM NUMBER OF STATES.
C  IKEYCH RECEIVES WHETHER A KEY CHARACTER LIST IS BEING READ.
C  IC RECEIVES 0 AT THE FIRST CALL, -1 IF THE PREVIOUS CHARACTER WAS
C    INVALID, OR THE PREVIOUS CHARACTER NUMBER IF IT WAS VALID.
C    IC RETURNS THE CHARACTER NUMBER IF IT IS VALID, ELSE -1.
C  ICHAR RETURNS 1 IF THE CHARACTER IS VALID, 0 IF IT IS NOT, OR
C    -1 IF THE FIRST NON-BLANK SYMBOL IS NOT NUMERO.
 
      DIMENSION IDAT(LIDAT),ITYPC(NC),NSTAT(NC)
 
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /VALXXX/ KVAR,KUNK,KNA,KVAL(64),LKVAL
 
      IEND = 0
      IERR = 0
      JIDAT = 1
      CALL SKNONB
   10 IF (IBUF(JBUF).EQ.KDNUM)  GO TO 100
      IF (IBUF(JBUF).EQ.KDSTAR)  THEN
        ICHAR = -1
        GO TO 1000
      ELSE
        CALL MESSA (6, 3, JBUF-1)
        CALL SKDELW (1)
        GOTO 10
      ENDIF
 
  100 IS = -1
      JBUF = JBUF + 1
   
  200 CALL SKNONB
        IF (IBUF(JBUF).EQ.KDSTAR.OR.IBUF(JBUF).EQ.KDNUM)  THEN
          IEND = 1
          GO TO 400
        ENDIF
        JB = JBUF
        IF (IS.GE.0)  GO TO 220
 
C-      CHARACTER NUMBER.
        CALL SKB
        JE = JBUF - 1
        IF (IBUF(JE).NE.KDSTOP)  GO TO 700
        IF (JB.GE.JE)  GO TO 710
        CALL IDKOD (ICR, IBUF(JB), JE-JB, IERR)
        IF (IERR.NE.0)  GO TO 720
        IF (ICR.LT.1.OR.ICR.GT.NC)  GO TO 730
        IF (IC.GE.0.AND.ICR.NE.IC+1)  GO TO 740
        IC = ICR
        IS = 0
        CALL PROGRS (2, IC, IC, NC, IDUM, 1)
        GO TO 300
 
C-      STATE NUMBER.
  220   IS = IS + 1
        IF (ITYPC(IC).GE.5)  GOTO 780
        IF (NSTAT(IC).LE.1.AND.ITYPC(IC).GE.3)  GO TO 300
        CALL SKB
        JE = JBUF - 1
        IF (IBUF(JE).NE.KDSTOP)  GO TO 705
        IF (JB.GE.JE)  GO TO 710
        IF (LKVAL.GT.0)  GO TO 240
        CALL IDKOD (ISR, IBUF(JB), JE-JB, IERR)
        IF (IERR.NE.0)  GO TO 720
        GO TO 260
  240   DO 244 ISR = 1, MS
          IF (KVAL(ISR).EQ.IBUF(JB))  GO TO 250
  244     CONTINUE
        IERR = 1
        GO TO 725
  250   IF (JE.EQ.JB+1)  GO TO 260
        IERR = 2
        GO TO 725
  260   IF (ISR.LE.0.OR.ISR.GT.NSTAT(IC))  GO TO 750
        IF (ISR.NE.IS)  GO TO 745
 
C      CHARACTER OR STATE DESCRIPTION.
C      Save value of JIDAT in JIDAT0.
  300  JIDAT0 = JIDAT
        CALL SENTNC (IDAT, LIDAT, 1, JIDAT, ICHAR)
        IF (ICHAR.LT.0)  IERR = 1
        IF (ICHAR.EQ.-1)  THEN
          CALL MESSA (7, 3, JBUF)
          GO TO 900
        ENDIF
        GO TO 200
   
  400 IF(IERR.GT.0)  GOTO 900
 
C     CHECK VALIDITY.
 
C     TEXT CHARACTERS.
      IF (ITYPC(IC).EQ.5)  THEN
        IF (IS.GT.0)  GOTO 780
        GOTO 1000
      ENDIF
 
C     NUMERICS.
      IF (ITYPC(IC).GE.3)  THEN
C       Check for empty units and ignore if present.
        IF (IS.GT.0.AND.JIDAT-JIDAT0.LT.3) IS = IS - 1
        IF (IKEYCH.EQ.0)  THEN
C         ORDINARY CHARACTER LIST.
          IF (IS.GT.1)  GOTO 770
          NSTAT(IC) = IS
        ELSE
C         KEY CHARACTER LIST.
          IF (IS.GT.1.AND.IS.NE.NSTAT(IC))  GOTO 760
          NSTAT(IC) = IS
        ENDIF
 
C     MULTISTATES.
      ELSE
        IF (IS.NE.NSTAT(IC))  GOTO 760
      ENDIF
      GOTO 1000
 
C--   ERROR MESSAGES.
  700 IERRNO = 8
      IPOINT = JE
      GO TO 800
  705 IERRNO = 9
      IPOINT = JE
      GO TO 800
  710 IERRNO = 10
      IPOINT = JB
      GO TO 800
  720 IERRNO = 11
      IPOINT = JB + IERR - 1
      GO TO 800
  725 IERRNO = 12
      IPOINT = JB + IERR - 1
      GO TO 800
  730 IERRNO = 13
      CALL MESSB (IERRNO, NC, 1, 3, JB)
      GO TO 900
  740 IERRNO = 14
      IPOINT = JB
      GO TO 800
  745 IERRNO = 15
      IPOINT = JB
      GO TO 800
  750 IERRNO = 138
      IPOINT = JB
      IVAL = NSTAT(IC)
      GO TO 810
  760 IERRNO = 17
      IPOINT = JBUF - 1
      IVAL = NSTAT(IC)
      GOTO 810
  770 IERRNO = 18
      IPOINT = JBUF - 1
      GOTO 800
  780 IERRNO = 19
      IPOINT = JBUF - 1
 
  800 CALL MESSA (IERRNO, 3, IPOINT)
      GOTO 900
 
  810 CALL MESSB (IERRNO, IVAL, 1, 3, IPOINT)
 
  900 ICHAR = 0
      IERR = 1
      JIDAT = 1
      CALL SKDELW (1)
      GOTO 1000
 
C     IF (IEND.GT.0)  GOTO 1000
C 910 JBUF = JBUF + 1
C        IF (JBUF.GT.JEDAT)  CALL RDBUF
C        IF (IBUF(JBUF).EQ.KDSTAR .OR. IBUF(JBUF).EQ.KDNUM .OR.
C     *    IBUF(JBUF).EQ.KDSOL)  GOTO 200
C        GOTO 910
C       CALL SENTNC (IDAT, LIDAT, 1, JIDAT, ICHAR)
C       GOTO 200
C--
 1000 IF (IERR.NE.0)  THEN
        IC = -1
        JIDAT = 1
      ENDIF
      IDAT(1) = JIDAT
      RETURN
      END
      SUBROUTINE STO (IA, J, L)                                             CHAR
 
C* REVISED 20-FEB-96.
C* STORES DATA IN SPECIAL STORAGE.
 
C  IA RECEIVES THE DATA.
C  J RECEIVES AND RETURNS THE LAST POSITION OF SPECIAL STORAGE
C    WHICH IS IN USE, MEASURED IN STORAGE UNITS (RECORDS).
C  L RECEIVES THE LENGTH OF THE DATA, IN WORDS.
 
      DIMENSION IA(L)
      CHARACTER*60 S
 
C     ***NOTE:  THE LENGTH OF IBUF MUST BE GREATER THAN OR EQUAL TO THE RECORD
C     LENGTH OF SPECIAL-STORAGE RECORDS I.E. LRECSS (CURRENTLY 128)
C     WE ARE USING A LOCAL ARRAY TO DO THE TRANSFER BECAUSE OF PROBLEMS
C     IN THE WINDOWS VERSION OF CONFOR WITH ARRAY INDICES > 64K.
      DIMENSION IBUF(128)
 
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
      COMMON /SCRNMX/ SCRNAM(7)
        CHARACTER*8 SCRNAM
      COMMON /SCRXXX/ LUNTS1,LUNTS2,LUNTS3,LUNTS4,LUNTS5,LUNTS6,LUNTS7
      COMMON /STOXXX/ ISTYPE,LRECSS
 
      IF (J.LE.0) THEN
        CALL GETAU (LUN)
        S = SCRNAM(3)
        CALL SETLUN (S, LUN, LUNTS3)
        CALL UOPEN (LUN, LUNUSE(LUN), S, LRECSS, IERR)
        IF (IERR.NE.0)  CALL MESSB (20, 3, 1, -1, 0)
      ENDIF
 
      M = (L+LRECSS-1)/LRECSS
      DO 50 K = 1, M
        IB = (K-1)*LRECSS + 1
        IE = MIN0(K*LRECSS,L)
        N = 0
        DO I = IB, IE
          N = N + 1
          IBUF(N) = IA(I)
        ENDDO
        J = J + 1
        WRITE (LUNS3, REC=J) (IBUF(I),I=1,N)
   50 CONTINUE
 
      RETURN
      END
      SUBROUTINE STOREC (IDAT,ICSTR, LLANG, LIDAT,                         CHAR
     * ICDES, LCDES, NC, IC, JCSTR, LCSTR, LW)
 
C* REVISED 18-JUN-99.
C* STORES CHARACTER DESCRIPTION.
 
C  IDAT RECEIVES THE CHARACTER DESCRIPTION.
C  ICSTR RETURNS THE STORED DESCRIPTION IF ISTYPE.EQ.1.
C  LLANG RECEIVES THE INFORMATION FROM THE ALTERNATE LANGUAGES DIRECTIVE.
C  ICDES RETURNS THE STARTING POSITION OF THE STORED DESCRIPTION
C    (IN WORDS FOR MEMORY STORAGE, OR RECORDS FOR DISC STORAGE).
C  LCDES RETURNS THE LENGTH OF THE CHARACTER DESCRIPTION, AS STORED
C    (IN WORDS).
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  IC RECEIVES THE CURRENT CHARACTER NUMBER.
C  JCSTR RECEIVES AND RETURNS THE NUMBER OF ELEMENTS OF THE
C     CHARACTER-STORAGE MEDIUM IN USE (IN WORDS FOR MEMORY STORAGE, OR
C    RECORDS FOR DISC STORAGE).
C  LCSTR RECEIVES THE LENGTH OF ICSTR.
C  LW RECEIVES THE LENGTH OF BLANK COMMON.
 
      DIMENSION IDAT(LIDAT),ICSTR(LCSTR),LLANG(LIDAT),
     * ICDES(NC),LCDES(NC)
 
      COMMON /LANGXX/ IUSELNG1,IUSELNG2,NLANG
      COMMON /MISXXX/ IMPVAL,IPACH,IPCHN,IPUNC,IRAB,IKEYCH,ICMPRS,
     * ITUNC,ITINAP,ITIMPL,IUNVAR,LNKC,IDEPC,LICDEP,IPSUMM,ICHSEQ,
     * ITMSEQ,INSRVA,IFATT,ITINTR,ICMAND,IUNRNG,IOMTOR,NEWFLS,IRSEMI,
     * IOMSTC,IADDCH,IEMPCH,IVARUN,ISCALC,ICNOTE,ICIMGE,ITIMGE,MTIMGE,
     * NTIMGE,IOMNSC,IOMCMT,IOMLOW,IERRPC,IERRAB,ICHNSE,NUMST0,IUMEAN,
     * NADNAM,NEMNAM,NODELO,IOMUSP,ICKYIMG,ITKYIMG,ISUPIMG,ICTIMGE,
     * ICTNAME,IHTML,IRTF,MTHEAD,NTHEAD,ITMHDGS,LCDNAM,MTFILE,NTFILE,
     * ITMFILS,MXHEAD,NXHEAD,IDXHDGS,INSIMGFN,ICOFILE,IUCC,IOUNC,ITLINK,
     * MTLINK,NTLINK,NAUTOCC,IOUTSUBJ
      COMMON /STOXXX/ ISTYPE,LRECSS
      COMMON /TRNXXX/ IPCHAR,IPITEM,IPNAME,ITRAN
      COMMON /TPSXXX/ ITPSET,NTYPMK,IFBEGIN,IFEND
C
      IF (ITRAN.EQ.0 .AND. IPCHAR.EQ.0 .AND. ITUNC.EQ.0)  GO TO 8000
C
C--   IF NECESSARY, REMOVE TYPESETTING INSTRUCTIONS.
      IF (ITPSET.GE.0)  GO TO 550
      JG = 2
      JGI = 2
  500 IF (JG.GT.IDAT(1))  GO TO 520
        L = IDAT(JG)
        CALL OTPSEN (IDAT(JG), IDAT(JGI), LIDAT)
        JG = JG + L
        JGI = JGI + IDAT(JGI)
        GO TO 500
  520 IDAT(1) = JGI - 1
 
C--   EXTRACT SPECIFIED LANGUAGE.
  550 IF (NLANG.EQ.0.OR.IUSELNG1.EQ.0)  GOTO 1000
      CALL LANGSEN (IDAT, LIDAT, LLANG, LIDAT, 1)
C
C--   STORE DESCRIPTION.
 1000 ICDES(IC) = JCSTR + 1
      LCDES(IC) = IDAT(1)
      GO TO (1100,1200), ISTYPE
C
C-    STANDARD STORAGE - ORDINARY MEMORY.
 1100 IF (JCSTR+IDAT(1).LE.LCSTR)  GO TO 1110
      MORELW = LW + JCSTR + IDAT(1) - LCSTR
      CALL MORMEM (MORELW, LW)
 1110 CALL COPIA (IDAT, ICSTR(JCSTR+1), IDAT(1))
      JCSTR = JCSTR + IDAT(1)
      GO TO 8000
C
C-    SPECIAL STORAGE - DISC ETC.
 1200 CALL STO (IDAT, JCSTR, IDAT(1))
C--
 8000 RETURN
      END
