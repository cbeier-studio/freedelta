      SUBROUTINE CON4 (ICPH, JE)                                            DIR4
 
C* REVISED 30-JUN-99.
C* IDENTIFIES TYPE 4 CONTROL PHRASE.
 
C  ICPH. A CONTROL PHRASE IS FOUND, ICPH RETURNS ITS NUMBER.
C    OTHERWISE, IT RETURNS 0.
C  JE. IF A CONTROL PHRASE IS FOUND, JE RETURNS THE POSITION IN IBUF
C    IMMEDIATELY AFTER THE END OF THE PHRASE.
C
      CHARACTER*1 ICON(12,97)                                                 =*
C
      COMMON /DIR4XX/ NCON4,JDIR4(97)
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
C
C     1 CHARACTER RELIABILITIES
      DATA ICON(1,1),ICON(2,1),ICON(3,1),ICON(4,1),ICON(5,1),ICON(6,1),
     * ICON(7,1),ICON(8,1),ICON(9,1),ICON(10,1),ICON(11,1),ICON(12,1)
     * /'C','H','A','R','E','L',' ',' ',' ',' ',' ',' '/
C     2 CHARACTER WEIGHTS
      DATA ICON(1,2),ICON(2,2),ICON(3,2),ICON(4,2),ICON(5,2),ICON(6,2),
     * ICON(7,2),ICON(8,2),ICON(9,2),ICON(10,2),ICON(11,2),ICON(12,2)
     * /'C','H','A','W','E','I',' ',' ',' ',' ',' ',' '/
C     3 EXCLUDE CHARACTERS
      DATA ICON(1,3),ICON(2,3),ICON(3,3),ICON(4,3),ICON(5,3),ICON(6,3),
     * ICON(7,3),ICON(8,3),ICON(9,3),ICON(10,3),ICON(11,3),ICON(12,3)
     * /'E','X','C','C','H','A',' ',' ',' ',' ',' ',' '/
C     4 INCLUDE CHARACTERS
      DATA ICON(1,4),ICON(2,4),ICON(3,4),ICON(4,4),ICON(5,4),ICON(6,4),
     * ICON(7,4),ICON(8,4),ICON(9,4),ICON(10,4),ICON(11,4),ICON(12,4)
     * /'I','N','C','C','H','A',' ',' ',' ',' ',' ',' '/
C     5 DECIMAL PLACES
      DATA ICON(1,5),ICON(2,5),ICON(3,5),ICON(4,5),ICON(5,5),ICON(6,5),
     * ICON(7,5),ICON(8,5),ICON(9,5),ICON(10,5),ICON(11,5),ICON(12,5)
     * /'D','E','C','P','L','A',' ',' ',' ',' ',' ',' '/
C     6 ITEM ABUNDANCES
      DATA ICON(1,6),ICON(2,6),ICON(3,6),ICON(4,6),ICON(5,6),ICON(6,6),
     * ICON(7,6),ICON(8,6),ICON(9,6),ICON(10,6),ICON(11,6),ICON(12,6)
     * /'I','T','E','A','B','U',' ',' ',' ',' ',' ',' '/
C     7 ITEM WEIGHTS
      DATA ICON(1,7),ICON(2,7),ICON(3,7),ICON(4,7),ICON(5,7),ICON(6,7),
     * ICON(7,7),ICON(8,7),ICON(9,7),ICON(10,7),ICON(11,7),ICON(12,7)
     * /'I','T','E','W','E','I',' ',' ',' ',' ',' ',' '/
C     8 EXCLUDE ITEMS
      DATA ICON(1,8),ICON(2,8),ICON(3,8),ICON(4,8),ICON(5,8),ICON(6,8),
     * ICON(7,8),ICON(8,8),ICON(9,8),ICON(10,8),ICON(11,8),ICON(12,8)
     * /'E','X','C','I','T','E',' ',' ',' ',' ',' ',' '/
C     9 INCLUDE ITEMS
      DATA ICON(1,9),ICON(2,9),ICON(3,9),ICON(4,9),ICON(5,9),ICON(6,9),
     * ICON(7,9),ICON(8,9),ICON(9,9),ICON(10,9),ICON(11,9),ICON(12,9)
     * /'I','N','C','I','T','E',' ',' ',' ',' ',' ',' '/
C     10 KEY STATES
      DATA ICON(1,10),ICON(2,10),ICON(3,10),ICON(4,10),ICON(5,10),
     * ICON(6,10),ICON(7,10),ICON(8,10),ICON(9,10),ICON(10,10),
     * ICON(11,10),ICON(12,10)
     * /'K','E','Y','S','T','A',' ',' ',' ',' ',' ',' '/
C     11 INSERT CHARACTER SEQUENCE NUMBERS
      DATA ICON(1,11),ICON(2,11),ICON(3,11),ICON(4,11),ICON(5,11),
     * ICON(6,11),ICON(7,11),ICON(8,11),ICON(9,11),ICON(10,11),
     * ICON(11,11),ICON(12,11)
     * /'I','N','S','C','H','A','S','E','Q','N','U','M'/
C     12 TAXON IMAGES
      DATA ICON(1,12),ICON(2,12),ICON(3,12),ICON(4,12),ICON(5,12),
     * ICON(6,12),ICON(7,12),ICON(8,12),ICON(9,12),ICON(10,12),
     * ICON(11,12),ICON(12,12)
     * /'T','A','X','I','M','A',' ',' ',' ',' ',' ',' '/
C     13 NEW PARAGRAPHS AT CHARACTERS
      DATA ICON(1,13),ICON(2,13),ICON(3,13),ICON(4,13),ICON(5,13),
     * ICON(6,13),ICON(7,13),ICON(8,13),ICON(9,13),ICON(10,13),
     * ICON(11,13),ICON(12,13)
     * /'N','E','W','P','A','R','A','T',' ','C','H','A'/
C     14 OMIT CHARACTER NUMBERS
      DATA ICON(1,14),ICON(2,14),ICON(3,14),ICON(4,14),ICON(5,14),
     * ICON(6,14),ICON(7,14),ICON(8,14),ICON(9,14),ICON(10,14),
     * ICON(11,14),ICON(12,14)
     * /'O','M','I','C','H','A','N','U','M',' ',' ',' '/
C     15 PRINT ITEM NAMES
      DATA ICON(1,15),ICON(2,15),ICON(3,15),ICON(4,15),ICON(5,15),
     * ICON(6,15),ICON(7,15),ICON(8,15),ICON(9,15),ICON(10,15),
     * ICON(11,15),ICON(12,15)
     * /'P','R','I','I','T','E','N','A','M',' ',' ',' '/
C     16 SPECIAL STORAGE
      DATA ICON(1,16),ICON(2,16),ICON(3,16),ICON(4,16),ICON(5,16),
     * ICON(6,16),ICON(7,16),ICON(8,16),ICON(9,16),ICON(10,16),
     * ICON(11,16),ICON(12,16)
     * /'S','P','E','S','T','O',' ',' ',' ',' ',' ',' '/
C     17 TRANSLATE INTO
      DATA ICON(1,17),ICON(2,17),ICON(3,17),ICON(4,17),ICON(5,17),
     * ICON(6,17),ICON(7,17),ICON(8,17),ICON(9,17),ICON(10,17),
     * ICON(11,17),ICON(12,17)
     * /'T','R','A','I','N','T',' ',' ',' ',' ',' ',' '/
C     18 TREAT UNKNOWN AS VARIABLE
      DATA ICON(1,18),ICON(2,18),ICON(3,18),ICON(4,18),ICON(5,18),
     * ICON(6,18),ICON(7,18),ICON(8,18),ICON(9,18),ICON(10,18),
     * ICON(11,18),ICON(12,18)
     * /'T','R','E','U','N','K','A','S',' ','V','A','R'/
C     19 NUMBER STATES FROM ZERO
      DATA ICON(1,19),ICON(2,19),ICON(3,19),ICON(4,19),ICON(5,19),
     * ICON(6,19),ICON(7,19),ICON(8,19),ICON(9,19),ICON(10,19),
     * ICON(11,19),ICON(12,19)
     * /'N','U','M','S','T','A','F','R','O','Z','E','R'/  
C     20 PRINT CHARACTER LIST
      DATA ICON(1,20),ICON(2,20),ICON(3,20),ICON(4,20),ICON(5,20),
     * ICON(6,20),ICON(7,20),ICON(8,20),ICON(9,20),ICON(10,20),
     * ICON(11,20),ICON(12,20)
     * /'P','R','I','C','H','A','L','I','S',' ',' ',' '/
C     21 PRINT ITEM DESCRIPTIONS
      DATA ICON(1,21),ICON(2,21),ICON(3,21),ICON(4,21),ICON(5,21),
     * ICON(6,21),ICON(7,21),ICON(8,21),ICON(9,21),ICON(10,21),
     * ICON(11,21),ICON(12,21)
     * /'P','R','I','I','T','E','D','E','S',' ',' ',' '/
C     22 OMIT PERIOD FOR CHARACTERS.
      DATA ICON(1,22),ICON(2,22),ICON(3,22),ICON(4,22),ICON(5,22),
     * ICON(6,22),ICON(7,22),ICON(8,22),ICON(9,22),ICON(10,22),
     * ICON(11,22),ICON(12,22)
     * /'O','M','I','P','E','R','F','O','R','C','H','A'/
C     23 OMIT TYPESETTING MARKS
      DATA ICON(1,23),ICON(2,23),ICON(3,23),ICON(4,23),ICON(5,23),
     * ICON(6,23),ICON(7,23),ICON(8,23),ICON(9,23),ICON(10,23),
     * ICON(11,23),ICON(12,23)
     * /'O','M','I','T','Y','P','M','A','R',' ',' ',' '/
C     24 IMPLICIT VALUES
      DATA ICON(1,24),ICON(2,24),ICON(3,24),ICON(4,24),ICON(5,24),
     * ICON(6,24),ICON(7,24),ICON(8,24),ICON(9,24),ICON(10,24),
     * ICON(11,24),ICON(12,24)
     * /'I','M','P','V','A','L',' ',' ',' ',' ',' ',' '/
C     25 TRANSLATE UNCODED CHARACTERS
      DATA ICON(1,25),ICON(2,25),ICON(3,25),ICON(4,25),ICON(5,25),
     * ICON(6,25),ICON(7,25),ICON(8,25),ICON(9,25),ICON(10,25),
     * ICON(11,25),ICON(12,25)
     * /'T','R','A','U','N','C','C','H','A',' ',' ',' '/
C     26 PRINT ALL CHARACTERS
      DATA ICON(1,26),ICON(2,26),ICON(3,26),ICON(4,26),ICON(5,26),
     * ICON(6,26),ICON(7,26),ICON(8,26),ICON(9,26),ICON(10,26),
     * ICON(11,26),ICON(12,26)
     * /'P','R','I','A','L','L','C','H','A',' ',' ',' '/
C     27 LINK CHARACTERS
      DATA ICON(1,27),ICON(2,27),ICON(3,27),ICON(4,27),ICON(5,27),
     * ICON(6,27),ICON(7,27),ICON(8,27),ICON(9,27),ICON(10,27),
     * ICON(11,27),ICON(12,27)
     * /'L','I','N','C','H','A',' ',' ',' ',' ',' ',' '/
C     28 EMPHASIZE FEATURES
      DATA ICON(1,28),ICON(2,28),ICON(3,28),ICON(4,28),ICON(5,28),
     * ICON(6,28),ICON(7,28),ICON(8,28),ICON(9,28),ICON(10,28),
     * ICON(11,28),ICON(12,28)
     * /'E','M','P','F','E','A',' ',' ',' ',' ',' ',' '/
C     29 REPLACE ANGLE BRACKETS
      DATA ICON(1,29),ICON(2,29),ICON(3,29),ICON(4,29),ICON(5,29),
     * ICON(6,29),ICON(7,29),ICON(8,29),ICON(9,29),ICON(10,29),
     * ICON(11,29),ICON(12,29)
     * /'R','E','P','A','N','G','B','R','A',' ',' ',' '/
C     30 PRINT UNCODED CHARACTERS
      DATA ICON(1,30),ICON(2,30),ICON(3,30),ICON(4,30),ICON(5,30),
     * ICON(6,30),ICON(7,30),ICON(8,30),ICON(9,30),ICON(10,30),
     * ICON(11,30),ICON(12,30)
     * /'P','R','I','U','N','C','C','H','A',' ',' ',' '/
C     31 ITEM SUBHEADINGS
      DATA ICON(1,31),ICON(2,31),ICON(3,31),ICON(4,31),ICON(5,31),
     * ICON(6,31),ICON(7,31),ICON(8,31),ICON(9,31),ICON(10,31),
     * ICON(11,31),ICON(12,31)
     * /'I','T','E','S','U','B',' ',' ',' ',' ',' ',' '/
C     32 CHARACTER HEADINGS
      DATA ICON(1,32),ICON(2,32),ICON(3,32),ICON(4,32),ICON(5,32),
     * ICON(6,32),ICON(7,32),ICON(8,32),ICON(9,32),ICON(10,32),
     * ICON(11,32),ICON(12,32)
     * /'C','H','A','H','E','A',' ',' ',' ',' ',' ',' '/
C     33 TYPESETTING MARKS.
      DATA ICON(1,33),ICON(2,33),ICON(3,33),ICON(4,33),ICON(5,33),
     * ICON(6,33),ICON(7,33),ICON(8,33),ICON(9,33),ICON(10,33),
     * ICON(11,33),ICON(12,33)
     * /'T','Y','P','M','A','R',' ',' ',' ',' ',' ',' '/
C     34 ALLOWED VALUES
      DATA ICON(1,34),ICON(2,34),ICON(3,34),ICON(4,34),ICON(5,34),
     * ICON(6,34),ICON(7,34),ICON(8,34),ICON(9,34),ICON(10,34),
     * ICON(11,34),ICON(12,34)
     * /'A','L','L','V','A','L',' ',' ',' ',' ',' ',' '/
C      35 DEPENDENT CHARACTERS
      DATA ICON(1,35),ICON(2,35),ICON(3,35),ICON(4,35),ICON(5,35),
     * ICON(6,35),ICON(7,35),ICON(8,35),ICON(9,35),ICON(10,35),
     * ICON(11,35),ICON(12,35)
     * /'D','E','P','C','H','A',' ',' ',' ',' ',' ',' '/
C     36 LIST CHARACTERS
      DATA ICON(1,36),ICON(2,36),ICON(3,36),ICON(4,36),ICON(5,36),
     * ICON(6,36),ICON(7,36),ICON(8,36),ICON(9,36),ICON(10,36),
     * ICON(11,36),ICON(12,36)
     * /'L','I','S','C','H','A',' ',' ',' ',' ',' ',' '/
C     37 LIST ITEMS
      DATA ICON(1,37),ICON(2,37),ICON(3,37),ICON(4,37),ICON(5,37),
     * ICON(6,37),ICON(7,37),ICON(8,37),ICON(9,37),ICON(10,37),
     * ICON(11,37),ICON(12,37)
     * /'L','I','S','I','T','E',' ',' ',' ',' ',' ',' '/
C     38 TREAT INTEGER AS REAL
      DATA ICON(1,38),ICON(2,38),ICON(3,38),ICON(4,38),ICON(5,38),
     * ICON(6,38),ICON(7,38),ICON(8,38),ICON(9,38),ICON(10,38),
     * ICON(11,38),ICON(12,38)
     * /'T','R','E','I','N','T','A','S',' ','R','E','A'/
C      39 ACCEPT DUPLICATE VALUES
      DATA ICON(1,39),ICON(2,39),ICON(3,39),ICON(4,39),ICON(5,39),
     * ICON(6,39),ICON(7,39),ICON(8,39),ICON(9,39),ICON(10,39),
     * ICON(11,39),ICON(12,39)
     * /'A','C','C','D','U','P','V','A','L',' ',' ',' '/
C      40 OMIT INAPPLICABLES
      DATA ICON(1,40),ICON(2,40),ICON(3,40),ICON(4,40),ICON(5,40),
     * ICON(6,40),ICON(7,40),ICON(8,40),ICON(9,40),ICON(10,40),
     * ICON(11,40),ICON(12,40)
     * /'O','M','I','I','N','A',' ',' ',' ',' ',' ',' '/
C      41 INSERT IMPLICIT VALUES
      DATA ICON(1,41),ICON(2,41),ICON(3,41),ICON(4,41),ICON(5,41),
     * ICON(6,41),ICON(7,41),ICON(8,41),ICON(9,41),ICON(10,41),
     * ICON(11,41),ICON(12,41)
     * /'I','N','S','I','M','P','V','A','L',' ',' ',' '/
C      42 PRINT SUMMARY
      DATA ICON(1,42),ICON(2,42),ICON(3,42),ICON(4,42),ICON(5,42),
     * ICON(6,42),ICON(7,42),ICON(8,42),ICON(9,42),ICON(10,42),
     * ICON(11,42),ICON(12,42)
     * /'P','R','I','S','U','M',' ',' ',' ',' ',' ',' '/
C      43 DATA COMPRESSION
      DATA ICON(1,43),ICON(2,43),ICON(3,43),ICON(4,43),ICON(5,43),
     * ICON(6,43),ICON(7,43),ICON(8,43),ICON(9,43),ICON(10,43),
     * ICON(11,43),ICON(12,43)
     * /'D','A','T','C','O','M',' ',' ',' ',' ',' ',' '/
C     44 INSERT ITEM SEQUENCE NUMBERS
      DATA ICON(1,44),ICON(2,44),ICON(3,44),ICON(4,44),ICON(5,44),
     * ICON(6,44),ICON(7,44),ICON(8,44),ICON(9,44),ICON(10,44),
     * ICON(11,44),ICON(12,44)
     * /'I','N','S','I','T','E','S','E','Q','N','U','M'/
C     45 SEQUENCE INCREMENT
      DATA ICON(1,45),ICON(2,45),ICON(3,45),ICON(4,45),ICON(5,45),
     * ICON(6,45),ICON(7,45),ICON(8,45),ICON(9,45),ICON(10,45),
     * ICON(11,45),ICON(12,45)
     * /'S','E','Q','I','N','C',' ',' ',' ',' ',' ',' '/
C     46 STOP AFTER ITEM
      DATA ICON(1,46),ICON(2,46),ICON(3,46),ICON(4,46),ICON(5,46),
     * ICON(6,46),ICON(7,46),ICON(8,46),ICON(9,46),ICON(10,46),
     * ICON(11,46),ICON(12,46)
     * /'S','T','O','A','F','T','I','T','E',' ',' ',' '/
C     47 INSERT REDUNDANT VARIANT ATTRIBUTES
      DATA ICON(1,47),ICON(2,47),ICON(3,47),ICON(4,47),ICON(5,47),
     * ICON(6,47),ICON(7,47),ICON(8,47),ICON(9,47),ICON(10,47),
     * ICON(11,47),ICON(12,47)
     * /'I','N','S','R','E','D','V','A','R','A','T','T'/
C     48 OMIT REDUNDANT VARIANT ATTRIBUTES
      DATA ICON(1,48),ICON(2,48),ICON(3,48),ICON(4,48),ICON(5,48),
     * ICON(6,48),ICON(7,48),ICON(8,48),ICON(9,48),ICON(10,48),
     * ICON(11,48),ICON(12,48)
     * /'O','M','I','R','E','D','V','A','R','A','T','T'/
C     49 USE LAST VALUE CODED
      DATA ICON(1,49),ICON(2,49),ICON(3,49),ICON(4,49),ICON(5,49),
     * ICON(6,49),ICON(7,49),ICON(8,49),ICON(9,49),ICON(10,49),
     * ICON(11,49),ICON(12,49)
     * /'U','S','E','L','A','S','V','A','L','C','O','D'/
C     50 VOCABULARY
      DATA ICON(1,50),ICON(2,50),ICON(3,50),ICON(4,50),ICON(5,50),
     * ICON(6,50),ICON(7,50),ICON(8,50),ICON(9,50),ICON(10,50),
     * ICON(11,50),ICON(12,50)
     * /'V','O','C',' ',' ',' ',' ',' ',' ',' ',' ',' '/
C     51 APPLICABLE CHARACTERS
      DATA ICON(1,51),ICON(2,51),ICON(3,51),ICON(4,51),ICON(5,51),
     * ICON(6,51),ICON(7,51),ICON(8,51),ICON(9,51),ICON(10,51),
     * ICON(11,51),ICON(12,51)
     * /'A','P','P','C','H','A',' ',' ',' ',' ',' ',' '/
C     52 INAPPLICABLE CHARACTERS
      DATA ICON(1,52),ICON(2,52),ICON(3,52),ICON(4,52),ICON(5,52),
     * ICON(6,52),ICON(7,52),ICON(8,52),ICON(9,52),ICON(10,52),
     * ICON(11,52),ICON(12,52)
     * /'I','N','A','C','H','A',' ',' ',' ',' ',' ',' '/
C     53 USE NORMAL VALUES.
      DATA ICON(1,53),ICON(2,53),ICON(3,53),ICON(4,53),ICON(5,53),
     * ICON(6,53),ICON(7,53),ICON(8,53),ICON(9,53),ICON(10,53),
     * ICON(11,53),ICON(12,53)
     * /'U','S','E','N','O','R','V','A','L',' ',' ',' '/
C     54 MANDATORY CHARACTERS
      DATA ICON(1,54),ICON(2,54),ICON(3,54),ICON(4,54),ICON(5,54),
     * ICON(6,54),ICON(7,54),ICON(8,54),ICON(9,54),ICON(10,54),
     * ICON(11,54),ICON(12,54)
     * /'M','A','N','C','H','A',' ',' ',' ',' ',' ',' '/
C     55 OMIT OR FOR CHARACTERS
      DATA ICON(1,55),ICON(2,55),ICON(3,55),ICON(4,55),ICON(5,55),
     * ICON(6,55),ICON(7,55),ICON(8,55),ICON(9,55),ICON(10,55),
     * ICON(11,55),ICON(12,55)
     * /'O','M','I','O','R',' ','F','O','R','C','H','A'/
C     56 NEW FILES AT ITEMS
      DATA ICON(1,56),ICON(2,56),ICON(3,56),ICON(4,56),ICON(5,56),
     * ICON(6,56),ICON(7,56),ICON(8,56),ICON(9,56),ICON(10,56),
     * ICON(11,56),ICON(12,56)
     * /'N','E','W','F','I','L','A','T',' ','I','T','E'/
C     57 REPLACE SEMICOLON BY COMMA
      DATA ICON(1,57),ICON(2,57),ICON(3,57),ICON(4,57),ICON(5,57),
     * ICON(6,57),ICON(7,57),ICON(8,57),ICON(9,57),ICON(10,57),
     * ICON(11,57),ICON(12,57)
     * /'R','E','P','S','E','M','B','Y',' ','C','O','M'/
C     58 REPLACE STATE CODES
      DATA ICON(1,58),ICON(2,58),ICON(3,58),ICON(4,58),ICON(5,58),
     * ICON(6,58),ICON(7,58),ICON(8,58),ICON(9,58),ICON(10,58),
     * ICON(11,58),ICON(12,58)
     * /'R','E','P','S','T','A','C','O','D',' ',' ',' '/
C     59 ADD CHARACTERS
      DATA ICON(1,59),ICON(2,59),ICON(3,59),ICON(4,59),ICON(5,59),
     * ICON(6,59),ICON(7,59),ICON(8,59),ICON(9,59),ICON(10,59),
     * ICON(11,59),ICON(12,59)
     * /'A','D','D','C','H','A',' ',' ',' ',' ',' ',' '/
C     60 EMPHASIZE CHARACTERS
      DATA ICON(1,60),ICON(2,60),ICON(3,60),ICON(4,60),ICON(5,60),
     * ICON(6,60),ICON(7,60),ICON(8,60),ICON(9,60),ICON(10,60),
     * ICON(11,60),ICON(12,60)
     * /'E','M','P','C','H','A',' ',' ',' ',' ',' ',' '/
C     61 TREAT VARIABLE AS UNKNOWN
      DATA ICON(1,61),ICON(2,61),ICON(3,61),ICON(4,61),ICON(5,61),
     * ICON(6,61),ICON(7,61),ICON(8,61),ICON(9,61),ICON(10,61),
     * ICON(11,61),ICON(12,61)
     * /'T','R','E','V','A','R','A','S',' ','U','N','K'/
C     62 SCALE CHARACTERS
      DATA ICON(1,62),ICON(2,62),ICON(3,62),ICON(4,62),ICON(5,62),
     * ICON(6,62),ICON(7,62),ICON(8,62),ICON(9,62),ICON(10,62),
     * ICON(11,62),ICON(12,62)
     * /'S','C','A','C','H','A',' ',' ',' ',' ',' ',' '/
C     63 SORT STATES
      DATA ICON(1,63),ICON(2,63),ICON(3,63),ICON(4,63),ICON(5,63),
     * ICON(6,63),ICON(7,63),ICON(8,63),ICON(9,63),ICON(10,63),
     * ICON(11,63),ICON(12,63)
     * /'S','O','R','S','T','A',' ',' ',' ',' ',' ',' '/
C     64 CHARACTER NOTES.
      DATA ICON(1,64),ICON(2,64),ICON(3,64),ICON(4,64),ICON(5,64),
     * ICON(6,64),ICON(7,64),ICON(8,64),ICON(9,64),ICON(10,64),
     * ICON(11,64),ICON(12,64)
     * /'C','H','A','N','O','T',' ',' ',' ',' ',' ',' '/
C     65 FORMATTING MARKS.
      DATA ICON(1,65),ICON(2,65),ICON(3,65),ICON(4,65),ICON(5,65),
     * ICON(6,65),ICON(7,65),ICON(8,65),ICON(9,65),ICON(10,65),
     * ICON(11,65),ICON(12,65)
     * /'F','O','R','M','A','R',' ',' ',' ',' ',' ',' '/ 
C     66 USE MEAN VALUES.
      DATA ICON(1,66),ICON(2,66),ICON(3,66),ICON(4,66),ICON(5,66),
     * ICON(6,66),ICON(7,66),ICON(8,66),ICON(9,66),ICON(10,66),
     * ICON(11,66),ICON(12,66)
     * /'U','S','E','M','E','A','V','A','L',' ',' ',' '/
C     67 DISABLE DELTA OUTPUT
      DATA ICON(1,67),ICON(2,67),ICON(3,67),ICON(4,67),ICON(5,67),
     * ICON(6,67),ICON(7,67),ICON(8,67),ICON(9,67),ICON(10,67),
     * ICON(11,67),ICON(12,67)
     * /'D','I','S','D','E','L','O','U','T',' ',' ',' '/  
C     68 OMIT SPACE BEFORE UNITS
      DATA ICON(1,68),ICON(2,68),ICON(3,68),ICON(4,68),ICON(5,68),
     * ICON(6,68),ICON(7,68),ICON(8,68),ICON(9,68),ICON(10,68),
     * ICON(11,68),ICON(12,68)
     * /'O','M','I','S','P','A','B','E','F','U','N','I'/  
C     69 CHARACTER IMAGES
      DATA ICON(1,69),ICON(2,69),ICON(3,69),ICON(4,69),ICON(5,69),
     * ICON(6,69),ICON(7,69),ICON(8,69),ICON(9,69),ICON(10,69),
     * ICON(11,69),ICON(12,69)
     * /'C','H','A','I','M','A',' ',' ',' ',' ',' ',' '/  
C     70 CHARACTER FOR TAXON IMAGES
      DATA ICON(1,70),ICON(2,70),ICON(3,70),ICON(4,70),ICON(5,70),
     * ICON(6,70),ICON(7,70),ICON(8,70),ICON(9,70),ICON(10,70),
     * ICON(11,70),ICON(12,70)
     * /'C','H','A','F','O','R','T','A','X','I','M','A'/  
C     71 OMIT INNER COMMENTS
      DATA ICON(1,71),ICON(2,71),ICON(3,71),ICON(4,71),ICON(5,71),
     * ICON(6,71),ICON(7,71),ICON(8,71),ICON(9,71),ICON(10,71),
     * ICON(11,71),ICON(12,71)
     * /'O','M','I','I','N','N','C','O','M',' ',' ',' '/  
C     72 OMIT COMMENTS
      DATA ICON(1,72),ICON(2,72),ICON(3,72),ICON(4,72),ICON(5,72),
     * ICON(6,72),ICON(7,72),ICON(8,72),ICON(9,72),ICON(10,72),
     * ICON(11,72),ICON(12,72)
     * /'O','M','I','C','O','M',' ',' ',' ',' ',' ',' '/  
C     73 OMIT LOWER FOR CHARACTERS
      DATA ICON(1,73),ICON(2,73),ICON(3,73),ICON(4,73),ICON(5,73),
     * ICON(6,73),ICON(7,73),ICON(8,73),ICON(9,73),ICON(10,73),
     * ICON(11,73),ICON(12,73)
     * /'O','M','I','L','O','W','F','O','R','C','H','A'/  
C     74 PERCENT ERROR
      DATA ICON(1,74),ICON(2,74),ICON(3,74),ICON(4,74),ICON(5,74),
     * ICON(6,74),ICON(7,74),ICON(8,74),ICON(9,74),ICON(10,74),
     * ICON(11,74),ICON(12,74)
     * /'P','E','R','E','R','R',' ',' ',' ',' ',' ',' '/  
C     75 ABSOLUTE ERROR
      DATA ICON(1,75),ICON(2,75),ICON(3,75),ICON(4,75),ICON(5,75),
     * ICON(6,75),ICON(7,75),ICON(8,75),ICON(9,75),ICON(10,75),
     * ICON(11,75),ICON(12,75)
     * /'A','B','S','E','R','R',' ',' ',' ',' ',' ',' '/  
C     76 OMIT FINAL COMMA
      DATA ICON(1,76),ICON(2,76),ICON(3,76),ICON(4,76),ICON(5,76),
     * ICON(6,76),ICON(7,76),ICON(8,76),ICON(9,76),ICON(10,76),
     * ICON(11,76),ICON(12,76)
     * /'O','M','I','F','I','N','C','O','M',' ',' ',' '/  
C     77 ALTERNATE COMMA
      DATA ICON(1,77),ICON(2,77),ICON(3,77),ICON(4,77),ICON(5,77),
     * ICON(6,77),ICON(7,77),ICON(8,77),ICON(9,77),ICON(10,77),
     * ICON(11,77),ICON(12,77)
     * /'A','L','T','C','O','M',' ',' ',' ',' ',' ',' '/  
C     78 CHINESE FORMAT
      DATA ICON(1,78),ICON(2,78),ICON(3,78),ICON(4,78),ICON(5,78),
     * ICON(6,78),ICON(7,78),ICON(8,78),ICON(9,78),ICON(10,78),
     * ICON(11,78),ICON(12,78)
     * /'C','H','I','F','O','R',' ',' ',' ',' ',' ',' '/  
C     79 STARTUP IMAGE
      DATA ICON(1,79),ICON(2,79),ICON(3,79),ICON(4,79),ICON(5,79),
     * ICON(6,79),ICON(7,79),ICON(8,79),ICON(9,79),ICON(10,79),
     * ICON(11,79),ICON(12,79)
     * /'S','T','A','I','M','A',' ',' ',' ',' ',' ',' '/  
C     80 CHARACTER KEYWORD IMAGES
      DATA ICON(1,80),ICON(2,80),ICON(3,80),ICON(4,80),ICON(5,80),
     * ICON(6,80),ICON(7,80),ICON(8,80),ICON(9,80),ICON(10,80),
     * ICON(11,80),ICON(12,80)
     * /'C','H','A','K','E','Y','I','M','A',' ',' ',' '/  
C     81 TAXON KEYWORD IMAGES
      DATA ICON(1,81),ICON(2,81),ICON(3,81),ICON(4,81),ICON(5,81),
     * ICON(6,81),ICON(7,81),ICON(8,81),ICON(9,81),ICON(10,81),
     * ICON(11,81),ICON(12,81)
     * /'T','A','X','K','E','Y','I','M','A',' ',' ',' '/  
C     82 CHARACTER FOR TAXON NAME
      DATA ICON(1,82),ICON(2,82),ICON(3,82),ICON(4,82),ICON(5,82),
     * ICON(6,82),ICON(7,82),ICON(8,82),ICON(9,82),ICON(10,82),
     * ICON(11,82),ICON(12,82)
     * /'C','H','A','F','O','R','T','A','X','N','A','M'/  
C     83 CHARACTERS FOR SYNONYMY
      DATA ICON(1,83),ICON(2,83),ICON(3,83),ICON(4,83),ICON(5,83),
     * ICON(6,83),ICON(7,83),ICON(8,83),ICON(9,83),ICON(10,83),
     * ICON(11,83),ICON(12,83)
     * /'C','H','A','F','O','R','S','Y','N',' ',' ',' '/  
C     84 OUTPUT FORMAT HTML
      DATA ICON(1,84),ICON(2,84),ICON(3,84),ICON(4,84),ICON(5,84),
     * ICON(6,84),ICON(7,84),ICON(8,84),ICON(9,84),ICON(10,84),
     * ICON(11,84),ICON(12,84)
     * /'O','U','T','F','O','R','H','T','M',' ',' ',' '/  
C     85 ALTERNATE LANGUAGES
      DATA ICON(1,85),ICON(2,85),ICON(3,85),ICON(4,85),ICON(5,85),
     * ICON(6,85),ICON(7,85),ICON(8,85),ICON(9,85),ICON(10,85),
     * ICON(11,85),ICON(12,85)
     * /'A','L','T','L','A','N',' ',' ',' ',' ',' ',' '/  
C     86 USE LANGUAGE
      DATA ICON(1,86),ICON(2,86),ICON(3,86),ICON(4,86),ICON(5,86),
     * ICON(6,86),ICON(7,86),ICON(8,86),ICON(9,86),ICON(10,86),
     * ICON(11,86),ICON(12,86)
     * /'U','S','E','L','A','N',' ',' ',' ',' ',' ',' '/  
C     87 OUTPUT FORMAT RTF
      DATA ICON(1,87),ICON(2,87),ICON(3,87),ICON(4,87),ICON(5,87),
     * ICON(6,87),ICON(7,87),ICON(8,87),ICON(9,87),ICON(10,87),
     * ICON(11,87),ICON(12,87)           
     * /'O','U','T','F','O','R','R','T','F',' ',' ',' '/  
C     88 ITEM HEADINGS
      DATA ICON(1,88),ICON(2,88),ICON(3,88),ICON(4,88),ICON(5,88),
     * ICON(6,88),ICON(7,88),ICON(8,88),ICON(9,88),ICON(10,88),
     * ICON(11,88),ICON(12,88)           
     * /'I','T','E','H','E','A',' ',' ',' ',' ',' ',' '/  
C     89 ITEM OUTPUT FILES.
      DATA ICON(1,89),ICON(2,89),ICON(3,89),ICON(4,89),ICON(5,89),
     * ICON(6,89),ICON(7,89),ICON(8,89),ICON(9,89),ICON(10,89),
     * ICON(11,89),ICON(12,89)           
     * /'I','T','E','O','U','T','F','I','L',' ',' ',' '/  
C     90 INDEX HEADINGS
      DATA ICON(1,90),ICON(2,90),ICON(3,90),ICON(4,90),ICON(5,90),
     * ICON(6,90),ICON(7,90),ICON(8,90),ICON(9,90),ICON(10,90),
     * ICON(11,90),ICON(12,90)           
     * /'I','N','D','H','E','A',' ',' ',' ',' ',' ',' '/  
C     91 INSERT IMAGE FILE NAME
      DATA ICON(1,91),ICON(2,91),ICON(3,91),ICON(4,91),ICON(5,91),
     * ICON(6,91),ICON(7,91),ICON(8,91),ICON(9,91),ICON(10,91),
     * ICON(11,91),ICON(12,91)           
     * /'I','N','S','I','M','A','F','I','L','N','A','M'/  
C     92 CHARACTER FOR OUTPUT FILES
      DATA ICON(1,92),ICON(2,92),ICON(3,92),ICON(4,92),ICON(5,92),
     * ICON(6,92),ICON(7,92),ICON(8,92),ICON(9,92),ICON(10,92),
     * ICON(11,92),ICON(12,92)           
     * /'C','H','A','F','O','R','O','U','T','F','I','L'/  
C     93 USE CONTROLLING CHARACTER FIRST
      DATA ICON(1,93),ICON(2,93),ICON(3,93),ICON(4,93),ICON(5,93),
     * ICON(6,93),ICON(7,93),ICON(8,93),ICON(9,93),ICON(10,93),
     * ICON(11,93),ICON(12,93)
     * /'U','S','E','C','O','N','C','H','A','F','I','R'/  
C     94 INSERT UNCODED ATTRIBUTES
      DATA ICON(1,94),ICON(2,94),ICON(3,94),ICON(4,94),ICON(5,94),
     * ICON(6,94),ICON(7,94),ICON(8,94),ICON(9,94),ICON(10,94),
     * ICON(11,94),ICON(12,94)
     * /'I','N','S','U','N','C','A','T','T',' ',' ',' '/  
C     95 TAXON LINKS
      DATA ICON(1,95),ICON(2,95),ICON(3,95),ICON(4,95),ICON(5,95),
     * ICON(6,95),ICON(7,95),ICON(8,95),ICON(9,95),ICON(10,95),
     * ICON(11,95),ICON(12,95)
     * /'T','A','X','L','I','N',' ',' ',' ',' ',' ',' '/  
C     96 NONAUTOMATIC CONTROLLING CHARACTERS
      DATA ICON(1,96),ICON(2,96),ICON(3,96),ICON(4,96),ICON(5,96),
     * ICON(6,96),ICON(7,96),ICON(8,96),ICON(9,96),ICON(10,96),
     * ICON(11,96),ICON(12,96)
     * /'N','O','N','C','O','N','C','H','A',' ',' ',' '/  
C     97 SUBJECT FOR OUTPUT FILES
      DATA ICON(1,97),ICON(2,97),ICON(3,97),ICON(4,97),ICON(5,97),
     * ICON(6,97),ICON(7,97),ICON(8,97),ICON(9,97),ICON(10,97),
     * ICON(11,97),ICON(12,97)
     * /'S','U','B','F','O','R','O','U','T','F','I','L'/  

C
      CALL CONPHR (ICON, 12, NCON4, 3, IBUF, JBUF+1, JEDAT-1, ICPH, JE)
      RETURN
      END
      SUBROUTINE DIR4 (IR, W, IW, LW)                                       DIR4
 
C* REVISED 25-OCT-00.
C* READS AND PROCESSES TYPE 4 DIRECTIVES.
 
C  IR RETURNS 1 IF THE CURRENT DIRECTIVE IS TYPE 4, 0 OTHERWISE.
 
C  ON ENTRY, JBUF MUST BE POSITIONED AT A BLANK-STAR.
C  IF A DIRECTIVE IS PROCESSED -
C    NEW RECORDS ARE READ AS REQUIRED.
C    JBUF IS POSITIONED AT THE NEXT BLANK-STAR.
 
C  23/7/87. RELIABILITIES AND ABUNDANCES INITIALIZED TO 5
C    BEFORE PROCESSING DIRECTIVE.
 
      PARAMETER (NTRAN=11)                                                    =*
 
      DIMENSION W(LW),IW(LW)
      CHARACTER*1 KODTRA(6,NTRAN)
      CHARACTER TMP*6
 
      COMMON /ADRXXX/ IITYPC,IIMC,IIMI,IWTC,IWTI,INSTAT,IKSTAT,
     * INEWOR,INDEC,IICDES,ILCDES,IITMAD,IWW1C,IWW2C,IWW1I,IWW2I,
     * IWW1S,IWW2S,IIDAT,IIDAM,IIDAV,IIPARA,IIEMPF,ILINKC,IICHHD,
     * IITSHD,IISBND,IIVCON,IICDEP,ILSTDE,INEWFL,IIMPL1,IIMPL2,
     * IIMPFL,IISUMM,IICPTW,IICPTB,IITPTR,ILNAME,IINTRL,IMANDC,IRBND,
     * INBND,IITXPT,INORNG,IIOMOR,IIFILS,IIREPS,IIADDT,IIADDC,IIEMPT,
     * IIEMPC,IMINC,IMAXC,INUMRN,INAFLG,ISCALF,IISRTS,IICNOT,IICNGP,
     * IITYMK,IIFMT,IIOMPD,IIOMLO,IICIMG,IICIGP,IITIMG,IITREC,IPCERR,
     * IABERR,IIOMFC,IIALTC,IIADNM,IIADDL,IIEMNM,IIEMPL,IIOUSP,IICSYN,
     * IILANG,IICSTR,IITHD,IITHREC,IICDNAM,IITFIL,IITFREC,IIXHD,IIXHREC,
     * IIFNT,IIUSECC,IIFOFSET,IITLNK,IILREC,IITLNK2,IINAUTOCC,IIOSUBJ,
     * ILAST
      COMMON /BINXXX/ IENDRC,LENDRC,INSBLK
      COMMON /DIMXXX/ NC,MI,MS,LIDAT,LCSTR
      COMMON /DIR4XX/ NCON4,JDIR4(97)
      COMMON /FILXXX/ NFILE
      COMMON /FMTMKX/ IFMTMK,NFMTMK,FMTWRD(3),LFMTWD(3)
        CHARACTER*20 FMTWRD
      COMMON /INIXXX/ JI,JT,JIM,IVARIT,MASTIN,MISTOP
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /JSTXXX/ IOUT(132,5),LOUT,ICAP,
     * JIOUT(5),IENDWD(5),INDEN(5),LWIDTH(5),PSEQ,SEQINC,NSQDIG
      COMMON /LANGXX/ IUSELNG1,IUSELNG2,NLANG
      COMMON /LISXXX/ ILISTC,ILISTD,ILISTI,ILISTP,NEM(19),NEMM
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
      COMMON /MISXXX/ IMPVAL,IPACH,IPCHN,IPUNC,IRAB,IKEYCH,ICMPRS,
     * ITUNC,ITINAP,ITIMPL,IUNVAR,LNKC,IDEPC,LICDEP,IPSUMM,ICHSEQ,
     * ITMSEQ,INSRVA,IFATT,ITINTR,ICMAND,IUNRNG,IOMTOR,NEWFLS,IRSEMI,
     * IOMSTC,IADDCH,IEMPCH,IVARUN,ISCALC,ICNOTE,ICIMGE,ITIMGE,MTIMGE,
     * NTIMGE,IOMNSC,IOMCMT,IOMLOW,IERRPC,IERRAB,ICHNSE,NUMST0,IUMEAN,
     * NADNAM,NEMNAM,NODELO,IOMUSP,ICKYIMG,ITKYIMG,ISUPIMG,ICTIMGE,
     * ICTNAME,IHTML,IRTF,MTHEAD,NTHEAD,ITMHDGS,LCDNAM,MTFILE,NTFILE,
     * ITMFILS,MXHEAD,NXHEAD,IDXHDGS,INSIMGFN,ICOFILE,IUCC,IOUNC,ITLINK,
     * MTLINK,NTLINK,NAUTOCC,IOUTSUBJ
      COMMON /SCRNMX/ SCRNAM(7)
        CHARACTER*8 SCRNAM
      COMMON /SCRXXX/ LUNTS1,LUNTS2,LUNTS3,LUNTS4,LUNTS5,LUNTS6,LUNTS7
      COMMON /STOXXX/ ISTYPE,LRECSS
      COMMON /TPSXXX/ ITPSET,NTYPMK,IFBEGIN,IFEND
      COMMON /TRNXXX/ IPCHAR,IPITEM,IPNAME,ITRAN
      COMMON /ULAXXX/ IULA
      COMMON /VWDXXX/ VWORD(18)
        CHARACTER*40 VWORD
      COMMON /VLWXXX/ NVWD,MAXVWD,LVWD(18),IBPUNC,IEPUNC,
     * KVSTOP,KVCOM1,KVCOM2,KVSEMI,KVDEC
      COMMON /WRDSIZ/ NBITS,NCHRWD
 
      SAVE IRECS4,IRECS5,IRECS7
 
C     1 KEY FORMAT
      DATA KODTRA(1,1),KODTRA(2,1),KODTRA(3,1),KODTRA(4,1),KODTRA(5,1),
     * KODTRA(6,1)/ 'K','E','Y','F','O','R'/
C     2 HENNIG
      DATA KODTRA(1,2),KODTRA(2,2),KODTRA(3,2),KODTRA(4,2),KODTRA(5,2),
     * KODTRA(6,2)/ 'H','E','N','F','O','R'/
C     3 DELTA FORMAT
      DATA KODTRA(1,3),KODTRA(2,3),KODTRA(3,3),KODTRA(4,3),KODTRA(5,3),
     * KODTRA(6,3)/ 'D','E','L','F','O','R'/
C     4 NATURAL LANGUAGE
      DATA KODTRA(1,4),KODTRA(2,4),KODTRA(3,4),KODTRA(4,4),KODTRA(5,4),
     * KODTRA(6,4)/ 'N','A','T','L','A','N'/
C     5 ALICE FORMAT
      DATA KODTRA(1,5),KODTRA(2,5),KODTRA(3,5),KODTRA(4,5),KODTRA(5,5),
     * KODTRA(6,5)/ 'A','L','I','F','O','R'/
C     6 NEXUS FORMAT
      DATA KODTRA(1,6),KODTRA(2,6),KODTRA(3,6),KODTRA(4,6),KODTRA(5,6),
     * KODTRA(6,6)/ 'N','E','X','F','O','R'/
C     7 EXIR FORMAT
      DATA KODTRA(1,7),KODTRA(2,7),KODTRA(3,7),KODTRA(4,7),KODTRA(5,7),
     * KODTRA(6,7)/ 'E','X','I','F','O','R'/
C     8 PAYNE FORMAT
      DATA KODTRA(1,8),KODTRA(2,8),KODTRA(3,8),KODTRA(4,8),KODTRA(5,8),
     * KODTRA(6,8)/ 'P','A','Y','F','O','R'/
C     9 INTKEY FORMAT
      DATA KODTRA(1,9),KODTRA(2,9),KODTRA(3,9),KODTRA(4,9),KODTRA(5,9),
     * KODTRA(6,9)/ 'I','N','T','F','O','R'/
C     10 DISTANCE FORMAT.
      DATA KODTRA(1,10),KODTRA(2,10),KODTRA(3,10),KODTRA(4,10),
     * KODTRA(5,10),KODTRA(6,10)/ 'D','I','S','F','O','R'/
C     11 PAUP FORMAT.
      DATA KODTRA(1,11),KODTRA(2,11),KODTRA(3,11),KODTRA(4,11),
     * KODTRA(5,11),KODTRA(6,11)/ 'P','A','U','F','O','R'/
 
 
C---  READ NEXT CONTROL PHRASE.
      IR = 0
      CALL CON4 (ICPH, JE)
      IF (ICPH.LE.0)  GO TO 9950
      IR = 1
      JBUF = JE
      CALL CHKDIR (4, JDIR4, ICPH, W, IW, LW)
      IF (IDERR.NE.0)  GO TO 9900
C
C---  PROCESS DIRECTIVE.
      GO TO (100,200,300,400,500,600,700,800,900,1000,
     * 1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,
     * 2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,
     * 3100,3200,3300,3400,3500,3600,3700,3800,3900,4000,
     * 4100,4200,4300,4400,4500,4600,4700,4800,4900,5000,
     * 5100,3500,5300,5400,5500,5600,5700,5800,5900,6000,
     * 6100,6200,6300,6400,6500,6600,6700,6800,6900,7000,
     * 7100,7200,7300,7400,7500,7600,7700,7800,7900,7900,
     * 7900,8200,8300,8400,8500,8600,8700,8800,8900,9000,
     * 9100,9200,9300,9400,9500,9600,9700), ICPH
 
C--   CHARACTER RELIABILITIES
  100 JDIR4(ICPH+1) = 1
      CALL SETRA (W(IWTC), NC, 5.)
      CALL CIREAL (IW(IWW1C), W(IWTC), NC, 0., 10.)
      IF (IDERR.NE.0)  GO TO 9900
      DO 110 I = 1, NC
        J = IWTC + I - 1
        W(J) = 2.**(W(J)-5.)
  110 CONTINUE
      GO TO 9900
C
C--   CHARACTER WEIGHTS
  200 JDIR4(ICPH-1) = 1
      CALL CIREAL (IW(IWW1C), W(IWTC), NC, .03125, 32.)
      GO TO 9900
C
C--   EXCLUDE CHARACTERS
  300 JDIR4(ICPH+1) = 1
      CALL RDMSK (0, IW(IIMC), NC, N)
      IF (IDERR.NE.0)  GO TO 9900
C     IF (N.LE.0)  CALL MESSA (25, 3, JBUF)
      GO TO 9900
C
C--   INCLUDE CHARACTERS
  400 JDIR4(ICPH-1) = 1
      CALL RDMSK (1, IW(IIMC), NC, N)
C     IF (N.LE.0)  CALL MESSA (25, 3, JBUF)
      GO TO 9900
C
C--   DECIMAL PLACES
  500 CALL CIINT (IW(IWW1C), IW(INDEC), NC, 0, 5)
      GO TO 9900
C
C--   ITEM ABUNDANCES
  600 JDIR4(ICPH+1) = 1
      CALL SETRA (W(IWTI), MI, 5.)
      CALL CIREAL (IW(IWW1I), W(IWTI), MI, 0., 10.)
      IF (IDERR.NE.0)  GO TO 9900
      DO 610 I = 1, MI
        J = IWTI + I - 1
        W(J) = 2.**(W(J)-5.)
  610 CONTINUE
      GO TO 9900
C
C--   ITEM WEIGHTS
  700 JDIR4(ICPH-1) = 1
      CALL CIREAL (IW(IWW1I), W(IWTI), MI, .03125, 32.)
      GO TO 9900
C
C--   EXCLUDE ITEMS
  800 JDIR4(ICPH+1) = 1
      CALL RDMSK (0, IW(IIMI), MI, N)
      IF (IDERR.NE.0)  GO TO 9900
      IF (N.LE.0)  CALL MESSA (26, 3, JBUF)
      IF (IDERR.NE.0)  GO TO 9900
      JIM = N
      GO TO 9900
C
C--   INCLUDE ITEMS
  900 JDIR4(ICPH-1) = 1
      CALL RDMSK (1, IW(IIMI), MI, N)
      IF (IDERR.NE.0)  GO TO 9900
      IF (N.LE.0)  CALL MESSA (26, 3, JBUF)
      IF (IDERR.NE.0)  GO TO 9900
      JIM = N
      GO TO 9900
C
C--   KEY STATES
 1000 CALL SBOUND (IW(IIDAT), LIDAT,
     * IW(IITYPC), IW(INSTAT), IW(IKSTAT), IW(IWW1C), NC, MS, JIDAT)
      IF (IDERR.NE.0)  GO TO 9900
      CALL ALLOC2 (LW, IISBND, JIDAT)
      CALL COPIA (IW(IIDAT), IW(IISBND), JIDAT)
      GO TO 9900
C
C--   INSERT CHARACTER SEQUENCE NUMBERS.
 1100 ICHSEQ = 1
      GO TO 9900
C
C--   TAXON IMAGES.
C1200 JDIR4(70) = 1
 1200 ILISTP = ILISTD
      IF (ILISTI.NE.ILISTD)  THEN
        IF (ILISTI.EQ.0)  CALL IPRT (2, -1)
        ILISTD = ILISTI
      ENDIF
      CALL ALLOC2 (LW, IITIMG, MI)
      CALL ALLOC2 (LW, IITREC, MI)
      CALL SETIA (IW(IITREC), MI, 0)
      CALL RDTTXT (IW(IITIMG), IW(IITREC), MI, IW(IIDAT), IW(IIDAM),
     * IW(IIDAV), LIDAT, NTIMGE, MTIMGE, IRECS7)
      ITIMGE = 1
      ILISTD = ILISTP
      GOTO 9900
C
C--   NEW PARAGRAPHS AT CHARACTERS
 1300 CALL ALLOC2 (LW, IIPARA, NC)
      CALL RDMSK (1, IW(IIPARA), NC, N)
      GO TO 9900
C
C--   OMIT CHARACTER NUMBERS
 1400 IPCHN = 0
      GO TO 9900
C
C--   PRINT ITEM NAMES.
 1500 IPNAME = 1
C     Make equivalent to `TRANSLATE INTO'
      JDIR4(17) = 1
      GO TO 9900
C
C--   SPECIAL STORAGE
 1600 IF (LRECSS.GT.0)  ISTYPE = 2
      GO TO 9900
 
C--   TRANSLATE INTO
 1700 CALL CONPHR (KODTRA, 6, NTRAN, 3, IBUF, JBUF, JEDAT-1, ITRAN, JE)
      IF (IDERR.NE.0)  GO TO 9900
C     Make equivalent to `PRINT ITEM DESCRIPTIONS'
      JDIR4(21) = 1
 
C     CANNOT USE `ADD CHARACTERS' WITH INTKEY FORMAT OR NEXUS FORMAT.
C     BOTH USE SCRATCH4. `ADD CHARACTERS' IS ONLY FOR USE WITH NATURAL LANGUAGE
C     OUTPUT
      IF (IADDCH.EQ.1.AND.(ITRAN.EQ.6.OR.ITRAN.EQ.9))
     * CALL MESSA(145, -1, 0)
 
C     CANNOT USE `EMPHASIZE CHARACTERS' WITH INTKEY FORMAT.
C     BOTH USE SCRATCH5. `EMPHASIZE CHARACTERS' IS ONLY FOR USE WITH NATURAL LANGUAGE
C     OUTPUT
      IF (IEMPCH.EQ.1.AND.ITRAN.EQ.9)
     * CALL MESSA(146, -1, 0)

C     INTKEY FORMAT.
C     ALLOCATE SPACE FOR WORKING ARRAYS.
      IF (ITRAN.EQ.9)  THEN
        CALL ALLOC2 (LW, IITXPT, MI+1)
        I1 = 0
        I2 = 0
        I3 = 0
        DO 1710 IC = 1, NC
          JTYPC = IABS(IW(IITYPC+IC-1))
          IF (JTYPC.EQ.3.AND.I1.EQ.0) THEN
            CALL ALLOC2 (LW, IMINC, NC)
            CALL ALLOC2 (LW, IMAXC, NC)
            CALL ALLOC2 (LW, INUMRN, NC)
            I1 = 1
          ENDIF
          IF ((JTYPC.EQ.3.OR.JTYPC.EQ.4).AND.I2.EQ.0)  THEN
            CALL ALLOC2 (LW, IRBND, MI*2)
            CALL ALLOC2 (LW, INBND, NC)
            I2 = 1
          ENDIF
          IF ((JTYPC.EQ.3.OR.JTYPC.EQ.4.OR.JTYPC.EQ.5).AND.I3.EQ.0) THEN
            LBFLG = (MI + NBITS - 1)/NBITS
            CALL ALLOC2 (LW, INAFLG, LBFLG)
            I3 = 1
          ENDIF
          IF (I1+I2+I3.GE.3)  GOTO 1720
 1710   CONTINUE
      ENDIF
 1720 IF (ITRAN.EQ.9.OR.ITRAN.EQ.10) THEN
C       INTKEY OR DISTANCE FORMAT.
        CALL ALLOC2 (LW, IICPTW, NC)
        CALL ALLOC2 (LW, IICPTB, NC)
        CALL ALLOC2 (LW, IITPTR, MI)
        CALL ALLOC2 (LW, ILNAME, MI)
      ENDIF
      JBUF = JE
      IF (ITRAN.NE.0)  GO TO 9900
      CALL MESSA (12, 3, JE)
      GO TO 9900
C
C--   TREAT UNKNOWN AS VARIABLE
 1800 IUNVAR = 1
      GO TO 9900
C
C--   NUMBER STATES FROM ZERO
 1900 NUMST0 = 1
      GOTO 9900
C
C--   PRINT CHARACTER LIST.
 2000 IPCHAR = 1
      GO TO 9900
C
C--   PRINT ITEM DESCRIPTIONSS.
 2100 IPITEM = 1
C     Make equivalent to `TRANSLATE INTO'
      JDIR4(17) = 1
      GO TO 9900
C
C--   OMIT PERIOD FOR CHARACTERS.
 2200 CALL ALLOC2 (LW, IIOMPD, NC)
      CALL RDMSK (1, IW(IIOMPD), NC, N)
      GOTO 9900
C
C--   OMIT TYPESETTING MARKS.
 2300 JDIR4(33) = 1
      ITPSET = -1
      GO TO 9900
C
C--   IMPLICIT VALUES.
 2400 IMPVAL = 1
      CALL ALLOC2 (LW, IIMPL1, NC)
      CALL ALLOC2 (LW, IIMPL2, NC)
      CALL ALLOC2 (LW, IIMPFL, NC)
      CALL RDIMP (IW(IIMPL1), IW(IIMPL2), IW(IITYPC), IW(INSTAT), NC)
      DO 2410 I = 1, NC
        IF (IW(IIMPL1+I-1).NE.0)  GOTO 2420
 2410   CONTINUE
      IMPVAL = 0
 2420 GO TO 9900
C
C--   TRANSLATE UNCODED CHARACTERS.
 2500 ITUNC = 1
      GO TO 9900
C
C--   PRINT ALL CHARACTERS.
 2600 IPCHAR = 1
      IPACH = 1
      GO TO 9900
C
C--   LINK CHARACTERS.
 2700 LNKC = 1
      CALL ALLOC2 (LW, ILINKC, NC)
      CALL RDLNK (IW(ILINKC), NC, IW(IIDAT), LIDAT)
      GO TO 9900
C
C--   EMPHASIZE FEATURES.
 2800 CALL ALLOC2 (LW, IIEMPF, NC)
      CALL RDMSK (1, IW(IIEMPF), NC, N)
      GO TO 9900
C
C--   REPLACE ANGLE BRACKETS.
 2900 IRAB = 1
      GO TO 9900
C
C     PRINT UNCODED CHARACTERS.
 3000 IPUNC = 1
      GO TO 9900
C
C--   ITEM SUBHEADINGS.
 3100 CALL RDSENL (IW(IIDAT), LIDAT, NC, 0, 0, JIDAT)
      IF (IDERR.NE.0)  GO TO 9900
      CALL ALLOC2 (LW, IITSHD, JIDAT)
      CALL COPIA (IW(IIDAT), IW(IITSHD), JIDAT)
      GO TO 9900
C
C--   CHARACTER HEADINGS.
 3200 CALL RDSENL (IW(IIDAT), LIDAT, NC, 0, 0, JIDAT)
      IF (IDERR.NE.0)  GO TO 9900
      CALL ALLOC2 (LW, IICHHD, JIDAT)
      CALL COPIA (IW(IIDAT), IW(IICHHD), JIDAT)
      GO TO 9900
 
C--   TYPESETTING MARKS.
 3300 JDIR4(23) = 1
      ITYPB = 0
      IF (LWIDTH(3).LT.0)  ITYPB = 1
      CALL RDSENL (IW(IIDAT), LIDAT, NTYPMK, 0, ITYPB, JIDAT)
      IF (IDERR.NE.0)  GOTO 9900
      CALL ALLOC2 (LW, IITYMK, JIDAT)
      CALL COPIA (IW(IIDAT), IW(IITYMK), JIDAT)
C     SET FLAG FOR INSERTION OF TYPESETTING MARKS.
      ITPSET = 1
C?      LUNCOM(3) = 4
C     CHECK FOR COMPATIBILITY OF OUTPUT FILE.
      IF (LUNO.GT.0)  THEN
        IF (LUNE.EQ.LUNO.OR.LUNL.EQ.LUNO) THEN
          LUNO = -1
        ELSE
          LUNUSE(LUNO) = 3
          LUNPAG(LUNO) = 0
        ENDIF
      ENDIF
      GOTO 9900
 
C--   ALLOWED VALUES.
 3400 CALL RDVCON (IW(IIDAT), LIDAT, IW(IITYPC), NC, JIDAT)
      IF (IDERR.NE.0)  GO TO 9900
      CALL ALLOC2 (LW, IIVCON, JIDAT)
      CALL COPIA (IW(IIDAT), IW(IIVCON), JIDAT)
      GO TO 9900
C
C--   DEPENDENT CHARACTERS, INAPPLICABLE CHARACTERS.
 3500 IDEPC = 1
      JDIR4(51) = 1                                                           =*
      CALL RDCDEP (IW(IITYPC), IW(INSTAT), IW(IWW1C), NC, IW(IWW1S),
     * IW(IWW2S), MS, IW(IIDAT), IW(IIDAM), LIDAT, JIDAT, 0)
      CALL ALLOC2 (LW, IICDEP, JIDAT)
      CALL ALLOC2 (LW, ILSTDE, NC)
      CALL COPIA (IW(IIDAT), IW(IICDEP), JIDAT)
      LICDEP = JIDAT
      GO TO 9900
C
C--   LIST CHARACTERS.
 3600 ILISTC = 1
      GO TO 9900
C
C--   LIST ITEMS.
 3700 ILISTI = 1
      GO TO 9900
C
C--   TREAT INTEGER AS REAL.
 3800 ITINTR = 1
      CALL ALLOC2 (LW, IINTRL, NC)
      CALL RDMSK (1, IW(IINTRL), NC, N)
      DO 3820 IC = 1, NC
        IF (IW(IINTRL+IC-1).EQ.0)  GOTO 3820
        IF (IW(IITYPC+IC-1).EQ.3)  GOTO 3820
        CALL MESSB (27, IC, 1, 1, 0)
 3820   CONTINUE
      GOTO 9900
 
C--   ACCEPT DUPLICATE VALUES.
 3900 IULA = 1
      GO TO 9900
C
C--   OMIT INAPPLICABLES.
 4000 ITINAP = 0
      GO TO 9900
C
C--   INSERT IMPLICIT VALUES.
 4100 ITIMPL = 1
      GO TO 9900
C
C--   PRINT SUMMARY.
 4200 IPSUMM = 1
      GOTO 9900
C
C--   DATA COMPRESSION.
 4300 ICMPRS = 1
      GOTO 9900
C
C--   INSERT ITEM SEQUENCE NUMBERS.
 4400 ITMSEQ = 1
      GOTO 9900
C
C--   SEQUENCE INCREMENT.
 4500 CALL RDREAL (SEQINC, 0.001, 0.1, 0.01)
      IF (IDERR.NE.0)  GOTO 9900
      WRITE(TMP,4510) SEQINC
 4510 FORMAT(F6.4)
      DO 4520 I = 6, 1, -1
        IF (TMP(I:I).NE.'0')  GOTO 4525
 4520   CONTINUE
 4525 NSQDIG = I - 2
      GO TO 9900
 
C--   STOP AT ITEM.
 4600 CALL RDINT (I, 1, 1, 0)
      IF (MISTOP.LE.0.OR.I.LT.MISTOP)  MISTOP = I
      MISTOP = MAX0(MISTOP,1)
      GOTO 9900
 
C--   INSERT REDUNDANT VARIANT ATTRIBUTES.
 4700 INSRVA = 1
      GOTO 9900
 
C--   OMIT REDUNDANT VARIANT ATTRIBUTES.
 4800 INSRVA = -1
      GOTO 9900
 
C--   USE LAST VALUE CODED.
 4900 IFATT = 0
      GOTO 9900
 
C--   VOCABULARY.
 5000 CALL RDSENL (IW(IIDAT), LIDAT, NVWD, 1, 0, JIDAT)
      IF (IDERR.NE.0)  GOTO 9900
      KNT = 0
      DO 5050 I = 1, NVWD
        IF (IW(IIDAT+I-1).EQ.0)  GOTO 5050
        KNT = KNT + 1
        IF (IW(IIDAT+I-1).LT.0)  THEN
C         A value of -1 indicates an empty string i.e. no word to be output
          LVWD(I) = 0
          GOTO 5050
        ENDIF
        IB = IW(IIDAT+I-1)
        IB = IIDAT + IB - 1
        LEN = IW(IB)
        IB = IB + 3
        LEN = LEN - 3
        IF (LEN.GT.MAXVWD)  THEN
          CALL MESSA (28, 2, 0)
          LEN = MAXVWD
        ENDIF
        CALL COPIAS (IW(IB), VWORD(I), LEN)
        LVWD(I) = LEN
 5050   CONTINUE
      IF (KNT.LT.NVWD)  CALL MESSA (29, 2, 0)
      GOTO 9900
 
C--   APPLICABLE CHARACTERS.
 5100 IDEPC = 1
      JDIR4(35) = 1                                                           =*
      CALL RDCDEP (IW(IITYPC), IW(INSTAT), IW(IWW1C), NC, IW(IWW1S),
     * IW(IWW2S), MS, IW(IIDAT), IW(IIDAM), LIDAT, JIDAT, 1)
      CALL ALLOC2 (LW, IICDEP, JIDAT)
      CALL ALLOC2 (LW, ILSTDE, NC)
      CALL COPIA (IW(IIDAT), IW(IICDEP), JIDAT)
      LICDEP = JIDAT
      GO TO 9900
 
C--   USE NORMAL VALUES.
 5300 IUNRNG = 1
      CALL ALLOC2 (LW, INORNG, NC)
      CALL RDMSK (1, IW(INORNG), NC, N)
      DO 5310 IC = 1, NC
        IF (IW(INORNG+IC-1).EQ.0)  GOTO 5310
        JTYPC = IABS(IW(IITYPC+IC-1))
        IF (JTYPC.LT.3.OR.JTYPC.GT.4)  CALL MESSB (30, IC, 1, 1, 0)
 5310   CONTINUE
      GOTO 9900
 
C--   MANDATORY CHARACTERS.
 5400 ICMAND = 1
      CALL ALLOC2 (LW, IMANDC, NC)
      CALL RDMSK (1, IW(IMANDC), NC, N)
      GOTO 9900
 
C--   OMIT "OR" FOR CHARACTERS.
 5500 IOMTOR = 1
      CALL ALLOC2 (LW, IIOMOR, NC)
      CALL RDMSK (1, IW(IIOMOR), NC, N)
      GOTO 9900
 
C--   NEW FILES AT ITEMS.
 5600 JDIR4(89) = 1
      JDIR4(92) = 1
      NEWFLS = 1
      CALL ALLOC2 (LW, IIFILS, MI)
      CALL RDMSK (1, IW(IIFILS), MI, N)
      NFILE = 0
      GO TO 9900
 
C--   REPLACE SEMICOLON BY COMMA.
 5700 IRSEMI = 1
      CALL ALLOC2 (LW, IIREPS, NC)
      CALL RDGRPS (IW(IIREPS), NC, IW(IIDAT), LIDAT)
      GOTO 9900
 
C--   REPLACE STATE CODES.
 5800 IOMSTC = 1
      GOTO 9900
 
C--   ADD CHARACTERS.
C     CANNOT USE `ADD CHARACTERS' WITH INTKEY FORMAT OR NEXUS FORMAT.
C     BOTH USE SCRATCH4. `ADD CHARACTERS' IS ONLY FOR USE WITH NATURAL LANGUAGE
C     OUTPUT
 5900 IF (ITRAN.EQ.6.OR.ITRAN.EQ.9) CALL MESSA (145, -1, 0)
 
      IF (IADDCH.EQ.0)  THEN
        CALL ALLOC2 (LW, IIADDC, NC)
        CALL ALLOC2 (LW, IIADDT, MI)
        CALL ALLOC2 (LW, IIADNM, MI)
        CALL ALLOC2 (LW, IIADDL, MI)
        NADNAM = 0
      ENDIF
      CALL TCMASK (IADDCH, IW(IIADDT), MI, IW(IIADDC), IW(IWW1C), NC,
     * IW(IIDAT), IW(IIDAM),
     * LIDAT, IW(IIADNM), IW(IIADDL), NADNAM, LUNTS4, IRECS4,
     * SCRNAM(4), 4,
     * LUNTS7, IRECS7, SCRNAM(7), 7)
      IADDCH = 1
      JDIR4(ICPH) = 0
      GOTO 9900
 
 
C--   EMPHASIZE CHARACTERS.
C     CANNOT USE `EMPHASIZE CHARACTERS' WITH INTKEY FORMAT.
C     BOTH USE SCRATCH5. `EMPHASIZE CHARACTERS' IS ONLY FOR USE WITH NATURAL LANGUAGE
C     OUTPUT
 6000 IF (ITRAN.EQ.9) CALL MESSA(146, -1, 0)

      IF (IEMPCH.EQ.0)  THEN
        CALL ALLOC2 (LW, IIEMPC, NC)
        CALL ALLOC2 (LW, IIEMPT, MI)
        CALL ALLOC2 (LW, IIEMNM, MI)
        CALL ALLOC2 (LW, IIEMPL, MI)
        NEMNAM = 0
      ENDIF
      CALL TCMASK (IEMPCH, IW(IIEMPT), MI, IW(IIEMPC), IW(IWW1C), NC,
     * IW(IIDAT), IW(IIDAM),
     * LIDAT, IW(IIEMNM), IW(IIEMPL), NEMNAM,  LUNTS5, IRECS5,
     * SCRNAM(5), 5,
     * LUNTS7, IRECS7, SCRNAM(7), 7)
      IEMPCH = 1
      JDIR4(ICPH) = 0
      GOTO 9900

C--   TREAT VARIABLE AS UNKNOWN.
 6100 IVARUN = 1
      GO TO 9900
 
C--   SCALE CHARACTERS.
 6200 ISCALC = 1
      CALL ALLOC2 (LW, ISCALF, NC)
      CALL CSCALE (IW(IWW1C), IW(IITYPC), W(ISCALF), NC)
      GOTO 9900
 
C--   SORT STATES.
 6300 CALL ALLOC2 (LW, IISRTS, NC)
      CALL RDMSK (1, IW(IISRTS), NC, N)
      GOTO 9900
 
C--   CHARACTER NOTES.
 6400 ILISTP = ILISTD
      IF (ILISTC.NE.ILISTD)  THEN
        IF (ILISTC.EQ.0)  CALL IPRT (2, -1)
        ILISTD = ILISTC
      ENDIF
      CALL ALLOC2 (LW, IICNOT, NC)
      CALL ALLOC2 (LW, IICNGP, NC)
      CALL RDNOTE (IW(IICNOT), IW(IICNGP), NC, IW(IIDAT),
     * IW(IIDAM), IW(IIDAV), IW(IILANG), LIDAT, 1, 1)
      ICNOTE = 1
      ILISTD = ILISTP
      IF (IFMTMK.EQ.0)  CALL INIFMT (IW, LW, IIFMT)
      IF (IDERR.NE.0)  GO TO 9900
      GOTO 9900
 
C--   FORMATTING MARKS.
 6500 CALL RDSENL (IW(IIDAT), LIDAT, NFMTMK, 0, 0, JIDAT)
      IF (IDERR.NE.0)  GOTO 9900
      IFMTMK = 1
      CALL ALLOC2 (LW, IIFMT, JIDAT)
      CALL COPIA (IW(IIDAT), IW(IIFMT), JIDAT)
      GOTO 9900
 
C--   USE MEAN VALUES.
 6600 IUMEAN = 1
      GOTO 9900

C--   DISABLE DELTA OUTPUT.
 6700 NODELO = 1
      GOTO 9900

C--   OMIT SPACE BEFORE UNITS.
 6800 IOMUSP = 1
      CALL ALLOC2 (LW, IIOUSP, NC)
      CALL RDMSK (1, IW(IIOUSP), NC, N)
      IF (IDERR.NE.0)  GO TO 9900
      DO IC = 1, NC
        IF (IW(IIOUSP+IC-1).NE.0)  THEN
           IF (IW(IITYPC+IC-1).NE.3.AND.IW(IITYPC+IC-1).NE.4)
     *       CALL MESSA(134, 4, JBUF-1)
        ENDIF
      ENDDO
      GOTO 9900
 
C--   CHARACTER IMAGES.
 6900 ILISTP = ILISTD
      IF (ILISTC.NE.ILISTD)  THEN
        IF (ILISTC.EQ.0)  CALL IPRT (2, -1)
        ILISTD = ILISTC
      ENDIF
      CALL ALLOC2 (LW, IICIMG, NC)
      CALL ALLOC2 (LW, IICIGP, NC)
      CALL RDNOTE (IW(IICIMG), IW(IICIGP), NC, IW(IIDAT),
     * IW(IIDAM), IW(IIDAV), IW(IILANG), LIDAT, 0, 0)
      ICIMGE = 1
      ILISTD = ILISTP
      GOTO 9900

C--   CHARACTER FOR TAXON IMAGES.
C7000 JDIR4(12) = 1
 7000 CALL RDINT (ICTIMGE, 1, NC, 0)
      IF (IW(IITYPC+ICTIMGE-1).NE.5)  CALL MESSA(131, 1, JBUF)
      GOTO 9900

C--   OMIT INNER COMMENTS.
 7100 IOMNSC = 1
      GOTO 9900
 
C--   OMIT COMMENTS.
 7200 IOMCMT = 1
      GOTO 9900
 
C--   OMIT LOWER FOR CHARACTERS.
 7300 IOMLOW = 1
      CALL ALLOC2 (LW, IIOMLO, NC)
      CALL RDMSK (1, IW(IIOMLO), NC, N)
      IF (IDERR.NE.0)  GOTO 9900
      DO IC = 1, NC
        IF (IW(IIOMLO+IC-1).NE.0)  THEN
          JTYPC = IW(IITYPC+IC-1)
          IF (JTYPC.NE.3.AND.JTYPC.NE.4)  THEN
            CALL MESSA(42, 4, JBUF-1)
            GOTO 7310
          ENDIF
        ENDIF
      ENDDO
 7310 GOTO 9900

C--   PERCENT ERROR.
 7400 IERRPC = 1
      CALL ALLOC2 (LW, IPCERR, NC)
      CALL SETRA (W(IPCERR), NC, 0.)
      CALL CIREAL (IW(IWW1C), W(IPCERR), NC, 0., 100.)
      IF (IDERR.NE.0)  GO TO 9900
      DO IC = 1, NC
        IF (IW(IWW1C+IC-1).NE.0)  THEN
          IF (IW(IITYPC+IC-1).NE.4)  THEN
            CALL MESSA(42, 4, JBUF-1)
          ELSE
C           ROUND VALUES UP TO WHOLE INTEGERS.
            W(IPCERR+IC-1) = FLOAT(INT(W(IPCERR+IC-1)+0.99))
          ENDIF
        ENDIF
      ENDDO
      GOTO 9900
 
C--   ABSOLUTE ERROR.
 7500 IERRAB = 1
      CALL ALLOC2 (LW, IABERR, NC)
      CALL SETRA (W(IABERR), NC, 0.)
      CALL CIREAL (IW(IWW1C), W(IABERR), NC, 0., 1.0E6)
      IF (IDERR.NE.0)  GO TO 9900
      DO IC = 1, NC
        IF (IW(IWW1C+IC-1).NE.0)  THEN
          IF (IW(IITYPC+IC-1).NE.4)  CALL MESSA(42, 4, JBUF-1)
        ENDIF
      ENDDO
      GOTO 9900
 
C     OMIT FINAL COMMA.
 7600 CALL ALLOC2 (LW, IIOMFC, NC)
      CALL RDMSK (1, IW(IIOMFC), NC, N)
      GOTO 9900
 
C     ALTERNATE COMMA.
 7700 CALL ALLOC2 (LW, IIALTC, NC)
      CALL RDMSK (1, IW(IIALTC), NC, N)
      GOTO 9900
 
C     CHINESE FORMAT.
 7800 ICHNSE = 1
      INSBLK = 0
      GOTO 9900
 
C     STARTUP IMAGE.
C     CHARACTER KEYWORD IMAGES.
C     TAXON KEYWORD IMAGES.
 7900 ILISTP = ILISTD
      IF (ILISTC.NE.ILISTD)  THEN
        IF (ILISTC.EQ.0)  CALL IPRT (2, -1)
        ILISTD = ILISTC
      ENDIF
      CALL RDIMGD (IRECNO, IW(IIDAT), LIDAT)
      ILISTD = ILISTP
      IF (ICPH.EQ.79)  THEN
C     STARTUP IMAGE
        ISUPIMG = IRECNO
      ELSEIF (ICPH.EQ.80)  THEN
C     CHARACTER KEYWORD IMAGE
        ICKYIMG = IRECNO
      ELSE
C     TAXON KEYWORD IMAGE
        ITKYIMG = IRECNO
      ENDIF
      GOTO 9900
 
C     CHARACTER FOR TAXON NAME.
 8200 CALL RDINT (ICTNAME, 1, NC, 0)
      IF (IW(IITYPC+ICTNAME-1).NE.5)  CALL MESSA(149, 1, JBUF)
      GOTO 9900

C     CHARCTERS FOR SYNONYMY
 8300 CALL ALLOC2 (LW, IICSYN, NC)
      CALL RDMSK (1, IW(IICSYN), NC, N)
      DO I = 1, NC
        IF (IW(IICSYN+I-1).NE.0 .AND. IW(IITYPC+I-1).NE.5)
     *    CALL MESSA(151, 1, 0)
      ENDDO
      GOTO 9900
 
C     OUTPUT FORMAT HTML.
 8400 JDIR4(87) = 1
      IHTML = 1
      IRTF = 0
      GOTO 9900

C     ALTERNATE LANGUAGES
 8500 CALL RDLANG (IW(IIDAT), IW(IIDAM), LIDAT, JIDAT, NLANG)
      CALL ALLOC2 (LW, IILANG, JIDAT)
      CALL COPIA (IW(IIDAM), IW(IILANG), JIDAT)
      GOTO 9900

C     USE LANGUAGE
 8600 CALL RDULANG (IW(IIDAT), IW(IIDAM), LIDAT, IW(IILANG), NLANG,
     * ILANG1, ILANG2)
      IF (ILANG1.NE.0) IUSELNG1 = ILANG1
      IF (ILANG2.NE.0) IUSELNG2 = ILANG2
      GOTO 9900

C     OUTPUT FORMAT RTF.
 8700 JDIR4(84) = 1
      IRTF = 1
      GOTO 9900

C     ITEM HEADINGS.
 8800 CALL ALLOC2 (LW, IITHD, MI)
      CALL ALLOC2 (LW, IITHREC, MI)
      CALL SETIA (IW(IITHREC), MI, 0)
      CALL RDTTXT (IW(IITHD), IW(IITHREC), MI, IW(IIDAT), IW(IIDAM),
     * IW(IIDAV), LIDAT, NTHEAD, MTHEAD, IRECS7)
      ITMHDGS = 1
      GOTO 9900
 
C     ITEM OUTPUT FILES.
 8900 JDIR4(56) = 1
      JDIR4(92) = 1
      CALL ALLOC2 (LW, IITFIL, MI)
      CALL ALLOC2 (LW, IITFREC, MI)
      CALL SETIA (IW(IITFREC), MI, 0)
      CALL RDTTXT (IW(IITFIL), IW(IITFREC), MI, IW(IIDAT), IW(IIDAM),
     * IW(IIDAV), LIDAT, NTFILE, MTFILE, IRECS7)
      ITMFILS = 1
      GOTO 9900
 
C     INDEX HEADINGS.
 9000 CALL ALLOC2 (LW, IIXHD, MI)
      CALL ALLOC2 (LW, IIXHREC, MI)
      CALL SETIA (IW(IIXHREC), MI, 0)
      CALL RDTTXT (IW(IIXHD), IW(IIXHREC), MI, IW(IIDAT), IW(IIDAM),
     * IW(IIDAV), LIDAT, NXHEAD, MXHEAD, IRECS7)
      IDXHDGS = 1
      GOTO 9900

C     INSERT IMAGE FILE NAME.
 9100 INSIMGFN = 1
      GOTO 9900
 
C     CHARACTER FOR OUTPUT FILES.
 9200 JDIR4(56) = 1
      JDIR4(89) = 1
      CALL RDINT (ICOFILE, 1, NC, 0)
      IF (IW(IITYPC+ICOFILE-1).NE.5)  CALL MESSA(165, 1, JBUF)
      GOTO 9900 
 
C     USE CONTROLLING CHARACTER FIRST.
 9300 IUCC = 1
      CALL ALLOC2 (LW, IIUSECC, NC)
      CALL RDMSK (1, IW(IIUSECC), NC, N)
      GOTO 9900
 
C     INSERT UNCODED ATTRIBUTES.
 9400 IOUNC = 1
      GOTO 9900
 
C     TAXON LINKS.
 9500 ILISTP = ILISTD
      IF (ILISTI.NE.ILISTD)  THEN
        IF (ILISTI.EQ.0)  CALL IPRT (2, -1)
        ILISTD = ILISTI
      ENDIF
      CALL ALLOC2 (LW, IITLNK, MI)
      CALL ALLOC2 (LW, IILREC, MI)
      CALL SETIA (IW(IILREC), MI, 0)
      CALL RDTTXT (IW(IITLNK), IW(IILREC), MI, IW(IIDAT), IW(IIDAM),
     * IW(IIDAV), LIDAT, NTLINK, MTLINK, IRECS7)
      ITLINK = 1
      ILISTD = ILISTP
      GOTO 9900

C     NONAUTOMATIC CONTROLLING CHARACTERS.
 9600 NAUTOCC = 1
      CALL ALLOC2 (LW, IINAUTOCC, NC)
      CALL RDMSK (1, IW(IINAUTOCC), NC, N)
      GOTO 9900

C     SUBJECT FOR OUTPUT FILES
 9700 CALL RDTXT (0, 0, 0, 0, IW(IIDAT), LIDAT, JIDAT, IERR)
      IF (IERR.EQ.0) THEN
        IOUTSUBJ = 1
        CALL ALLOC2 (LW, IITLNK2, MI)
        IF (JIDAT.GT.0) THEN
          CALL ALLOC2 (LW, IIOSUBJ, JIDAT)
          CALL COPIA (IW(IIDAT), IW(IIOSUBJ), JIDAT)
          IOUTSUBJ = JIDAT
        ENDIF
      ENDIF
      GOTO 9900
 
C---  TEST FOR ERROR.
 9900 IF (IDERR.EQ.0)  GO TO 9910
      CALL SKDELW (0)
C
C---  CHECK PRESENCE OF NEXT DELIMITER.
 9910 CALL CHDELW (0)
C
 9950 RETURN
      END

