      SUBROUTINE DISTI (ITM, IDAT, LIDAT, ITPTR, LNAME, MI,                 TDIS
     * ITYPC, IMC, KSTAT, WTC, PCERR, ABERR, ICPTW, ICPTB,
     * IWORKC, NC,
     * ISTAT, MS, ISBND, IMI, JI, IERRPC, IERRAB, IVARIT, ICTNAME)
 
C* REVISED 23-JUN-97.
C* OUTPUTS AN ITEM IN FORMAT FOR INPUT TO PROGRAM DIST.
 
C  ITM RECEIVES THE ITEM.
C  IDAT RECEIVES WORKING SPACE.
C  LIDAT RECEIVES THE DIMENSION OF ITM AND IDAT.
C  ITPTR RETURNS THE RECORD NUMBERS AT WHICH THE TAXA START
C    IN THE OUTPUT FILE.
C  LNAME RETURNS THE LENGTHS OF THE TAXON NAMES.
C  MI RECEIVES THE MAXIMUM NUMBER OF ITEMS.
C  ITYPC RECEIVES THE CHARACTER TYPES.
C  IMC RECEIVES THE CHARACTER MASK.
C  KSTAT RECEIVES THE NUMBERS OF KEY STATES.
C  WTC RECEIVES THE CHARACTER WEIGHTS.
C  PCERR RECEIVES PERCENTAGE ERROR VALUES FOR REAL NUMERIC CHARACTERS.
C  ABERR RECEIVES ABSOLUTE ERROR VALUES FOR REAL NUMERIC CHARACTERS.
C  ICPTW RETURNS THE POSITIONS OF THE STARTING WORDS OF THE
C    CHARACTERS IN THE OUTPUT BUFFER.
C  ICPTB RETURNS THE BIT OFFSETS (WITHIN WORD) OF THE CHARACTERS IN THE
C    OUTPUT BUFFER. I.E. BIT NUMBER FOR STATE I OF CHARACTER IC
C    IS ICPTB(IC)+I.
C  IWORKC RECEIVES WORKING SPACE OF LENGTH NC.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  ISTAT IS WORKING SPACE OF LENGTH MS.
C  MS RECEIVES THE MAXIMUM NUMBER OF STATES.
C  ISBND RECEIVES THE NEW STATES (SEE SUBR. SBOUND).
C  IMI RECEIVES THE ITEM MASK.
C  JI RECEIVES THE ITEM NUMBER.
C  IERRPC RECEIVES WHETHER TO USE PERCENT ERRORS.
C  IERRAB RECEIVES WHETHER TO USE ABSOLUTE ERRORS.
C  IVARIT RECEIVES 1 IF THE CURRENT ITEM IS A VARIANT, 0 IF MAIN,
C   -1 IF END OF ITEM DESCRIPTIONS.
C  ICTNAME RECEIVES THE CHARACTER FOR TAXON NAME.
 
C  PROCEDURE FOR CALCULATION OF VALUES.
C  1. ONLY NORMAL VALUES OF NU,ERIC CHARACTERS SRE USED. EXTREME VALUES ARE IGNORED.
C  2. KEY STATES ARE APPLIED IF SPECIFIED. NUMERIC CHARACTERS TO WHICH KEY
C     STATES HAVE BEEN APPLIED ARE SUBSEQUENTLY TREATED AS ORDERED MULTISTATES.
C  3. FOR UNORDERED MULTISTATES, ALL THE STATES PRESENT ARE OUTPUT.
C  4. FOR ORDERED MULTISTATES (INCLUDING FORMER NUMERIC CHARACTERS), THE MEAN
C     OF THE VALUES PRESENT IS OUTPUT.
C  5. FOR NUMERIC CHARACTERS WITHOUT KEY STATES, AS SINGLE VALUE IS OBTAINED
C     AS FOLLOWS. IF A RANGE OF VALUES HAS A MIDDLE VALUE, THE RANGE IS
C     REPLACED BY THAT VALUE; OTHERWISE, IT IS REPLACED BY ITS MIDPOINT.
C     THE OVERALL MEAN OF THE RESULTING VALUES IS THEN CALCULATED AND OUTPUT.
 
C  STRUCTURE OF THE OUTPUT FILE.
 
C  THE OUTPUT FILE IS A DIRECT-ACCESS FILE WITH RECORD LENGTH LRECDA
C  WORDS (CURRENTLY 32).
C  EACH ITEM CONSISTS OF A NAME AND A LIST OF ATTRIBUTES.
C  THE NAME OF ITEM JI IS ON RECORD ITMPRT(JI). THE NAME IS PACKED AS
C  CHARACTERS (USUALLY 4 PER WORD), AND, IF NECESSARY, IS TRUNCATED
C  TO FIT ON THE RECORD. ITS LENGTH IS LNAME(JI) CHARACTERS.
C  THE LIST OF ATTRIBUTES STARTS ON THE NEXT RECORD, AND ITS LENGTH IS
C  LITM WORDS.
C  THE STRUCTURE OF THE LIST OF ATTRIBUTES IS AS FOLLOWS.
C    TEXT CHARACTERS ARE NOT REPRESENTED.
C
C    EACH UNORDERED MULTISTATE CHARACTER IS REPRESENTED BY A STRING OF BITS,
C    THE NUMBER OF BITS BEING EQUAL TO THE NUMBER OF STATES. A BIT IS SET
C    IF THE CORRESPONDING STATE IS PRESENT IN THE ITEM, THE LEAST-
C    SIGNIFICANT BIT CORRESPONDING TO STATE 1. THE BIT STRINGS ARE
C    PACKED INTO WORDS, STARTING AT THE LEAST-SIGNIFICANT BIT OF EACH
C    WORD. THE BIT STRINGS MAY CROSS WORD BOUNDARIES.
C    THE NUMBER OF BITS USED PER WORD IS NBITS (WHICH MAY
C    BE DIFFERENT IN DIFFERENT VERSIONS OF THE PROGRAM).
C
C    EACH ORDERED MULTISTATE AND NUMERIC CHARACTER IS REPRESENTED BY A SINGLE
C    REAL WORD CONTAINING THE MEAN OF THE VALUES.
C    THE POSITION OF ATTRIBUTE IC WITHIN THE ATTRIBUTE LIST IS GIVEN BY
C    ICPTW(IC), THE WORD IN WHICH THE ATTRIBUTE STARTS, AND ICPTB(IC),
C    THE BIT OFFSET WITHIN THE WORD. FOR MULTISTATE CHARACTERS, THE BIT
C    NUMBER FOR STATE I IS ICPTB(IC)+I. FOR NUMERIC CHARACTERS, THE BIT
C    OFFSET IS ALWAYS 0.
C    (EXAMPLE. 5-STATE CHARACTER, STATES 1, 4, AND 5 PRESENT, ICPTW=1,
C    ICPTB=30, NBITS=32.
C      FIRST WORD  : 01000000000000000000000000000000
C      SECOND WORD : 00000000000000000000000000000110)
 
C  THE FIRST RECORD OF THE FILE CONTAINS THE VALUES OF 18 INTEGER
C  PARAMETERS, 1 PER WORD, AS FOLLOWS.
C    1 - RECORD LENGTH OF FILE, IN WORDS (FOR CHECKING).
C    2 - NUMBER OF BITS USED PER WORD (FOR CHECKING).
C    3 - NUMBER OF CHARACTERS PER WORD (FOR CHECKING).
C    4 - NUMBER OF ITEMS.
C    5 - NUMBER OF CHARACTERS.
C    6 - MAXIMUM NUMBER OF STATES.
C    7 - LENGTH OF ATTRIBUTE LISTS, IN WORDS (=LITM).
C    8 - LENGTH OF HEADING, IN CHARACTERS.
C    9-18 - STARTING RECORDS FOR HEADING, MASKS ETC. SEE BELOW.
C  THE FILE ALSO CONTAINS THE FOLLOWING INFORMATION.
C    9 - HEADING, PACKED AS CHARACTERS (NORMALLY 4 PER WORD).
C    10 - CHARACTER TYPES.
C    11 - NUMBERS OF STATES.
C    12 - CHARACTER MASK, 1 WORD PER CHARACTER. 0 = EXCLUDE, 1 = INCLUDE.
C    13 - CHARACTER WEIGHTS (REAL).
C    14 - POINTERS TO WORD-POSITION OF CHARACTERS WITHIN ITEMS.
C    15 - BIT OFFSETS OF CHARACTERS WITHIN ITEMS.
C    16 - ITEM MASK.
C    17 - POINTERS TO STARTING RECORDS OF ITEMS.
C    18 - LENGTHS OF ITEM NAMES.
 
      DIMENSION ITM(LIDAT),IDAT(LIDAT),ITPTR(MI),LNAME(MI),
     * ITYPC(NC),IMC(NC),KSTAT(NC),WTC(NC),PCERR(NC),
     * ABERR(NC),ICPTW(NC),ICPTB(NC),IWORKC(NC),
     * ISTAT(MS),ISBND(LIDAT),IMI(JI),ITSF(3),IVAL(2)
 
      PARAMETER (NPARAM=18)                                                   =*
      DIMENSION IPARAM(NPARAM)
 
      SAVE LITM
 
      COMMON /HEDXXX/ LHEAD,IHEAD(200)
      COMMON /LUNDAX/ LRECDA,IRECDA
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /WRDSIZ/ NBITS,NCHRWD
 
      IF (IVARIT.LT.0)  GOTO 1100
 
C     SET OUTPUT-RECORD NUMBER AND POINTERS TO CHARACTERS.
      IF (JI.LE.1) THEN
        IRECDA = 1
        IWRD = 1
        IBIT = 0
 
        DO 10 IC = 1, NC
          ICPTB(IC) = 0
          JTYPC = ABS(ITYPC(IC))
          IF (JTYPC.NE.1) GOTO 10
          NS = KSTAT(IC)
          ICPTW(IC) = IWRD
          ICPTB(IC) = IBIT
          IBIT = IBIT + NS
          I = IBIT/NBITS
          IWRD = IWRD + I
          IBIT = IBIT - I*NBITS
   10   CONTINUE
        IF (IBIT.NE.0) IWRD = IWRD + 1
 
        DO 20 IC = 1, NC
          JTYPC = ABS(ITYPC(IC))
          IF (JTYPC.LE.1 .OR. JTYPC.GE.5) GOTO 20
          ICPTW(IC) = IWRD
          IWRD = IWRD + 1
   20   CONTINUE
 
        LITM = IWRD - 1
        IF (LITM.GT.LIDAT) THEN
          IVAL(1) = LITM
          IVAL(2) = LIDAT
          CALL MESSB (85, IVAL, 2, -1, 0)
        ENDIF
      ENDIF
 
C     SIMPLIFY AND OUTPUT ITEM NAME.
C     Check for alternative name defined by CHARACTER FOR TAXON NAME.
      IALTNAME = 0
      IF (ICTNAME.NE.0.AND.ITM(ICTNAME).NE.0) THEN
        JG = ITM(ICTNAME)
        JSG = JG + 1
C       CHECK THAT THERE IS SOMETHING THERE
        IF (JSG.LT.JG+ITM(JG))  THEN
          IB = JSG + 2
          L = ITM(JSG) - 2
C         IGNORE ANGLE BRACKETS, THUS REDUCING LENGTH BY 2.
          IB = IB + 1
          L = MIN0(L-2, LRECDA*NCHRWD)
          IF (L.GT.0) IALTNAME = 1
        ENDIF
      ENDIF
      IF (IALTNAME.NE.0) THEN
        CALL COPIA (ITM(IB), IDAT, L)
      ELSE
        CALL SENSIM (ITM(NC+2), LIDAT, IDAT, MIN(LIDAT,LRECDA*NCHRWD),
     *  1, L, 0, 0)
      ENDIF
      LNAME(JI) = L
      ITPTR(JI) = IRECDA + 1
      CALL WRCSTR (IDAT, L, 0, LUNDA, LRECDA, IRECDA)
 
C--   OUTPUT ATTRIBUTES.
      CALL SETIA (IDAT, LITM, 0)
      CALL SETIA (IWORKC, NC, 1)
      DO 1000 IC = 1, NC
        JTYPC = IABS(ITYPC(IC))
        IF (JTYPC.EQ.5) GOTO 1000
        IWRD = ICPTW(IC)
        IF (JTYPC.GE.2) CALL RELOUT (-9999., IDAT(IWRD))
        IF (ITM(IC).LE.0) GO TO 1000
        NS = KSTAT(IC)
 
        JG = ITM(IC)
        JGN = JG + ITM(JG)
        JSG = JG + 1
        IF (JTYPC.GE.3.AND.ISBND(IC).EQ.0) GOTO 200
        IBIT = ICPTB(IC)
 
C-      SIMPLE, NON-NUMERIC ATTRIBUTE (CODED SEPARATELY FOR EFFICIENCY).
        IF (ISBND(IC).EQ.0.AND.ITM(JG).EQ.4.AND.ITM(JSG+1).EQ.1) THEN
          IF (JTYPC.EQ.1) THEN
            CALL SETBIT (IBIT+ITM(JSG+2), IDAT(IWRD), NBITS)
          ELSE
            VAL = ITM(JSG+2)
            CALL RELOUT (VAL, IDAT(IWRD))
          ENDIF
          GO TO 1000
        ENDIF
 
C-      COMPOUND, PSEUDO OR NUMERIC ATTRIBUTE.
  100   IF (IERRPC.NE.0)  THEN
          PCTERR = PCERR(IC)
        ELSE
          PCTERR = 0.
        ENDIF
        IF (IERRAB.NE.0)  THEN
          ABSERR = ABERR(IC)
        ELSE
          ABSERR = 0.
        ENDIF
        CALL FNDKST (ITM, ISBND, IC, LIDAT, ITYPC, KSTAT, IWORKC, NC,
     *   1, ISTAT, MS, ITSF, JI, PCTERR, ABSERR)
 
C       UNORDERED MULTISTATE.
        IF (JTYPC.EQ.1) THEN
          I = 0
          DO 120 IS = 1, NS
            I = I + ISTAT(IS)
            IF (ISTAT(IS).GT.0) CALL SETBIT (IBIT+IS, IDAT(IWRD), NBITS)
  120     CONTINUE
C         ANY ORDINARY VALUES OVERRIDE PSEUDOVALUES.
          IF (I.GT.0) GOTO 1000
C         VARIABLE OVERRIDES OTHER PSEUDOVALUES.
          IF (ITSF(1).NE.0) THEN
            DO 110 IS = 1, NS
              CALL SETBIT (IBIT+IS, IDAT(IWRD), NBITS)
  110       CONTINUE
          ENDIF
 
C       ORDERED MULTISTATE, OR NUMERIC WITH KEY STATES.
        ELSE
          VAL = 0.0
          N = 0
          DO 160 IS = 1, NS
            VAL = VAL + ISTAT(IS)*IS
            N = N + ISTAT(IS)
  160     CONTINUE
          IF (N.GT.0) THEN
            VAL = VAL/N
            CALL RELOUT (VAL, IDAT(IWRD))
            GOTO 1000
          ENDIF
          IF (ITSF(1).NE.0) THEN
            VAL = (NS+1)/2.
            CALL RELOUT (VAL, IDAT(IWRD))
          ENDIF
        ENDIF
        GOTO 1000
 
C-      NUMERIC VALUES.
  200   CALL SETIA (ITSF, 3, 0)
        N = 0
        VAL = 0.0
  210   JB = JSG + 2
          JE = JSG + ITM(JSG) - 1
          IF (ITM(JSG+1).EQ.0)  GOTO 400
          IF (ITM(JSG+1).EQ.6)  THEN
            ITSF(1) = 1
            GOTO 400
          ENDIF
          IF (ITM(JSG+1).EQ.7)  THEN
            ITSF(2) = 1
            GOTO 400
          ENDIF
          IF (ITM(JSG+1).EQ.8)  THEN
            ITSF(3) = 1
            GOTO 400
          ENDIF
C         NUMERIC RANGE - TAKE MIDVALUE OR AVERAGE OF TWO INNERMOST VALUES.
          NV = JE - JB + 1
          NV2 = NV/2
          JB = JB + NV2 - 1
          JE = JB + 1
          IF (NV-NV2*2.NE.0)  JB = JB + 1
 
          IB = JB
          VALSUB = 0.0
          NSUB = 0
  220     IF (JTYPC.EQ.4)  THEN
            VALSUB = VALSUB + RELIN(ITM(IB))
          ELSE
            VALSUB = VALSUB + FLOAT(ITM(IB))
          ENDIF
          NSUB = NSUB + 1
          IB = IB + 1
          IF (IB.LE.JE)  GOTO 220
 
C         GET MEAN OF SUBGROUP.
          VALSUB = VALSUB/NSUB
          VAL = VAL + VALSUB
          N = N + 1
 
  400     JSG = JSG + ITM(JSG)
        IF (JSG.LT.JGN)  GOTO 210
 
        IF (N.NE.0) THEN
          VAL = VAL/N
          CALL RELOUT (VAL, IDAT(IWRD))
        ENDIF
 
 1000 CONTINUE
 
      CALL WRDAI (IDAT, LITM, LUNDA, LRECDA, IRECDA)
      GOTO 2000
 
C     OUTPUT DATASET PARAMETERS.
 1100 IPARAM(1) = LRECDA
      IPARAM(2) = NBITS
      IPARAM(3) = NCHRWD
      IPARAM(4) = JI
      IPARAM(5) = NC
      IPARAM(6) = MS
      IPARAM(7) = LITM
 
C     HEADING.
      CALL SENSIM (IHEAD(2), LHEAD, IDAT, LIDAT, 1, L, 0, 0)
      IPARAM(8) = L
      IPARAM(9) = IRECDA + 1
      CALL WRCSTR (IDAT, L, 0, LUNDA, LRECDA, IRECDA)
 
C     WRITE CHARACTER TYPES.
      IPARAM(10) = IRECDA + 1
C     CONVERT NUMERICS WITH KEY STATES INTO ORDERED MULTISTATES.
      DO IC = 1, NC
        JTYPC = ITYPC(IC)
        IF ((JTYPC.EQ.3.OR.JTYPC.EQ.4).AND.ISBND(IC).NE.0)  THEN
          IWORKC(IC) = 2
        ELSE
          IWORKC(IC) = JTYPC
        ENDIF
      ENDDO
      CALL WRDAI (IWORKC, NC, LUNDA, LRECDA, IRECDA)
 
C     WRITE NUMBERS OF STATES.
      IPARAM(11) = IRECDA + 1
      CALL WRDAI (KSTAT, NC, LUNDA, LRECDA, IRECDA)
 
C     WRITE CHARACTER MASK.
      IPARAM(12) = IRECDA + 1
      CALL WRDAI (IMC, NC, LUNDA, LRECDA, IRECDA)
 
C     WRITE CHARACTER WEIGHTS.
      IPARAM(13) = IRECDA + 1
      CALL WRDAR (WTC, NC, LUNDA, LRECDA, IRECDA)
 
C     ATTRIBUTE WORD POINTERS.
      IPARAM(14) = IRECDA + 1
      CALL WRDAI (ICPTW, NC, LUNDA, LRECDA, IRECDA)
 
C     ATTRIBUTE BIT OFFSETS.
      IPARAM(15) = IRECDA + 1
      CALL WRDAI (ICPTB, NC, LUNDA, LRECDA, IRECDA)
 
C     TAXON MASK.
      IPARAM(16) = IRECDA + 1
      CALL WRDAI (IMI, JI, LUNDA, LRECDA, IRECDA)
 
C     ITEM RECORD POINTERS.
      IPARAM(17) = IRECDA + 1
      CALL WRDAI (ITPTR, JI, LUNDA, LRECDA, IRECDA)
 
C     LENGTHS OF NAMES.
      IPARAM(18) = IRECDA + 1
      CALL WRDAI (LNAME, JI, LUNDA, LRECDA, IRECDA)
 
C     WRITE PARAMETERS RECORD.
      IRECDA = 0
      CALL WRDAI (IPARAM, NPARAM, LUNDA, LRECDA, IRECDA)
 
 2000 RETURN
      END
