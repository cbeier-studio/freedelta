      SUBROUTINE COPSEN (ISEN, IDAT, LIDAT, IOUT, LIDATM)                   TINT
 
C  REVISED 05-JUN-97.
C  COPIES A SENTENCE TO AN ARRAY.
 
C  ISEN RECEIVES THE SENTENCE.
C  IDAT RETURNS THE ARRAY.
C  LIDAT RECEIVES THE LENGTH OF ISEN AND IBUF.
C  IOUT RECEIVES AND RETURNS THE LAST POSITION USED IN THE ARRAY.
C  LIDATM RECEIVES THE ACTUAL LENGTH OF THE DATA BUFFER FOR USE IN ERROR
C   MESSAGES.
 
 
      COMMON /BLKXXX/ KBLANK
 
      DIMENSION ISEN(LIDAT),IDAT(LIDAT)
 
      JSG = 2
      DO WHILE (JSG.LE.ISEN(1))
        IF (JSG.GT.2)  THEN
          IF (IDAT(IOUT).NE.KBLANK)  THEN
            IOUT = IOUT + 1
            IF (IOUT.GT.LIDAT)  GOTO 200
            IDAT(IOUT) = KBLANK
          ENDIF
        ENDIF
        IB = JSG + 2
        L = ISEN(JSG)
        IF (L.GT.0)  THEN
          IE = JSG + L - 1
          DO 100 I = IB, IE
C           REMOVE MULTIPLE BLANKS.
            IF (ISEN(I).EQ.KBLANK.AND.IDAT(IOUT).EQ.KBLANK)  GOTO 100
            IOUT = IOUT + 1
            IF (IOUT.GT.LIDAT)  GOTO 200
            IDAT(IOUT) = ISEN(I)
  100     CONTINUE
        ENDIF
        JSG = JSG + ISEN(JSG)
      END DO
 
      RETURN
 
  200 CALL MESSB (35, LIDATM, 1, -1, 0)
      END
      SUBROUTINE IATOBIT (MASK, NMASK, IDAT, LIDAT, JIDAT)                 TINTC
 
C  REVISED 12-JUL-96.
C  CONVERTS A MASK STORED AS AN INTEGER ARRAY TO A BIT MASK.
 
C  MASK RECEIVES THE INTEGER MASK ARRAY.
C  NMASK RECEIVES RECEIVES THE NUMBER OF ELEMENTS IN MASK.
C  IDAT RETURNS THE BIT MASK.
C  LIDAT RECEIVES THE LENGTH OF IDAT.
C  JIDAT RETURNS THE LENGTH OF THE BITMASK IN WORDS.
 
      COMMON /WRDSIZ/ NBITS,NCHRWD
 
      DIMENSION MASK(NMASK),IDAT(LIDAT)

      JIDAT = (NMASK + NBITS - 1)/NBITS
      IF (LIDAT.LT.JIDAT)  THEN
        CALL MESSA()
      ELSE
        DO I = 1, JIDAT
          IDAT(I) = 0
        ENDDO
        DO I = 1, NMASK
          IF (MASK(I).NE.0)  CALL SETBIT(I, IDAT, NBITS)
        ENDDO
      ENDIF
 
      RETURN
      END
      SUBROUTINE INTCHA (ITYPC, NSTAT, KSTAT, ICDES, LCDES, ICADDR, NC,     TINT
     * IKEYCH, KCOM, IOMNSC, IAS, MS, ISBND, IDAT, LIDAT, ICSTR, LCSTR,
     * IC, ICM, MAXDES)
 
C* REVISED 13-MAY-96.
C* OUTPUTS A CHARACTER DESCRIPTION IN INTKEY FORMAT.
C
C  ITYPC RECEIVES THE CHARACTER TYPES.
C  NSTAT RECEIVES THE NUMBERS OF STATES.
C  KSTAT RECEIVES THE NUMBERS OF KEY STATES.
C  ICDES RECEIVES THE STARTING POSITIONS OF THE CHARACTER DESCRIPTIONS.
C  LCDES RECEIVES THE LENGTHS OF THE CHARACTER DESCRIPTIONS.
C  ICADDR RECEIVES WORKING SPACE OF LENGTH NC.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  IKEYCH RECEIVES WHETHER THIS IS A KEY CHARACTER LIST.
C  KCOM RECEIVES THE COMMA CHARACTER TO BE USED TO SEPARATE STATE DESCRIPTIONS.
C  IOMNSC RECEIVES WHETHER TO OMIT INNER COMMENTS FROM CHARACTER DESCRIPTIONS
C  IAS RECEIVES WORKING SPACE OF LENGTH MS.
C  MS RECEIVES THE MAXIMUM NUMBER OF STATES.
C  ISBND RECEIVES THE NEW STATE BOUNDARIES.
C  IDAT RECEIVES WORKING SPACE OF LENGTH LIDAT.
C  LIDAT RECEIVES THE DATA BUFFER LENGTH.
C  ICSTR. IF ISTYPE.EQ.1, ICSTR RECEIVES THE CHARACTER DESCRIPTIONS.
C    IF ISTYPE.NE.1, ICSTR IS WORKING SPACE. SEE SUBR. FETCHC.
C  LCSTR RECEIVES THE DIMENSION OF ICSTR.
C  IC RECEIVES THE CHARACTER NUMBER.
C  ICM RECEIVES THE MASKED-IN CHARACTER NUMBER.
C  MAXDES RECEIVES AND RETURNS THE MAXIMUM DESCRIPTION LENGTH.
C
      DIMENSION ITYPC(NC),NSTAT(NC),KSTAT(NC),
     * ICDES(NC),LCDES(NC),ICADDR(NC),IAS(MS),
     * ISBND(LIDAT),IDAT(LIDAT),
     * ICSTR(LCSTR)
C
      COMMON /BLKXXX/ KBLANK
      COMMON /LUNDAX/ LRECDA,IRECDA
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /SYMXXX/ KPOINT,KDASH,KSTAR,KVERT,KEQUAL,KCOMMA,KSEMIC,
     * KCOLON,KSTOP,KSOL,KLPAR,KRPAR,KDOLLA,KQUEST,KEXCL,KAT,KLBRACE,
     * KRBRACE
 
C---  GET CHARACTER DESCRIPTION.
      CALL FETCHC (ICSTR, LCSTR, ICDES, LCDES, NC, IC, IAC, IAS, MS)
C
      JTYPC = IABS(ITYPC(IC))
      IF (JTYPC.EQ.3.OR.JTYPC.EQ.4.OR.JTYPC.EQ.5)  KSTAT(IC) = NSTAT(IC)
      NS = KSTAT(IC)
 
C     SET FLAG FOR HANDLING COMMENTS
C     DEFAULT IS TO RETAIN ALL COMMENTS
      ICOMM = 1
      IF (IOMNSC.NE.0)  ICOMM = 3
C
C---  FEATURE.
      NL = NS + 1
      CALL SETIA (IDAT, NL, 0)
      LL = LIDAT - NL
      JB = NL
      CALL SENSIM (ICSTR(IAC), LCSTR, IDAT(JB+1), LL, 0, LBF, ICOMM, 0)
      JB = JB + LBF
      LL = LL - LBF
      IDAT(1) = LBF
      IF (NS.LE.0)  GO TO 520
C
C---  STATES.
      JSG = ISBND(IC) + 1
C
      DO 500 JS = 1, NS
        IF (ISBND(IC).GT.0.AND.JTYPC.LE.2.AND.IKEYCH.EQ.0)  GO TO 200
C
C--     ORIGINAL STATES.
        I = IAS(JS)
        CALL SENSIM (ICSTR(I), LCSTR, IDAT(JB+1), LL, 1, LBF, ICOMM, 0)
        JB = JB + LBF
        LL = LL - LBF
        IDAT(JS+1) = LBF
        GO TO 500
 
C--     NEW STATES.
  200   NB = JSG + 2
        NE = JSG + ISBND(JSG) - 1
        JBB = JB
 
C-      MULTISTATE.
        DO 230 J = NB, NE
          IS = ISBND(J)
          I = IAS(IS)
          CALL SENSIM (ICSTR(I), LCSTR, IDAT(JB+1), LL, 1, LBF,
     *      ICOMM, 0)
          JB = JB + LBF
          LL = LL - LBF
          IF (J.EQ.NE)  GO TO 230
          IF (JTYPC.EQ.2) THEN
            IWD = 2
          ELSE
            CALL OUTWRD (KCOM, IDAT, LIDAT, JB, LL)
            IWD = 1
          ENDIF
          CALL OUTSYM (KBLANK, IDAT, JB, LL)
          CALL OUTWRD (IWD, IDAT, LIDAT, JB, LL)
  230     CONTINUE
 
        IF (ISBND(IC).GT.0)  JSG = JSG + ISBND(JSG)
        IDAT(JS+1) = JB - JBB
 
  500   CONTINUE
C---
C-
  520 ICADDR(ICM) = IRECDA + 1
      CALL WRCSTR (IDAT, JB, NL, LUNDA, LRECDA, IRECDA)
      LDES = JB - NL
      MAXDES = MAX0 (LDES,MAXDES)
C
      RETURN
      END
      SUBROUTINE INTHLP (IMC, IREC, IGRP, NC, NOTES, NOTGRP, IFMT,         TINTC
     * IDAT, LIDAT, IRECSV, IFSVGRP)
 
C  REVISED 17-JUL-00.
C  PROCESSES TEXT OF CHARACTER HELP.
 
C  IMC RECEIVES THE CHARACTER MASK.
C  IREC RETURNS THE OUTPUT RECORD NUMBERS.
C  IGRP RETURNS THE MASKED-IN GROUPS.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  NOTES RECEIVES RECORD POINTERS TO THE CHARACTER NOTES.
C  NOTGRP RECEIVES THE GROUP TO WHICH EACH NOTE BELONGS.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  IFMT RECEIVES FORMATTTING MARKS.
C  IDAT RECEIVES WORKING SPACE.
C  LIDAT RECEIVES THE LENGTH OF IDAT.
C  IRECSV RETURNS THE START RECORD FOR THE GROUP INFORMATION ASSOCIATED
C   WITH THE NOTES.
C  IFSVGRP RECEIVES WHETHER TO LEAVE SPACE FOR GROUP INFORMATION TO BE WRITTEN
 
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /LUNDAX/ LRECDA,IRECDA
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /SCR6XX/ LRECS6,IRECS6
 
      DIMENSION IMC(NC),IREC(NC),IGRP(NC),NOTES(NC),NOTGRP(NC),
     * IFMT(LIDAT),IDAT(LIDAT)
 
      NCM = NONZER (IMC, NC)
 
C     LEAVE SPACE FOR RECORD POINTERS AND GROUPS.
      NSLOTS = 1
      IF (IFSVGRP.NE.0) NSLOTS = 2
      NSKIP = (NCM + LRECDA - 1)/LRECDA
      IRECSV = IRECDA
      IRECDA = IRECDA + NSKIP*NSLOTS
 
      ICM = 0
      CALL SETIA (IREC, NC, 0)
      CALL SETIA (IGRP, NC, 0)
 
      DO 50 IC = 1, NC
        IF (IMC(IC).EQ.0)  GOTO 50
        ICM = ICM + 1
        IF (NOTES(IC).EQ.0)  GOTO 50
        IREC6 = NOTES(IC)
        IREC(ICM) = IRECDA + 1
        IGRP(ICM) = NOTGRP(IC)
        CALL RDDAI (L, 1, LUNS6, LRECS6, IREC6)
        IF (L.LE.LIDAT)  THEN
          IREC6 = IREC6 + 1
          CALL RDDAI (IDAT, L, LUNS6, LRECS6, IREC6)
          CALL WNOTES (IDAT, IFMT, IDAT(L+1),  LIDAT-L, LIDAT)
        ENDIF
   50 CONTINUE

C     OUTPUT RECORD POINTERS.
      CALL WRDAI (IREC, NCM, LUNDA, LRECDA, IRECSV)
 
C     NOTE: IRECSV NOW CONTAINS THE NUMBER OF THE OUTPUT RECORD FOR THE GROUP
C       INFORMATION.
 
      RETURN
      END
      SUBROUTINE INTTC (ITYPC, NSTAT, KSTAT, IMC, IALTC, ICDES, LCDES,      TINT
     * NOTES, NOTGRP, ICIMG, ICIMGP, IWORK1, IWORK2, NC,
     * ICNOTE, ICIMGE, IKEYCH, ISUPIMG, ICKYIMG, ITKYIMG, IOMNSC,
     * ICDNAM, LCDNAM, IFNT, MM1S,
     * MS, ISBND, IFMT, ITSHD, IDAT, LIDAT, ICSTR, LCSTR)
 
C* REVISED 1-SEP-99.
C* OUTPUTS CHARACTER LIST IN INTKEY FORMAT.
 
C  ITYPC RECEIVES THE CHARACTER TYPES.
C  NSTAT RECEIVES THE NUMBERS OF STATES.
C  KSTAT RECEIVES THE NUMBERS OF KEY STATES.
C  IMC RECEIVES THE CHARACTER MASK.
C  IALTC RECEIVES WHETHER TO USE THE ALTERNATE COMMA CHARACTER.
C  ICDES RECEIVES THE STARTING POSITIONS OF THE CHARACTER DESCRIPTIONS.
C  LCDES RECEIVES THE LENGTHS OF THE CHARACTER DESCRIPTIONS.
C  NOTES RECEIVES RECORD POINTERS TO THE CHARACTER HELP NOTES.
C  NOTGRP RECEIVES TO WHICH GROUP THE NOTES BELONG.
C  ICIMG RECEIVES POINTERS TO TEXT CONTAINING NAMES OF CHARACTER IMAGE FILES.
C  ICIMGP RECEIVES THE GROUP TO WHICH EACH CHARACTER IMAGE BELONGS.
C  IWORK1 RECEIVES WORKING SPACE OF LENGTH NC.
C  IWORK2 RECEIVES WORKING SPACE OF LENGTH NC.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  ICNOTE RECEIVES WHETHER THERE ARE CHARACTER NOTES TO BE APPENDED
C   TO THE CHARACTERS FILE.
C  ICIMGE RECEIVES A FLAG INDICATING WHETHER THERE CHARACTER IMAGE FILENAMES
C   TO PROCESS.
C  IKEYCH RECEIVES WHETHER A KEY CHARACTER LIST IS BEING USED.
C  ISUPIMG RECEIVES THE SCRATCH FILE RECORD NUMBER FOR STARTUP IMAGE INFORMATION
C  ICKYIMG RECEIVES THE SCRATCH FILE RECORD NUMBER FOR STARTUP IMAGE INFORMATION
C  ITKYIMG RECEIVES THE SCRATCH FILE RECORD NUMBER FOR STARTUP IMAGE INFORMATION
C  IOMNSC RECEIVES WHETHER TO OMIT INNER COMMENTS FROM CHARACTER DESCRIPTIONS
C  ICDNAM RECEIVES THE NAME OF FILE TO BE FOUND ON THE CD.
C  LCDNAM RECEIVES THE LENGTH OF THE NAME IN ICDNAM.
C  IFNT RECEIVES OVERLAY FONT INFORMATION.
C  MM1S RECEIVES WORDING SPACE OF LENGTH MS.
C  MS RECEIVES THE MAXIMUM NUMBER OF STATES.
C  ISBND RECEIVES THE NEW STATE BOUNDARIES.
C  IFMT RECEIVES FORMATTTING MARKS.
C  ITSHD RECEIVES THE ITEM SUBHEADINGS.
C  IDAT RECEIVES WORKING SPACE OF LENGTH LIDAT.
C  LIDAT RECEIVES THE DATA BUFFER LENGTH.
C  ICSTR. IF ISTYPE.EQ.1, ICSTR RECEIVES THE CHARACTER DESCRIPTIONS.
C    IF ISTYPE.NE.1, ICSTR IS WORKING SPACE. SEE SUBR. FETCHC.
C  LCSTR RECEIVES THE DIMENSION OF ICSTR.
 
      DIMENSION ITYPC(NC),NSTAT(NC),KSTAT(NC),IMC(NC),IALTC(NC),
     * ICDES(NC),LCDES(NC),NOTES(NC),NOTGRP(NC),ICIMG(NC),ICIMGP(NC),
     * IWORK1(NC),IWORK2(NC),ICDNAM(LCDNAM),IFNT(LIDAT),
     * MM1S(MS),ISBND(LIDAT),IFMT(LIDAT),ITSHD(LIDAT),IDAT(LIDAT),
     * ICSTR(LCSTR)
 
      COMMON /HEDXXX/ LHEAD,IHEAD(200)
      COMMON /LUNDAX/ LRECDA,IRECDA
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /FMTMKX/ IFMTMK,NFMTMK,FMTWRD(3),LFMTWD(3)
        CHARACTER*20 FMTWRD
      COMMON /FNTXXX/ IOFONT,NFONT
      COMMON /REGXXX/ IREGHD(200),LREGHD,IREGSHD(200),LREGSHD,
     * IREGVD(20),LREGVD
      COMMON /VLWXXX/ NVWD,MAXVWD,LVWD(18),IBPUNC,IEPUNC,
     * KVSTOP,KVCOM1,KVCOM2,KVSEMI,KVDEC
      COMMON /VWDXXX/ VWORD(18)
        CHARACTER*40 VWORD
 
      PARAMETER (NPARAM = 20)
      DIMENSION IPARAM(NPARAM)
 
C     SET RECORD POINTER TO START OF DIRECT ACCESS OUTPUT FILE.
      IRECDA = 1
 
      ICM = 0
      DO 10 IC = 1, NC
        IF (IMC(IC).EQ.0)  GOTO 10
        ICM = ICM + 1
   10   CONTINUE
 
      NCM = ICM
      IPARAM(1) = NCM
 
      MAXDES = 0
      ICM = 0
      DO 20 IC = 1, NC
        IF (IMC(IC).EQ.0)  GOTO 20
        ICM = ICM + 1
C       SET COMMA CHARACTER TO BE USED.
        IF (IALTC(IC).EQ.0)  THEN
          KCOM = KVCOM1
        ELSE
          KCOM = KVCOM2
        ENDIF
        CALL INTCHA (ITYPC, NSTAT, KSTAT, ICDES, LCDES, IWORK1, NC,
     *   IKEYCH, KCOM, IOMNSC, MM1S, MS, ISBND, IDAT, LIDAT, ICSTR,
     *   LCSTR, IC, ICM, MAXDES)
   20   CONTINUE
 
C     MAXIMUM DESCRIPTION LENGTH.
      IPARAM(2) = MAXDES
 
C     CHARACTER ADDRESSES.
      IPARAM(3) = IRECDA + 1
      CALL WRDAI (IWORK1, NCM, LUNDA, LRECDA, IRECDA)
 
C     NUMBERS OF STATES.
      ICM = 0
      DO 30 IC = 1, NC
        IF (IMC(IC).EQ.0)  GOTO 30
        ICM = ICM + 1
        JTYPC = IABS(ITYPC(IC))
        IF (JTYPC.LT.3)  THEN
          IWORK1(ICM) = KSTAT(IC)
        ELSE
          IWORK1(ICM) = NSTAT(IC)
        ENDIF
   30   CONTINUE
      IPARAM(4) = IRECDA + 1
      CALL WRDAI (IWORK1, NCM, LUNDA, LRECDA, IRECDA)
 
C     OUTPUT CHARACTER HELP NOTES IF ANY.
      IF (ICNOTE.EQ.0)  THEN
        IPARAM(5) = 0
        IPARAM(6) = 0
        IPARAM(7) = 0
        IPARAM(8) = 0
      ELSE
C       OUTPUT FORMATTING MARKS.
        IF (IFMTMK.NE.0)  THEN
          IF (IFMT(2).NE.0)  THEN
            IPARAM(7) = IRECDA + 1
            JOUT = 1
            IB = IFMT(2)
            CALL COPSEN (IFMT(IB), IDAT, LIDAT, JOUT, LIDAT)
            IDAT(1) = JOUT - 1
            CALL WRCSTR (IDAT, JOUT, 1, LUNDA, LRECDA, IRECDA)
          ELSE
            IPARAM(7) = 0
          ENDIF
          IF (IFMT(3).NE.0)  THEN
            IPARAM(8) = IRECDA + 1
            JOUT = 1
            IB = IFMT(3)
            CALL COPSEN (IFMT(IB), IDAT, LIDAT, JOUT, LIDAT)
            IDAT(1) = JOUT - 1
            CALL WRCSTR (IDAT, JOUT, 1, LUNDA, LRECDA, IRECDA)
          ELSE
            IPARAM(8) = 0
          ENDIF
        ENDIF

C       WRITE NOTES.
        IPARAM(5) = IRECDA + 1
        CALL INTHLP (IMC, IWORK1, IWORK2, NC, NOTES, NOTGRP, IFMT, IDAT,
     *   LIDAT, IRECGP, 1)
 
C       WRITE GROUP INFORMATION.
        IPARAM(6) = IRECGP + 1
        CALL WRDAI (IWORK2, NCM, LUNDA, LRECDA, IRECGP)
      ENDIF
 
C     WRITE CHARACTER IMAGE INFORMATION.
      IF (ICIMGE.EQ.0)  THEN
        IPARAM(9) = 0
      ELSE
        IPARAM(9) = IRECDA + 1
        IDUM = 0
        CALL INTHLP (IMC, IWORK1, IWORK2, NC, ICIMG, ICIMGP, IDUM,
     *   IDAT, LIDAT, IRECGP, 0)
      ENDIF
 
C     WRITE STARTUP IMAGE INFORMATION.
      IF (ISUPIMG.EQ.0)  THEN
        IPARAM(10) = 0
      ELSE
        IPARAM(10) = IRECDA + 1
        IDUM = 0
        MASK = 1
        CALL INTHLP (MASK, IWORK1, IWORK2, 1, ISUPIMG, IDUM, IDUM,
     *   IDAT, LIDAT, IRECGP, 0)
      ENDIF
 
C     WRITE CHARACTER KEYWORD IMAGE INFORMATION.
      IF (ICKYIMG.EQ.0)  THEN
        IPARAM(11) = 0
      ELSE
        IPARAM(11) = IRECDA + 1
        IDUM = 0
        MASK = 1
        CALL INTHLP (MASK, IWORK1, IWORK2, 1, ICKYIMG, IDUM, IDUM,
     *   IDAT, LIDAT, IRECGP, 0)
      ENDIF

C     WRITE TAXON KEYWORD IMAGE INFORMATION.
      IF (ITKYIMG.EQ.0)  THEN
        IPARAM(12) = 0
      ELSE
        IPARAM(12) = IRECDA + 1
        IDUM = 0
        MASK = 1
        CALL INTHLP (MASK, IWORK1, IWORK2, 1, ITKYIMG, IDUM, IDUM,
     *   IDAT, LIDAT, IRECGP, 0)
      ENDIF
 
C     HEADING.
C     IF DATASET IS REGISTERED, OUTPUT REGISTRATION HEADING.
      IPARAM(13) = IRECDA + 1
      IF (IREGHD(1).GT.1) THEN
        CALL SENSIM (IREGHD(2), LREGHD, IDAT(2), LIDAT-1, 1, L, 0, 0)
      ELSE
        CALL SENSIM (IHEAD(2), LHEAD, IDAT(2), LIDAT-1, 1, L, 0, 0)
      ENDIF
      IDAT(1) = L
      CALL WRCSTR (IDAT, L+1, 1, LUNDA, LRECDA, IRECDA)

 
C     REGISTRATION SUBHEADING
      IF (IREGSHD(1).EQ.1)  THEN
        IPARAM(14) = 0
      ELSE
        IPARAM(14) = IRECDA + 1
        CALL SENSIM (IREGSHD(2), LREGSHD, IDAT(2), LIDAT-1, 1, L, 0, 0)
        IDAT(1) = L
        CALL WRCSTR (IDAT, L+1, 1, LUNDA, LRECDA, IRECDA)
      ENDIF

C     REGISTRATION VALIDATION.
      IF (IREGVD(1).EQ.1)  THEN
        IPARAM(15) = 0
      ELSE
        IPARAM(15) = IRECDA + 1
        CALL SENSIM (IREGVD(2), LREGVD, IDAT(2), LIDAT-1, 1, L, 0, 0)
        IDAT(1) = L
        CALL WRCSTR (IDAT, L+1, 1, LUNDA, LRECDA, IRECDA)
      ENDIF
 
C     OUTPUT CHARACTER MASK FOR USE BY INTIMATE.
      IPARAM(16) = IRECDA + 1
      CALL IATOBIT (IMC, NC, IDAT(2), LIDAT-1, JIDAT)
      IDAT(1) = NC
      CALL WRDAI (IDAT, JIDAT+1, LUNDA, LRECDA, IRECDA)
 
C     OUTPUT "or" FROM VOCABULARY FOR USE IN DESCRIPTIONS.
      IPARAM(17) = IRECDA + 1
      L = LVWD(1)
      CALL COPSIA(VWORD(1), IDAT(2), L)
      IDAT(1) = L
      CALL WRCSTR(IDAT, L+1, 1, LUNDA, LRECDA, IRECDA)

C     OUTPUT `CHECK FOR CD' FLAG.
      IPARAM(18) = 0
      IF (LCDNAM.GT.0)  THEN
        IPARAM(18) = IRECDA + 1
        IDAT(1) = LCDNAM
        CALL COPIA (ICDNAM, IDAT(2), LCDNAM)
        CALL WRCSTR (IDAT, LCDNAM+1, 1, LUNDA, LRECDA, IRECDA)
      ENDIF
 
C     OUTPUT OVERLAY FONTS DATA
      IPARAM(19) = 0
      IF (IOFONT.NE.0)  THEN
        IPARAM(19) = IRECDA + 1
        CALL WRDAI (NFONT, 1, LUNDA, LRECDA, IRECDA)
        JJ = NFONT + 1
        ITOTLEN = NFONT
        DO I = 1, NFONT
C         IDAT(I) = LENGTH OF INFORMATION FOR FONT #I
          IB = IFNT(I)
          LEN = IFNT(IB) - 3
          IDAT(I) = LEN
          IF (LEN.GT.0)  THEN
            IB = IB + 3
            CALL COPIA (IFNT(IB), IDAT(JJ), LEN)
            JJ = JJ + LEN
            ITOTLEN = ITOTLEN + LEN
          ENDIF
        ENDDO
        CALL WRCSTR (IDAT, ITOTLEN, NFONT, LUNDA, LRECDA, IRECDA)
      ENDIF
 
C     OUTPUT ITEM SUBHEADINGS.
      IPARAM(20) = 0
      IF (NONZER(ITSHD, NC).NE.0)  THEN
C       IWORK1 will contain pointers to records containing ITEM SUBHEADINGS
        CALL SETIA (IWORK1, NC, 0)
        DO IC = 1, NC
          IF (ITSHD(IC).NE.0)  THEN
            JHD = ITSHD(IC)
            CALL SENSIM (ITSHD(JHD), LIDAT, IDAT(2), LIDAT-1, 1, L,
     *        0, 0)
            IDAT(1) = L
            IWORK1(IC) = IRECDA + 1
            CALL WRCSTR (IDAT, L+1, 1, LUNDA, LRECDA, IRECDA)
          ENDIF
        ENDDO
        IPARAM(20) = IRECDA + 1
        CALL WRDAI (IWORK1, NC, LUNDA, LRECDA, IRECDA)
      ENDIF
 
C     WRITE FIRST RECORD.
      IRECDA = 0
      CALL WRDAI (IPARAM, NPARAM, LUNDA, LRECDA, IRECDA)
C
C     TERMINATE USE OF DIRECT-ACCESS FILE.
      LUNDA = -1
      RETURN
      END
      SUBROUTINE WNOTES (NOTES, IFMT, IDAT,  LIDAT, LIDATM)                 TINT
 
C  REVISED 05-JUN-97.
C  OUTPUTS CHARACTER NOTES TO DIRECT-ACCESS FILE.
 
C  NOTES RECEIVES THE "NOTES" FOR A CHARACTER.
C  IFMT RECEIVES FORMATTING MARKS.
C  IDAT RECEIVES WORKING SPACE.
C  LIDAT RECEIVES THE LENGTH OF NOTES AND IDAT.
C  LIDATM RECEIVES THE ACTUAL LENGTH OF THE DATA BUFFER FOR OUTPUT IN ERROR 
C   MESSAGES.
 
      COMMON /BLKXXX/ KBLANK
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /LUNDAX/ LRECDA,IRECDA
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
 
      DIMENSION NOTES(LIDAT),IFMT(LIDAT),IDAT(LIDAT)
 
      JOUT = 1
 
C     OUTPUT FORMATTING MARKS FIRST.
C      IF (IFMTMK.NE.0.AND.IFMT(1).NE.0)  THEN
C        IB = IFMT(1)
C        CALL COPSEN (IFMT(IB), IDAT, LIDAT, JOUT, LIDAT)
C      ENDIF
 
C     OUTPUT CHARACTER NOTES.
      CALL COPSEN (NOTES, IDAT, LIDAT, JOUT, LIDATM)
 
      IDAT(1) = JOUT - 1
      CALL WRCSTR (IDAT, JOUT, 1, LUNDA, LRECDA, IRECDA)
 
      RETURN
      END
