      SUBROUTINE CHODIR (DIRNAME, LDIR, IERR)                               DIRA
 
C  REVISED 15-OCT-00.
C  Changes the output directory.
C  If an output file is already open, it is closed and reopened in the new
C  directory.
 
C  DIRNAME RETURNS THE NAME OF THE DIRECTORY
C  LDIR RETURNS THE LENGTH OF THE DIRECTORY NAME.
C  IERR RETURNS WHETHER AN ERROR OCCURS.
 
C     NUMBER OF LOGICAL UNITS IN LUNXXX.
      PARAMETER (NU=15)                                                       =*
 
      LOGICAL*4 E,O
      CHARACTER F*80,S*80
      DIMENSION LU(NU)
 
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /LUFXXX/ FNAME(19),LFNAME(19)
        CHARACTER FNAME*80
      COMMON /LUNDAX/ LRECDA,IRECDA
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
      COMMON /LUTXXX/ LUNTI,LUNTO
 
      EQUIVALENCE (LU(1),LUNE)
 
      CHARACTER*(*) DIRNAME
      LOGICAL CHKDIRY
 
      CALL RDDIR (DIRNAME, LDIR, 1, JPOINT, IERR)
      IF (IERR.NE.0 .OR. LDIR.EQ.0)  GOTO 1000
      IF (.NOT.CHKDIRY(DIRNAME, LDIR))  GOTO 130

C      LUNTYP = 3
C      LUNOUT = LU(LUNTYP)
C      IF (LUNOUT.EQ.LUNTO.OR.LUNOUT.LE.0) GOTO 1000
C      LF = LFNAME(LUNOUT)
C 
C      IF (LF.NE.0)  THEN
CC       CHECK IF OUTPUT FILE ALREADY OPEN.
C        INQUIRE (FILE=FNAME(LUNOUT), EXIST=E, OPENED=O, NUMBER=LUN,
C     *    ERR=100)
C        IF (O) THEN
C          IF (LUNREC(LUNOUT).NE.0)
C     *      CALL MESSC (119, IDUM, 1, 0, 0, FNAME(LUNOUT)(1:LF), LF, 1)
C          CALL ENDLN (LUNTYP)
C          IF (LUNREC(LUNOUT).NE.0)  THEN
C            CLOSE (UNIT=LUNOUT)
C          ELSE
C            CLOSE (UNIT=LUNOUT, STATUS='DELETE')
C          ENDIF
C        ENDIF
C      ENDIF
C 
CC     Create new file name
CC     Call EXNAME to extract the simple file name i.e. no path information
C      CALL EXNAME(FNAME(LUNOUT), S)
CC      F = ' '
C      F = DIRNAME
C      F(LDIR+1:) = S
C 
CC     Need to call EXNAME so that the Windows version can complete any
CC     relative paths in the new file name.
C      CALL EXNAME(F, S)
C 
CC      CALL GETAU (L)
C      CALL SETLUN (F, LUNOUT, LUNTYP)
C      CALL UOPEN (LUNOUT, LUNUSE(LUNOUT), F, LRECDA, IERR)
C      IF (IERR.NE.0) GOTO 120
      GOTO 1000
 
C--   ERROR MESSAGES.
  100 IERRNO = 54
      IPOINT = 0
      ITYPE = 1
      GOTO 900
  120 IERRNO = 58
      IPOINT = 0
      ITYPE = 1
      GOTO 900
  130 IERRNO = 163
      IPOINT = JPOINT
      ITYPE = 3
 
  900 CALL MESSA (IERRNO, ITYPE, IPOINT)
      IERR = 1

 1000 RETURN
      END
      SUBROUTINE CONA (ICPH, JE)                                            DIRA
 
C* REVISED 19-NOV-98.
C* IDENTIFIES TYPE A CONTROL PHRASE.
 
C  ICPH. IF A CONTROL PHRASE IS FOUND, ICPH RETURNS ITS NUMBER.
C    OTHERWISE, IT RETURNS 0.
C  JE. IF A CONTROL PHRASE IS FOUND, JE RETURNS THE POSITION IN IBUF
C    IMMEDIATELY AFTER THE END OF THE PHRASE.
C
      CHARACTER*1 ICON(12,35)
C
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
C
C     1 COMMENT
      DATA (ICON(I,1),I=1,12)
     * /'C','O','M',' ',' ',' ',' ',' ',' ',' ',' ',' '/
C     2 SHOW
      DATA (ICON(I,2),I=1,12)
     * /'S','H','O',' ',' ',' ',' ',' ',' ',' ',' ',' '/
C     3 DATA LISTING
      DATA (ICON(I,3),I=1,12)
     * /'D','A','T','L','I','S',' ',' ',' ',' ',' ',' '/
C     4 NO DATA LISTING
      DATA (ICON(I,4),I=1,12)
     * /'N','O',' ','D','A','T','L','I','S',' ',' ',' '/
C     5 ERROR FILE
      DATA (ICON(I,5),I=1,12)
     * /'E','R','R','F','I','L',' ',' ',' ',' ',' ',' '/
C     6 LISTING FILE
      DATA (ICON(I,6),I=1,12)
     * /'L','I','S','F','I','L',' ',' ',' ',' ',' ',' '/
C     7 PRINT FILE
      DATA (ICON(I,7),I=1,12)
     * /'P','R','I','F','I','L',' ',' ',' ',' ',' ',' '/
C     8 OUTPUT FILE
      DATA (ICON(I,8),I=1,12)
     * /'O','U','T','F','I','L',' ',' ',' ',' ',' ',' '/
C     9 INPUT DELTA TILE
      DATA (ICON(I,9),I=1,12)
     * /'I','N','P','D','E','L','F','I','L',' ',' ',' '/
C     10 PAGE LENGTH
      DATA (ICON(I,10),I=1,12)
     * /'P','A','G','L','E','N',' ',' ',' ',' ',' ',' '/
C     11 INPUT FILE
      DATA (ICON(I,11),I=1,12)
     * /'I','N','P','F','I','L',' ',' ',' ',' ',' ',' '/
C     12 OUTPUT PARAMETERS
      DATA (ICON(I,12),I=1,12)
     * /'O','U','T','P','A','R',' ',' ',' ',' ',' ',' '/
C     13 PRINT WIDTH
      DATA (ICON(I,13),I=1,12)
     * /'P','R','I','W','I','D',' ',' ',' ',' ',' ',' '/
C     14 OUTPUT WIDTH
      DATA (ICON(I,14),I=1,12)
     * /'O','U','T','W','I','D',' ',' ',' ',' ',' ',' '/
C     15 PREVIOUS INPUT FILE.
      DATA (ICON(I,15),I=1,12)
     * /'P','R','E','I','N','P','F','I','L',' ',' ',' '/
C     16 NEW LISTING PAGE
      DATA (ICON(I,16),I=1,12)
     * /'N','E','W','L','I','S','P','A','G',' ',' ',' '/
C     17 NEW PRINT PAGE
      DATA (ICON(I,17),I=1,12)
     * /'N','E','W','P','R','I','P','A','G',' ',' ',' '/
C     18 END
      DATA (ICON(I,18),I=1,12)
     * /'E','N','D',' ',' ',' ',' ',' ',' ',' ',' ',' '/
C     19 HEADING
      DATA (ICON(I,19),I=1,12)
     * /'H','E','A',' ',' ',' ',' ',' ',' ',' ',' ',' '/
C     20 PRINT COMMENT
      DATA (ICON(I,20),I=1,12)
     * /'P','R','I','C','O','M',' ',' ',' ',' ',' ',' '/
C     21 LIST HEADING
      DATA (ICON(I,21),I=1,12)
     * /'L','I','S','H','E','A',' ',' ',' ',' ',' ',' '/
C     22 PRINT HEADING
      DATA (ICON(I,22),I=1,12)
     * /'P','R','I','H','E','A',' ',' ',' ',' ',' ',' '/
C     23 KEY OUTPUT FILE
      DATA (ICON(I,23),I=1,12)
     * /'K','E','Y','O','U','T','F','I','L',' ',' ',' '/
C     24 DIST OUTPUT FILE
      DATA (ICON(I,24),I=1,12)
     * /'D','I','S','O','U','T','F','I','L',' ',' ',' '/
C     25 INTKEY OUTPUT FILE
      DATA (ICON(I,25),I=1,12)
     * /'I','N','T','O','U','T','F','I','L',' ',' ',' '/
C     26 PRINT APPEND
      DATA (ICON(I,26),I=1,12)
     * /'P','R','I','A','P','P',' ',' ',' ',' ',' ',' '/
C     27 REGISTRATION HEADING
      DATA (ICON(I,27),I=1,12)
     * /'R','E','G','H','E','A',' ',' ',' ',' ',' ',' '/
C     28 REGISTRATION SUBHEADING
      DATA (ICON(I,28),I=1,12)
     * /'R','E','G','S','U','B',' ',' ',' ',' ',' ',' '/
C     29 REGISTRATION VALIDATION
      DATA (ICON(I,29),I=1,12)
     * /'R','E','G','V','A','L',' ',' ',' ',' ',' ',' '/
C     30 INDEX OUTPUT FILE.
      DATA (ICON(I,30),I=1,12)
     * /'I','N','D','O','U','T','F','I','L',' ',' ',' '/
C     31 INDEX TEXT
      DATA (ICON(I,31),I=1,12)
     * /'I','N','D','T','E','X',' ',' ',' ',' ',' ',' '/
C     32 OUTPUT DIRECTORY
      DATA (ICON(I,32),I=1,12)
     * /'O','U','T','D','I','R',' ',' ',' ',' ',' ',' '/
C     33 IMAGE DIRECTORY
      DATA (ICON(I,33),I=1,12)
     * /'I','M','A','D','I','R',' ',' ',' ',' ',' ',' '/
C     34 CHECK FOR CD
      DATA (ICON(I,34),I=1,12)
     * /'C','H','E','F','O','R','C','D',' ',' ',' ',' '/
C     35 OVERLAY FONTS
      DATA (ICON(I,35),I=1,12)
     * /'O','V','E','F','O','N',' ',' ',' ',' ',' ',' '/
 
      CALL CONPHR (ICON, 12, 35, 3, IBUF, JBUF+1, JEDAT-1, ICPH, JE)
      RETURN
      END
      SUBROUTINE DELFIL (LUNTYP, IERR)                                      DIRA
 
C* REVISED 14-AUG-00.
C* READS NAME OF DELTA SYSTEM FILE AND OPENS IT.
 
C     NUMBER OF LOGICAL UNITS IN LUNXXX.
      PARAMETER (NU=15)                                                        =*
 
      LOGICAL*4 E,O
      CHARACTER S*60,SNAME*30,DIR*30
      DIMENSION LU(NU)
 
      COMMON /BLKXXX/ KBLANK
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
 
      EQUIVALENCE (LU(1),LUNE)
 
      IERR = 0
      CALL NEXTWD (JE)
      IF (IBUF(JBUF).EQ.KDSTAR) THEN
        CALL MESSA (10, 3, JBUF-1)
        IERR = 1
      ENDIF
      IF (IERR.NE.0) GOTO 1000
      S = CHAR(KBLANK)
      CALL COPIAS (IBUF(JBUF), S, MIN(JE-JBUF+1,60))
      JBUF = JE
 
C     CHECK FILE NAME AND OPEN IF NECESSARY.
      CALL EXNAME (S, SNAME)
      INQUIRE (FILE=S, EXIST=E, OPENED=O, NUMBER=LUN, ERR=100)
      IF (.NOT.E)  THEN
C       NOT IN CURRENT DIRECTORY, LOOK IN -
C       DELTA DIRECTORY (MS-DOS)                                              M\
C       EXAMPLE DIRECTORY (VAX)                                               V\
        CALL DELDIR (DIR, L)
        S(1:L) = DIR(1:L)
        S(L+1:) = SNAME(1:)
        INQUIRE (FILE=S, EXIST=E, OPENED=O, NUMBER=LUN, ERR=100)
        IF (.NOT.E)  GOTO 110
      ENDIF
      IF (O)  THEN
        IF (LUNUSE(LUN).NE.LUNCOM(LUNTYP))  GOTO 120
        LUNPRE(LUNTYP) = LU(LUNTYP)
        LU(LUNTYP) = LUN
      ELSE
        CALL GETAU (L)
        CALL SETLUN (S, L, LUNTYP)
        CALL UOPEN (L, LUNUSE(L), S, IDUMMY, IERR)
        IF (IERR.NE.0)  GOTO 130
        LUNREC(L) = 0
      ENDIF
      GOTO 1000
 
C     ERROR MESSAGES.
 100  IERRNO = 54
      GOTO 900
 110  IERRNO = 55
      GOTO 900
 120  IERRNO = 56
      GOTO 900
 130  IERRNO = 57
 
  900 CALL MESSA (IERRNO, 1, 0)
      IERR = 1
 
 1000 RETURN
      END
      SUBROUTINE DIRA (IR, W, IW, LW)                                       DIRA
 
C* REVISED 20-APR-99.
C* READS AND PROCESSES TYPE B DIRECTIVES.
 
C  IR RETURNS 0 IF THE CURRENT DIRECTIVE IS NOT TYPE B, 1 IF THE
C    DIRECTIVE IS TYPE B BUT NOT *END, OR 2 IF THE DIRECTIVE IS *END.
 
C  ON ENTRY, JBUF MUST BE POSITIONED AT A BLANK-STAR.
C  IF A DIRECTIVE IS PROCESSED -
C    NEW RECORDS ARE READ AS REQUIRED.
C    JBUF IS POSITIONED AT THE NEXT BLANK-STAR.
 
      DIMENSION W(LW),IW(LW)
 
C     NUMBER OF LOGICAL UNITS IN LUNXXX.
      PARAMETER (NU=15)                                                       =*
      DIMENSION LU(NU)

      COMMON /ADRXXX/ IITYPC,IIMC,IIMI,IWTC,IWTI,INSTAT,IKSTAT,
     * INEWOR,INDEC,IICDES,ILCDES,IITMAD,IWW1C,IWW2C,IWW1I,IWW2I,
     * IWW1S,IWW2S,IIDAT,IIDAM,IIDAV,IIPARA,IIEMPF,ILINKC,IICHHD,
     * IITSHD,IISBND,IIVCON,IICDEP,ILSTDE,INEWFL,IIMPL1,IIMPL2,
     * IIMPFL,IISUMM,IICPTW,IICPTB,IITPTR,ILNAME,IINTRL,IMANDC,IRBND,
     * INBND,IITXPT,INORNG,IIOMOR,IIFILS,IIREPS,IIADDT,IIADDC,IIEMPT,
     * IIEMPC,IMINC,IMAXC,INUMRN,INAFLG,ISCALF,IISRTS,IICNOT,IICNGP,
     * IITYMK,IIFMT,IIOMPD,IIOMLO,IICIMG,IICIGP,IITIMG,IITREC,IPCERR,
     * IABERR,IIOMFC,IIALTC,IIADNM,IIADDL,IIEMNM,IIEMPL,IIOUSP,IICSYN,
     * IILANG,IICSTR,IITHD,IITHREC,IICDNAM,IITFIL,IITFREC,IIXHD,IIXHREC,
     * IIFNT,IIUSECC,IIFOFSET,IITLNK,IILREC,IITLNK2,IINAUTOCC,IIOSUBJ,
     * ILAST
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /DIMXXX/ NC,MI,MS,LIDAT,LCSTR
      COMMON /DIRYXX/ OUTDIR,LOUTDIR,IMGDIR,LIMGDIR
        CHARACTER*80 OUTDIR,IMGDIR
      COMMON /HEDXXX/ LHEAD,IHEAD(200)
      COMMON /INIXXX/ JI,JT,JIM,IVARIT,MASTIN,MISTOP
      COMMON /INPFIL/ NINPUT
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /INQXXX/ ISEQ,SEQ,LIBUF,MIREC,LISIND,LLUNI,JLIS,LISOUT(132)
      COMMON /JSTXXX/ IOUT(132,5),LOUT,ICAP,
     * JIOUT(5),IENDWD(5),INDEN(5),LWIDTH(5),PSEQ,SEQINC,NSQDIG
      COMMON /LISXXX/ ILISTC,ILISTD,ILISTI,ILISTP,NEM(19),NEMM
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
      COMMON /LUTXXX/ LUNTI,LUNTO
      COMMON /MISXXX/ IMPVAL,IPACH,IPCHN,IPUNC,IRAB,IKEYCH,ICMPRS,
     * ITUNC,ITINAP,ITIMPL,IUNVAR,LNKC,IDEPC,LICDEP,IPSUMM,ICHSEQ,
     * ITMSEQ,INSRVA,IFATT,ITINTR,ICMAND,IUNRNG,IOMTOR,NEWFLS,IRSEMI,
     * IOMSTC,IADDCH,IEMPCH,IVARUN,ISCALC,ICNOTE,ICIMGE,ITIMGE,MTIMGE,
     * NTIMGE,IOMNSC,IOMCMT,IOMLOW,IERRPC,IERRAB,ICHNSE,NUMST0,IUMEAN,
     * NADNAM,NEMNAM,NODELO,IOMUSP,ICKYIMG,ITKYIMG,ISUPIMG,ICTIMGE,
     * ICTNAME,IHTML,IRTF,MTHEAD,NTHEAD,ITMHDGS,LCDNAM,MTFILE,NTFILE,
     * ITMFILS,MXHEAD,NXHEAD,IDXHDGS,INSIMGFN,ICOFILE,IUCC,IOUNC,ITLINK,
     * MTLINK,NTLINK,NAUTOCC,IOUTSUBJ
      COMMON /FNTXXX/ IOFONT,NFONT
      COMMON /REGXXX/ IREGHD(200),LREGHD,IREGSHD(200),LREGSHD,
     * IREGVD(20),LREGVD
      COMMON /SHOXXX/ LSHOW,ISHOW(200)
      COMMON /TPSXXX/ ITPSET,NTYPMK,IFBEGIN,IFEND
 
      EQUIVALENCE (LU(1),LUNE)
 
C---  READ NEXT CONTROL PHRASE.
   50 IDERR = 0
        IR = 0
        CALL CHDELW (0)
        CALL CONA (ICPH, JE)
        IF (ICPH.LE.0)  GOTO 8500
        IR = 1
        JBUF = JE
C
C---    PROCESS DIRECTIVE.
        GOTO (100,200,300,400,500,600,700,800,900,1000,
     *   1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,
     *   2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,
     *   3100,3200,3300,3400,3500), ICPH
C
C--     COMMENT.
  100   CALL SKDELW (0)
        GOTO 6000
C
C--     SHOW.
  200   CALL HEAD (0, 1, ISHOW, LSHOW, IW(IITYMK), LIDAT)
        GOTO 6000
C
C--     DATA LISTING.
  300   ILISTD = 1
        CALL IPRT(2, -1)
        GOTO 6000
C
C--     NO DATA LISTING.
  400   IF (ILISTD.NE.0)  CALL IPRT (2, -1)
        ILISTD = 0
        GOTO 6000
C
C--     ERROR FILE.
  500   LUNTYP = 1
        CALL GETFLO (LUNTYP, IERR)
        IF (IERR.NE.0)  GOTO 9000
        GOTO 6000
C
C--     LISTING FILE.
  600   LUNTYP = 2
        CALL GETFLO (LUNTYP, IERR)
        IF (IERR.NE.0)  GOTO 9000
        CALL HDFILE (IW(IITYMK), LIDAT, LUNTYP)
        ILISTD = 1
        GOTO 6000
C
C--     PRINT FILE.
  700   LUNTYP = 3
C       Check for output file already open.
        IF (LU(LUNTYP).GT.0.AND.LU(LUNTYP).NE.LUNTO)  THEN
C         Add terminating typsetting mark to print file, if required.
          IF (ITPSET.GT.0.AND.IFBEGIN.NE.0.AND.IFEND.EQ.0) THEN
            CALL JSTTPS (29, IW(IITYMK), LIDAT, NTYPMK, 3)
            CALL ENDLN(3)
            IFEND = 1
          ENDIF
        ENDIF
        CALL GETFLO (LUNTYP, IERR)
C        ISBIN = 0
        IF (IERR.NE.0)  GOTO 9000
        IF (ITPSET.GT.0) THEN
          CALL JSTTPS (28, IW(IITYMK), LIDAT, NTYPMK, LUNTYP)
          IFBEGIN = 1
          IFEND = 0
        ENDIF
        GOTO 6000
C
C--     OUTPUT FILE.
  800   LUNTYP = 4
        CALL GETFLO (LUNTYP, IERR)
        IF (IERR.NE.0)  GOTO 9000
        GOTO 6000
C
C--     INPUT DELTA FILE.
  900   IF (NINPUT.GT.0)  GOTO 5000
        LUNTYP = 8
        CALL DELFIL (LUNTYP, IERR)
        IF (IERR.NE.0)  GOTO 9000
        NINPUT = NINPUT + 1
        GOTO 6000
 
C--     PAGE LENGTH.
 1000   CALL RDINT(I, 0, 0, LPRINT)
        LPRINT = I
C       SET PAGING FOR FILES ALREADY OPENED.
        IF (LPRINT.GT.0)  THEN
          DO 1010 LUN = 1, NUN
            IF (LUNUSE(LUN).EQ.3.AND.LWIDTH(3).LT.0)  GOTO 1010
            IF (LUNUSE(LUN).GT.0.AND.LUN.NE.LUNTO.AND.LUNUSE(LUN).LE.3)
     *       LUNPAG(LUN) = 1
 1010     CONTINUE
        ENDIF
        GOTO 6000
C
C--     INPUT FILE.
 1100   IF (NINPUT.GT.0)  GOTO 5000
        LUNTYP = 8
        CALL GETFLI (LUNTYP, IERR)
        IF (IERR.NE.0)  GOTO 9000
        NINPUT = NINPUT + 1
        GOTO 6000
C
C--     OUTPUT PARAMETERS.
 1200   CALL TRANCC (IW(IITYPC), IW(IIMC), W(IWTC), IW(IKSTAT),
     *   IW(INSTAT), NC, IW(IITYMK), LIDAT, JIM, W(IWW1C))
        GOTO 6000
C
C--     PRINT WIDTH.
 1300   CALL RDINT (LWIDTH(3), 0, LOUT, LPRDEF)
        IF (IDERR.NE.0)  GOTO 9000
        IF (LWIDTH(3).EQ.0)  THEN
C         BINARY FILE.
          LWIDTH(3) = -LOUT
          LWIDTH(2) = LPRDEF
          LWIDTH(1) = LPRDEF
C         RESET PAGING FOR FILES ALREADY OPEN..
          DO LUN = 1, NUN
            IF (LUNUSE(LUN).EQ.3) LUNPAG(LUN) = 0
          ENDDO
        ELSE
C         ORDINARY FILE.
          LWIDTH(3) = MAX(40, LWIDTH(3))
          LWIDTH(2) = LWIDTH(3)
          LWIDTH(1) = LWIDTH(3)
        ENDIF
        GOTO 6000
C
C--     OUTPUT WIDTH.
 1400   CALL RDINT (LWIDTH(4), 40, MIREC, LPUDEF)
        IF (IDERR.NE.0)  GOTO 9000
        GOTO 6000
C
C--     PREVIOUS INPUT FILE.
 1500   L = LUNI
        IF (LUNPRE(8).LT.0) THEN
          CALL MESSA (52, 1, 0)
          GOTO 9000
        ENDIF
        LUNI = LUNPRE(8)
        LUNPRE(8) = L
        NINPUT = NINPUT - 1
        GOTO 6000
C
C--     NEW LISTING PAGE.
C       ALSO, IF 'LIST HEADING' IS THE NEXT DIRECTIVE, PROCESS IT NOW
C       (OTHERWISE, THERE WOULD BE A PAGE CONTAINING ONLY THE LISTING
C       OF THE 'LIST HEADING' DIRECTIVE.)
 1600   CALL CHDELW (0)
        IF (ILISTD.EQ.0)  GOTO 6000
        IF (IBUF(JBUF).NE.KDSTAR)  GOTO 1610
        CALL CONA (ICPH, JE)
        IF (ICPH.NE.23)  GOTO 1610                                           =*
        JBUF = JE
        CALL CHDELW (0)
        CALL PRHEAD (IHEAD, LHEAD, 2, LPRINT, 2, IW(IITYMK), LIDAT, 2)
        GOTO 6000
 1610   CALL BLKLIN (2, LPRINT, 2)
        GOTO 6000
C
C--     NEW PRINT PAGE.
 1700   CALL CHDELW (0)
        CALL BLKLIN (2, LPRINT, 3)
        GOTO 6000
C
C--     END.
 1800   IR = 2
        GOTO 8500
C
C--     HEADING.
 1900   CALL HEAD (1, 1, IHEAD, LHEAD, IW(IITYMK), LIDAT)
        GOTO 6000
C
C--     PRINT COMMENT.
C
C-      SET INDENTATION ETC.
 2000   CALL CHECKO (LUNO, 'PRINT')
        IF (ITPSET.GT.0)  THEN
          IF (IFBEGIN.EQ.0)  THEN
            CALL JSTTPS (28, IW(IITYMK), LIDAT, NTYPMK, 3)
            IFBEGIN = 1
          ENDIF
          GOTO 2010
        ENDIF
        CALL ENDLN (3)
        I = JBUF + 1
        J = LUNREC(LUNI)
        CALL SKNONB
        IF (LUNREC(LUNI).EQ.J)  GOTO 2006
        I = 1
        CALL BLKLIN (LUNREC(LUNI)-J, 2, 3)
 2006   CALL INDENT (JBUF-I, 3)
        GOTO 2014
C 2010   CALL BLKLIN (1, 0, 3)
 2010   CONTINUE
 2014   INDEN(3) = 0
C
C-      OUTPUT COMMENT.
 2020   CALL NEXTWD (JE)
          IF (IBUF(JBUF).EQ.KDSTAR)  GOTO 2040
          IF (IBUF(JBUF).EQ.KDNUM)  GOTO 2030
C         Note: we set the INHTML paramter of JSTOTP to 1 to prevent the text
c         from being translated i.e. PRINT COMMENT is assumed to contain
C         appropriate text for the translation, either RTF or HTML.
          CALL JSTOTP (IBUF(JBUF), JE-JBUF, 0, IW(IITYMK), LIDAT, 3,
     *      1, 0)
          JBUF = JE
          GOTO 2020
 2030   CALL CHDELW (0)
 2040   CALL ENDLN (3)
        GOTO 6000
C
C--     LIST HEADING.
 2100   CALL CHDELW (0)
        IF (ILISTD.NE.0)
     *   CALL PRHEAD (IHEAD, LHEAD, 2, 15, 2, IW(IITYMK), LIDAT, 2)
        GOTO 6000
C
C--     PRINT HEADING.
 2200   CALL CHDELW (0)
        CALL CHECKO (LUNO, 'PRINT')
        IF (ITPSET.GT.0.AND.IFBEGIN.EQ.0) THEN
          CALL JSTTPS (28, IW(IITYMK), LIDAT, NTYPMK, 3)
          IFBEGIN = 1
        ENDIF
        CALL PRHEAD (IHEAD, LHEAD, 2, 15, 2, IW(IITYMK), LIDAT, 3)
        GOTO 6000
C
C--     KEY OUTPUT FILE.
 2300   GOTO 2400
C
C--     DIST OUTPUT FILE. (AND OTHER DIRECT-ACCESS OUTPUT FILES.)
 2400   LUNTYP = 9
        CALL GETFLO (LUNTYP, IERR)
        IF (IERR.NE.0)  GOTO 9000
        GOTO 6000
 
C--     INTKEY OUTPUT FILE.
 2500   GOTO 2400
 
C--     PRINT APPEND.
 2600   LUNTYP = 8
        CALL GETFLI (LUNTYP, IERR)
        IF (IERR.NE.0)  GOTO 9000
        GOTO 6000
 
C--     REGISTRATION HEADING.
 2700   CALL HEAD (0, 0, IREGHD, LREGHD, IW(IITYMK), LIDAT)
        GOTO 6000

C--     REGISTRATION SUBHEADING.
 2800   CALL HEAD (1, 0, IREGSHD, LREGSHD, IW(IITYMK), LIDAT)
        GOTO 6000

C--     REGISTRATION VALIDATION
 2900   CALL HEAD (0, 0, IREGVD, LREGVD, IW(IITYMK), LIDAT)
        GOTO 6000

C--     INDEX OUTPUT FILE.
 3000   LUNTYP = 4
        CALL GETFLO (LUNTYP, IERR)
        GOTO 6000
 
C--     INDEX TEXT.
C 3100   IF (NINPUT.GT.0)  GOTO 5000
 3100   IF (LUNP.LE.0)  GOTO 5100
C        LUNTYP = 8
C        CALL GETFLI (LUNTYP, IERR)
C        IF (IERR.NE.0)  GOTO 9000
C        NINPUT = NINPUT + 1
        CALL INSIDX
        GOTO 6000

C--     OUTPUT DIRECTORY.
 3200   CALL CHODIR (OUTDIR, LOUTDIR, IERR)
        IF (IERR.NE.0)  GOTO 9000
        GOTO 6000
 
C--     IMAGE DIRECTORY.
 3300   CALL RDDIR (IMGDIR, LIMGDIR, 2, IDUM, IERR)
        IF (IERR.NE.0)  GOTO 9000
        GOTO 6000
 
C--     CHECK FOR CD.
 3400   CALL NEXTWD (JE)
        IF (IBUF(JBUF).EQ.KDSTAR) THEN
C         Default name is .\ichars
          LCDNAM = 8
        ELSE
          LCDNAM = JE - JBUF
        ENDIF
        CALL ALLOC2 (LW, IICDNAM, LCDNAM)
        IF (IBUF(JBUF).EQ.KDSTAR)  THEN
          CALL COPSIA('.\ichars', IW(IICDNAM), LCDNAM)
        ELSE
          CALL COPIA (IBUF(JBUF), IW(IICDNAM), LCDNAM)
          JBUF = JE
        ENDIF
        GOTO 6000
 
C     OVERLAY FONTS.
 3500 CALL RDSENL (IW(IIDAT), LIDAT, NFONT, 0, 0, JIDAT)
      IF (IDERR.NE.0)  GOTO 9000
      CALL ALLOC2 (LW, IIFNT, JIDAT)
      CALL COPIA (IW(IIDAT), IW(IIFNT), JIDAT)
C     SET FLAG.
      IOFONT = 1
      GOTO 6000

C---  DIAGNOSE NESTED INPUT FILE.
 5000 CALL MESSA (148, -1, JBUF)
      CALL SKDELW (0)
      IDERR = 1
      GOTO 8000
 
C---  NO INDEX FILE.
 5100 CALL MESSA (156, 1, 1)
      CALL SKDELW (0)
      IDERR = 1
      GOTO 8000

C---  TEST FOR ERROR.
 6000 IF (IDERR.EQ.0)  GOTO 8000
      CALL SKDELW (0)
C
C---  CHECK PRESENCE OF NEXT DELIMITER.
 8000 GOTO 50
C
 8500 RETURN
 
 9000 CALL EXTERM
      END
      SUBROUTINE GETFLI (LUNTYP, IERR)                                      DIRA
 
C* REVISED 14-AUG-00.
C* READS NAME OF INPUT FILE AND OPENS IT.
 
C     NUMBER OF LOGICAL UNITS IN LUNXXX.
      PARAMETER (NU=15)                                                       =*
 
      LOGICAL*4 E,O
      CHARACTER S*60,SNAME*30
      DIMENSION LU(NU)
 
      COMMON /BLKXXX/ KBLANK
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
 
      EQUIVALENCE (LU(1),LUNE)
 
      IERR = 0
      CALL NEXTWD (JE)
      IF (IBUF(JBUF).EQ.KDSTAR) THEN
        CALL MESSA (10, 3, JBUF-1)
        IERR = 1
      ENDIF
      IF (IERR.NE.0) GOTO 1000
      S = CHAR(KBLANK)
      CALL COPIAS (IBUF(JBUF), S, MIN(JE-JBUF+1,60))
      JBUF = JE
 
C     CHECK FILE NAME AND OPEN IF NECESSARY.
      CALL EXNAME (S, SNAME)
      INQUIRE (FILE=S, EXIST=E, OPENED=O, NUMBER=LUN, ERR=100)
      IF (.NOT.E)  GOTO 110
      IF (O)  THEN
        IF (LUNUSE(LUN).NE.LUNCOM(LUNTYP))  GOTO 120
        LUNPRE(LUNTYP) = LU(LUNTYP)
        LU(LUNTYP) = LUN
      ELSE
        CALL GETAU (L)
        CALL SETLUN (S, L, LUNTYP)
        CALL UOPEN (L, LUNUSE(L), S, IDUMMY, IERR)
        IF (IERR.NE.0)  GOTO 130
        LUNREC(L) = 0
      ENDIF
      GOTO 1000
 
C     ERROR MESSAGES.
 100  IERRNO = 54
      GOTO 900
 110  IERRNO = 55
      GOTO 900
 120  IERRNO = 56
      GOTO 900
 130  IERRNO = 57
 
  900 CALL MESSA (IERRNO, 1, 0)
      IERR = 1
 
 1000 RETURN
      END
      SUBROUTINE GETFLO (LUNTYP, IERR)                                      DIRA
 
C* REVISED 14-AUG-00.
C* READS NAME OF OUTPUT FILE, AND OPENS FILE.
 
C     NUMBER OF LOGICAL UNITS IN LUNXXX.
      PARAMETER (NU=15)                                                       =*
 
      LOGICAL*4 E,O
      CHARACTER S*60,SNAME*30
      DIMENSION LU(NU)
 
      COMMON /BLKXXX/ KBLANK
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /LUNDAX/ LRECDA,IRECDA
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
      COMMON /DIRYXX/ OUTDIR,LOUTDIR,IMGDIR,LIMGDIR
        CHARACTER*80 OUTDIR,IMGDIR
 
      EQUIVALENCE (LU(1),LUNE)
 
      IERR = 0
      CALL NEXTWD (JE)
      IF (IBUF(JBUF).EQ.KDSTAR) THEN
        CALL MESSA (10, 3, JBUF-1)
        IERR = 1
        GOTO 1000
      ENDIF
 
      S = CHAR(KBLANK)
      IB = 1
      LBUF = MIN(JE-JBUF+1, 60)
 
      IADDIR = 1
C     Check for presence of directory separators in file name.
C     If found, do not prepend directory name.
      DO I = 1, LBUF
        IF (IBUF(JBUF+I-1).EQ.KDSOL.OR.IBUF(JBUF+I-1).EQ.KDBSLSH) THEN
          IADDIR = 0
          GOTO 10
        ENDIF
      ENDDO
 
   10 IF (IADDIR.NE.0)  THEN
C       Prepend name of output directory.
        IF (LOUTDIR.GT.0.AND.(LUNTYP.EQ.3.OR.LUNTYP.EQ.4))  THEN
          S = OUTDIR
          IB = IB + LOUTDIR
        ENDIF 
      ENDIF
      CALL COPIAS (IBUF(JBUF), S(IB:), LBUF)
      JBUF = JE
 
C     CHECK FILE NAME AND OPEN IF NECESSARY.
      CALL EXNAME (S, SNAME)
      INQUIRE (FILE=S, EXIST=E, OPENED=O, NUMBER=LUN, ERR=100)
      IF (O) THEN
        IF (LUNUSE(LUN).NE.LUNCOM(LUNTYP))  GOTO 110
        LU(LUNTYP) = LUN
      ELSE
        CALL GETAU (L)
C       IF FILE ALREADY EXISTS AND DIRECT-ACCESS FILE TO BE CREATED,
C       FIRST OPEN AND DELETE.
        IF (E.AND.LUNTYP.EQ.9)  THEN
          CALL UOPEN(L, 5, S, LRECDA, IERR)
          CLOSE (UNIT=L, STATUS='DELETE')
        ENDIF
        CALL SETLUN (S, L, LUNTYP)
        CALL UOPEN (L, LUNUSE(L), S, LRECDA, IERR)
        IF (IERR.NE.0) GOTO 120
        LUNREC(L) = 0
      ENDIF
      GOTO 1000
 
C--   ERROR MESSAGES.
  100 IERRNO = 54
      GOTO 900
  110 IERRNO = 56
      GOTO 900
  120 IERRNO = 58
 
  900 CALL MESSA (IERRNO, 1, 0)
      IERR = 1
C--
 1000 RETURN
      END
      SUBROUTINE HDFILE (ITYPMK, LIDAT, LUNTYP)                             DIRA
 
C* REVISED 13-MAY-91.
C* PRINTS HEADINGS AT START OF NEW FILE.
 
C  ITYPMK RECEIVES TYPESETTING MARKS.
C  LIDAT RECEIVES THE LENGTH OF ITYPMK.
C  LUNTYP RECEIVES THE LOGICAL UNIT TYPE.
 
C     NUMBER OF LOGICAL UNITS IN LUNXXX.
      PARAMETER (NU=15)                                                       =*
 
      DIMENSION ITYPMK(LIDAT),IBF(1),LU(NU)
 
      COMMON /BLKXXX/ KBLANK
      COMMON /HEDXXX/ LHEAD,IHEAD(200)
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
      COMMON /SHOXXX/ LSHOW,ISHOW(200)
 
      EQUIVALENCE (LU(1),LUNE)
 
      LUN = LU(LUNTYP)
      IF (LUN.LT.0)  GOTO 100
      IF (LUNREC(LUN).GT.0) GOTO 100
      CALL PROGID (LUNTYP)
      CALL PRHEAD (IHEAD, LHEAD, 0, 1, 0, ITYPMK, LIDAT, LUNTYP)
      CALL PRHEAD (ISHOW, LSHOW, 0, 1, 0, ITYPMK, LIDAT, LUNTYP)
      IBF(1) = KBLANK
      CALL WRTREC (IBF, 1, LUNTYP, 4)
 
  100 RETURN
      END
      SUBROUTINE HEAD (IFTIM, IPRT, IBF, LBF, ITYPMK, LIDAT)                DIRA
 
C* REVISED 7-MAR-00.
C* READS AND STORES HEADING.
 
C  IFTIM RECEIVES 1 IF #DATE AND #TIME ARE TO BE PROCESSED, 0 OTHERWISE.
C  IBF RETURNS THE HEADING.
C  LBF RECEIVES THE LENGTH OF IBF.
C  ITYPMK RECEIVES TYPESETTING MARKS.
C  LIDAT RECEIVES THE LENGTH OF ITYPMK.
 
C  EACH LINE OF THE HEADING IS READ. THE HEADING IS TERMINATED BY THE
C     NEXT BLANK-STAR.
C  THE HEADING IS STORED IN IHEAD, AND THE TIME AND DATE ARE APPENDED, IF
C    REQUIRED. THE TIME AND DATE, AS RETURNED BY GTIME, MUST CONTAIN 20 LETTERS.
C    THE NUMBER OF ELEMENTS IN THE HEADING IS STORED IN IHEAD(1).
C  NEW RECORDS ARE READ IF REQUIRED.
C  IF AN ERROR IS FOUND, A MESSAGE IS PRINTED, IDERR IS SET, AND
C    NCERR IS INCREMENTED.
C  ON EXIT, JBUF IS POSITIONED AT THE NEXT BLANK-STAR.
C
      DIMENSION IBF(LBF),ITYPMK(LIDAT)
      CHARACTER*10 DAT,TIM
 
      COMMON /ALPXXX/ KA,KB,KC,KD,KE,KF,KG,KH,KI,KJ,KK,KL,KM,
     *                KN,KO,KP,KQ,KR,KS,KT,KU,KV,KW,KX,KY,KZ
      COMMON /BLKXXX/ KBLANK
      COMMON /LISXXX/ ILISTC,ILISTD,ILISTI,ILISTP,NEM(19),NEMM
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
 
      CALL RDTXT (0, IDUM, 0, 0, IBF(2), LBF-4, LEN, IERR)
      IF (IERR.NE.0)  GOTO 100
      IF (LEN.LE.3)  GOTO 110
      LEN = LEN + 1
      IBF(1) = LEN
 
      IF (IFTIM.EQ.0)  GOTO 200
      CALL GTIME(TIM, DAT)
      I = 2
      DO WHILE (I.LE.LEN)
        IF (IBF(I).NE.KDNUM)  GOTO 50
        IADDTM = 0
        IADDDT = 0
        IF (IBF(I+1).EQ.KT)  THEN
          IF (IBF(I+2).EQ.KI.AND.
     *        IBF(I+3).EQ.KM.AND.IBF(I+4).EQ.KE)  THEN
            IADDTM = 1
            L = 10
            DO WHILE (TIM(L:L).EQ.CHAR(KBLANK))
              L = L - 1
            END DO
          ELSE
            GOTO 50
          ENDIF
        ELSE IF (IBF(I+1).EQ.KD)  THEN
          IF (IBF(I+2).EQ.KA.AND.
     *        IBF(I+3).EQ.KT.AND.IBF(I+4).EQ.KE)  THEN
            IADDDT = 1
            L = 10
            DO WHILE (DAT(L:L).EQ.CHAR(KBLANK))
              L = L - 1
            END DO
          ELSE
            GOTO 50
          ENDIF
        ELSE
          GOTO 50
        ENDIF
C       LDIFF IS THE DIFFERENCE IN THE LENGTH OF
C       #TIME AND THE ACTUAL TIME  OR #DATE AND THE ACTUAL DATE.
        LDIFF = L - 5
        IF (LEN+LDIFF.GT.LBF)  GOTO 100
        IF (LDIFF.GT.0)  THEN
          DO J = LEN, I+5, -1
            IBF(J+LDIFF) = IBF(J)
          ENDDO
        ENDIF
        IF (IADDTM.NE.0)  THEN
          CALL COPSIA(TIM, IBF(I), L)
        ELSE IF (IADDDT.NE.0)  THEN
          CALL COPSIA(DAT, IBF(I), L)
        ENDIF
        I = I + 5 + LDIFF
        LEN = LEN + LDIFF
        IBF(1) = LEN
        IBF(2) = LEN - 1
        IBF(3) = LEN - 2
        GOTO 55
   50   I = I + 1
   55   CONTINUE
      END DO
      GOTO 200
C
C     ERROR MESSAGE.
  100 CALL MESSA (59, 1, 0)
  110 IBF(1) = 1
 
  200 IF (IPRT.EQ.0)  GOTO 300
C
C--   PRINT THE HEADING ON ERROR AND LISTING FILES ON WHICH IT HAS NOT
C      BEEN LISTED.
      IF (LUNE.EQ.LUNL.AND.ILISTD.NE.0)  GOTO 250
      IF (LEN.GT.1)  THEN
        CALL PRHEAD (IBF, LBF, 0, 1, 0, ITYPMK, LIDAT, 1)
      ELSE
        CALL WRTREC (KBLANK, 1, 1, 4)
      ENDIF
 
  250 IF (LUNE.EQ.LUNL.OR.ILISTD.NE.0)  GOTO 300
      IF (LEN.GT.1)  THEN
        CALL PRHEAD (IBF, LBF, 0, 1, 0, ITYPMK, LIDAT, 2)
      ELSE
        CALL WRTREC (KBLANK, 1, 2, 4)
      ENDIF
 
  300 RETURN
      END  
      SUBROUTINE PRHEAD (IHEAD, LHEAD, NB, NG, NE, ITYPMK, LIDAT,           DIRA
     * LUNTYP)
 
C* REVISED 13-MAY-91.
C* PRINTS HEADING.
C
C  IHEAD RECEIVES THE HEADING (SEE SUBR. HEAD FOR DETAILS).
C  LHEAD RECEIVES THE DIMENSION OF IHEAD.
C  NB RECEIVES THE NUMBER OF BLANK LINES BEFORE THE HEADING.
C  NG RECEIVES THE MINIMUM NUMBER OF ADDITIONAL LINES (INCLUDING THE
C    HEADING) WHICH MUST FIT ON THE CURRENT PAGE.
C  NE RECEIVES THE NUMBER OF BLANK LINES AFTER THE HEADING.
C  ITYPMK RECEIVES TYPESETTING MARKS.
C  LIDAT RECEIVES THE LENGTH OF ITYPMK.
C  LUNTYP RECEIVES THE TYPE OF LOGICAL UNIT.
C
      DIMENSION IHEAD(LHEAD),ITYPMK(LIDAT)
C
      CALL BLKLIN (NB, NG, LUNTYP)
      JG = 2
   10 IF (JG.GT.IHEAD(1))  GOTO 50
        CALL WSENT (IHEAD(JG), LHEAD, 1, 0, 0, 0, 1, ITYPMK, LIDAT,
     *   LUNTYP)
        JG = JG + IHEAD(JG)
      GOTO 10
   50 CALL BLKLIN (NE, 0, LUNTYP)
 
      RETURN
      END
      SUBROUTINE RDDIR (STR, LSTR, IOPT, IPOINT, IERR)                      DIRA
 
C  REVISED 3-SEP-98.
C  READS THE NEXT WORD FROM THE INPUT FILE AND CONVERTS IT TO A STRING.
C  THE STRING IS ASSUMED TO BE A DIRECTORY NAME AND A TRAILING SLASH
C  IS APPENDED IF NOT PRESENT.
 
C  STR RETURNS THE STRING.
C  LSTR RETURNS THE LENGTH OF STR.
C  IOPT RECEIVES THE DIRECTORY SEPARATOR 1=BACKSLASH, 2=FORWARD SLASH.
C  IPOINT RETURNS A POINTER TO THE DIRECTORY NAME IN THE INPUT BUFFER.
C   (USED FOR ERROR REPORTING.)
C  IERR RETURNS THE ERROR STATUS.
 
      COMMON /BLKXXX/ KBLANK
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
 
      CHARACTER*(*) STR
 
      IERR = 0
      CALL NEXTWD (JE)
      IF (IBUF(JBUF).EQ.KDSTAR) THEN
        CALL MESSA (10, 3, JBUF-1)
        IERR = 1
        GOTO 100
      ENDIF
 
      IPOINT = JBUF
      STR = CHAR(KBLANK)
      LSTR = 0
      L = MIN(JE-JBUF+1,60)
      CALL COPIAS (IBUF(JBUF), STR, L)
      JBUF = JE
C     Remove trailing blanks.
      DO WHILE (STR(L:L).EQ.CHAR(KBLANK))
        L = L - 1
      ENDDO
C     Look for directory separator within name. Change if incorrect for purpose.
      DO I = 1, L
        IF (IOPT.EQ.2.AND.STR(I:I).EQ.CHAR(KDBSLSH)) THEN
          STR(I:I) = CHAR(KDSOL)
          GOTO 50
        ELSE IF (IOPT.EQ.1.AND.STR(I:I).EQ.CHAR(KDSOL)) THEN
          STR(I:I) = CHAR(KDBSLSH)
          GOTO 50
        ENDIF
      ENDDO
C     Add terminating separator if required.
   50 IF (STR(L:L).NE.CHAR(KDBSLSH).AND.STR(L:L).NE.CHAR(KDSOL)) THEN
        L = L + 1
        IF (IOPT.EQ.1)  THEN
          STR(L:L) = CHAR(KDBSLSH)
        ELSE
          STR(L:L) = CHAR(KDSOL)
        ENDIF
      ENDIF
      LSTR = L
 
  100 RETURN
      END
      SUBROUTINE SKIPCC                                                     DIRA
 
C* REVISED 14/2/84.
C* SKIPS CONTROL CARDS.
 
      COMMON /JSTXXX/ IOUT(132,5),LOUT,ICAP,
     * JIOUT(5),IENDWD(5),INDEN(5),LWIDTH(5),PSEQ,SEQINC,NSQDIG
 
      CALL ENDLN (4)
 
   50 CALL CARDI (IOUT(1, 4), ICARD)
        IF (ICARD.LT.0)  GOTO 100
        GOTO 50
  100 RETURN
      END
      SUBROUTINE TRANCC (ITYPC, IMC, WTC, KSTAT, NSTAT, NC, ITYPMK,         DIRA
     * LIDAT, JIM, WORKNC)
 
C* REVISED 5-APR-93.
C* OUTPUTS CONTROL CARDS.
 
C  ITYPC RECEIVES THE CHARACTER TYPES.
C  IMC RECEIVES THE CHARACTER MASK.
C  WTC RECEIVES THE CHARACTER WEIGHTS.
C  KSTAT RECEIVES THE NUMBERS OF KEY STATES.
C  NSTAT RECEIVES THE NUMBERS OF STATES.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  ITYPMK RECEIVES TYPESETTING MARKS.
C  LIDAT RECEIVES THE LENGTH OF ITYPMK.
C  JIM RECEIVES THE NUMBER OF MASKED-IN ITEMS.
C  WORKNC RECEIVES WORKING SPACE OF LENGTH NC.
 
      DIMENSION ITYPC(NC),IMC(NC),WTC(NC),KSTAT(NC),NSTAT(NC),
     * ITYPMK(LIDAT),WORKNC(NC)
 
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /MISXXX/ IMPVAL,IPACH,IPCHN,IPUNC,IRAB,IKEYCH,ICMPRS,
     * ITUNC,ITINAP,ITIMPL,IUNVAR,LNKC,IDEPC,LICDEP,IPSUMM,ICHSEQ,
     * ITMSEQ,INSRVA,IFATT,ITINTR,ICMAND,IUNRNG,IOMTOR,NEWFLS,IRSEMI,
     * IOMSTC,IADDCH,IEMPCH,IVARUN,ISCALC,ICNOTE,ICIMGE,ITIMGE,MTIMGE,
     * NTIMGE,IOMNSC,IOMCMT,IOMLOW,IERRPC,IERRAB,ICHNSE,NUMST0,IUMEAN,
     * NADNAM,NEMNAM,NODELO,IOMUSP,ICKYIMG,ITKYIMG,ISUPIMG,ICTIMGE,
     * ICTNAME,IHTML,IRTF,MTHEAD,NTHEAD,ITMHDGS,LCDNAM,MTFILE,NTFILE,
     * ITMFILS,MXHEAD,NXHEAD,IDXHDGS,INSIMGFN,ICOFILE,IUCC,IOUNC,ITLINK,
     * MTLINK,NTLINK,NAUTOCC,IOUTSUBJ
      COMMON /TPSXXX/ ITPSET,NTYPMK,IFBEGIN,IFEND
      COMMON /TRNXXX/ IPCHAR,IPITEM,IPNAME,ITRAN
 
      IF (ITRAN.EQ.0 .OR. ITPSET.GT.0)  GOTO 2000
 
      CALL CHECKO (LUNP, 'OUTPUT')
 
      GOTO (100,200,300,2000,500,600,700,800,900,1000,1100), ITRAN           =*
 
C     KEY FORMAT.
  100 CONTINUE
      GOTO 4000
C     NOT IN USE.
  200 CONTINUE
      GOTO 4000
C     DELTA FORMAT.
  300 CALL DELCRD
      GOTO 4000
C     NOT IN USE.
  500 CONTINUE
      GOTO 4000
C     NOT IN USE.
  600 CALL NEXCRD (IMC, ITYPC, KSTAT, WTC, NC, ITYPMK, LIDAT, JIM, 
     * WORKNC)
      GOTO 4000
C     EXIR FORMAT.
  700 CALL EXICRD (ITYPC, NSTAT, IMC, NC)
      GOTO 4000
C     PAYNE FORMAT.
  800 CALL PAYCRD (IMC, KSTAT, WTC, NC, JIM)
      GOTO 4000
  900 GOTO 4000
 1000 GOTO 4000
 1100 CALL PAUCRD (IMC, ITYPC, KSTAT, WTC, NC, ITYPMK, LIDAT, JIM)
      GOTO 4000
 
 2000 CALL SKIPCC
 
 4000 RETURN
      END
