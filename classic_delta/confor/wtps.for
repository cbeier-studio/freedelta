      SUBROUTINE CAP (K, ICAP)                                              WTPS
 
C* REVISED 19-OCT-98.
C* CHANGES NEXT SUITABLE SYMBOL TO UPPER CASE.
 
C  K RECEIVES AND RETURNS THE SYMBOL, IN ASCII CODE.
C  ICAP RETURNS 0 IF A SYMBOL WAS CHANGED, OR IF A SUITABLE SYMBOL
C    WAS ALREADY UPPER CASE OR NUMERIC. OTHERWISE, ICAP IS UNALTERED.
 
      DIMENSION KCAP(0:255)
 
C     ANSI capitalization table.
      DATA KCAP/ 32*0, 16*0,
     * 48, 49, 50, 
     * 51, 52, 53, 54, 55, 56, 57, 7*0,
     * 65, 66, 67, 68, 69, 70, 
     * 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
     * 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
     * 6*0, 65, 66, 67, 68, 
     * 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
     * 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 
     * 89, 90, 15*0,
     * 138, 0, 140, 15*0,
     * 140, 2*0, 159, 32*0,
     * 192, 193, 194, 195, 196, 197, 198, 199, 200, 
     * 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 
     * 211, 212, 213, 214, 0, 216, 217, 218, 219, 220, 
     * 221, 222, 223, 192, 193, 194, 195, 196, 197, 198, 
     * 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 
     * 209, 210, 211, 212, 213, 214, 0, 216, 217, 218, 
     * 219, 220, 221, 222, 159/
 
C     ASCII capitalization table.
c      DATA KCAP/ 32*0,
c     N  16*0,48,49,50,51,52,53,54,55,56,57,6*0,
c     A  0,65,66,67,68,69,70,71, 72,73,74,75,76,77,78,79,
c     P  80,81,82,83,84,85,86,87, 88,89,90,5*0,
c     G  0,65,66,67,68,69,70,71, 72,73,74,75,76,77,78,79,
c     P  80,81,82,83,84,85,86,87, 88,89,90,5*0,
c     C  128,154,144,65,142,65,143,128, 69,69,69,73,73,73,142,143,
c     E  144,146,146,79,153,79,85,85, 89,153,154,5*0,
c     A  65,73,79,85,165,165,2*0, 8*0,  80*0/
 
      IF (IGNOR(K).NE.0)  GO TO 100
      I = K
C     K = K - 128                                                             1*
      IF (KCAP(I).NE.0) THEN
        K = KCAP(I)
C       K = K + 128                                                           1*
        ICAP = 0
      ENDIF
 
  100 RETURN
      END
      FUNCTION   IGNOR (K)                                                  WTPS
 
C* REVISED 8-JUN-99.
C* DETERMINES WHETHER SYMBOL IS PART OF AN RTF CONTROL WORD.
 
C  THE FUNC. RETURNS 1 IF K IS PART OF A CONTROL WORD, 0 OTHERWISE.
C  K RECEIVES THE CHARACTER.
C  ICMD IN COMMON BLOCK IGNXXX MUST BE SET TO 0 BEFORE THE FIRST CALL.

      COMMON /BLKXXX/ KBLANK
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /IGNXXX/ ICMD,IGNTYP
      COMMON /SYMXXX/ KPOINT,KDASH,KSTAR,KVERT,KEQUAL,KCOMMA,KSEMIC,
     * KCOLON,KSTOP,KSOL,KLPAR,KRPAR,KDOLLA,KQUEST,KEXCL,KAT,KLBRACE,
     * KRBRACE
 
      IGNOR = 0
      IF (ICMD.NE.0)  THEN
        IGNOR = 1
        IF (ICMD.EQ.1.AND.K.EQ.KDBSLSH)  THEN
C       \\ i.e. a simple backslash
          ICMD = 0
          IGNOR = 0
        ELSEIF (ICMD.EQ.1.AND.K.EQ.KDRANG)  THEN
C       \- optional hyphen
          ICMD = 0
        ELSE IF (K.EQ.KDBSLSH) THEN
C         Start of new RTF command.
          ICMD = 1
        ELSE IF (K.EQ.KLBRACE) THEN
C       {
          CONTINUE
        ELSE IF (K.EQ.KBLANK.OR.
     *           (ISNUM(K).EQ.0.AND.ISALPHA(K).EQ.0)) THEN
C       Terminator found.
          ICMD = 0
        ELSE
C       Within control word.
          ICMD = 2
        ENDIF
      ELSE IF (K.EQ.KDBSLSH)  THEN 
        ICMD = 1
        IGNOR = 1
      ENDIF
 
      RETURN
      END
C      FUNCTION   IGNOR (K)                                                  WTPS
C 
CC* REVISED 23-OCT-91.
CC* DETERMINES WHETHER SYMBOL IS PART OF TYPESETTING CODE.
C 
CC  THE FUNC. RETURNS 1 IF K IS TYPESETTING CODE, 0 OTHERWISE.
CC  K RECEIVES THE CHARACTER.
CC  ICMD IN COMMON BLOCK IGNXXX MUST BE SET TO 0 BEFORE THE FIRST CALL.
C 
C      DIMENSION IGTYPE(0:255)
C 
C      COMMON /IGNXXX/ ICMD,IGNTYP
C 
CC     IGTYPE VALUES (SEE PROG. TYPSET, BY M.J. DALLWITZ).
CC       1 - OPENING BRACKET. 2 - BACKSLASH OR CLOSING BRACKET.
CC       3 - COMMANDS. 4 - OTHER SYMBOLS. 5 - INDENTATION [i]. 6 - NEW LINE [n].
CC       7 - NEW PARAGRAPH [p]. 8 - SPACING [z].
C      DATA IGTYPE/ 32*4, 3,3,26*4,3,4,3,4, 4,26*3,1,2,2,3,3,
C     *  4,8*3,5,4*3,6,3,7,9*3,8,4,3,4,4,4, 128*4/
C 
C      IGNOR = 0
C 
C      IF (ICMD.EQ.0.AND.IGTYPE(K).GE.3)  RETURN                              -1*
C      IGNTYP = IGTYPE(K)                                                     -1*
CC     IF (ICMD.EQ.0.AND.IGTYPE(K-128).GE.3)  RETURN                           1*
CC     IGNTYP = IGTYPE(K-128)                                                  1*
C 
C      GO TO (10,20,20,40,20,20,20,20), IGNTYP
C 
C   10 ICMD = 1
C      GO TO 90
CC
C   20 ICMD = 0
C      GO TO 90
CC
C   40 IF (ICMD.EQ.0)  GO TO 100
CC
C   90 IGNOR = 1
CC
C  100 RETURN
C      END
      SUBROUTINE JSTTPS (NW, ITYPMK, LIDAT, NTYPMK, LUNTYP)                 WTPS
 
C  REVISED 7-NOV-96.
C  OUTPUTS TYPESETTING INSTRUCTIONS.
 
      COMMON /BLKXXX/ KBLANK
      COMMON /MISXXX/ IMPVAL,IPACH,IPCHN,IPUNC,IRAB,IKEYCH,ICMPRS,
     * ITUNC,ITINAP,ITIMPL,IUNVAR,LNKC,IDEPC,LICDEP,IPSUMM,ICHSEQ,
     * ITMSEQ,INSRVA,IFATT,ITINTR,ICMAND,IUNRNG,IOMTOR,NEWFLS,IRSEMI,
     * IOMSTC,IADDCH,IEMPCH,IVARUN,ISCALC,ICNOTE,ICIMGE,ITIMGE,MTIMGE,
     * NTIMGE,IOMNSC,IOMCMT,IOMLOW,IERRPC,IERRAB,ICHNSE,NUMST0,IUMEAN,
     * NADNAM,NEMNAM,NODELO,IOMUSP,ICKYIMG,ITKYIMG,ISUPIMG,ICTIMGE,
     * ICTNAME,IHTML,IRTF,MTHEAD,NTHEAD,ITMHDGS,LCDNAM,MTFILE,NTFILE,
     * ITMFILS,MXHEAD,NXHEAD,IDXHDGS,INSIMGFN,ICOFILE,IUCC,IOUNC,ITLINK,
     * MTLINK,NTLINK,NAUTOCC,IOUTSUBJ
 
      DIMENSION ITYPMK(LIDAT)
 
      IF (NW.LE.0.OR.NW.GT.NTYPMK)  CALL BUG(21, NW)
      IF (ITYPMK(NW).EQ.0)  GOTO 100
      IB = ITYPMK(NW)
      LEN = ITYPMK(IB) - 3
      IF (LEN.GT.0)  THEN
        IB = IB + 3
        IF (IHTML.NE.0 .OR. IRTF.NE.0 .OR. ITYPMK(IB).EQ.KBLANK)  THEN
          IHTMRTF = IHTML + IRTF
          CALL JSTOUT (ITYPMK(IB), LEN, -1, LUNTYP, IHTMRTF)
        ELSE
          CALL TYPOUT (ITYPMK(IB), LEN, -1, LUNTYP)
        ENDIF
      ENDIF
 
  100 RETURN
      END
      SUBROUTINE TYPOUT (IBF, N, IE, LUNTYP)                                WTPS
 
C* REVISED 19-MAR-97.
C* INSERTS TYPSETTING MARKS INTO OUTPUT BUFFER.
C  THE TYPESETTING MARKS ARE TREATED AS A SINGLE WORD AND MULTIPLE BLANKS
C  ARE NOT REMOVED.
 
C  IBF RECEIVES THE SYMBOLS TO BE OUTPUT.
C  N RECEIVES THE NUMBER OF SYMBOLS TO BE OUTPUT.
C  IE RECEIVES A FLAG SPECIFYING THE ACTION AFTER THE N-TH SYMBOL.
C    IF IE.LT.0, THE LAST WORD IS LEFT UNFINISHED. IF IE.EQ.0, THE LAST
C    WORD IS FINISHED. IF IE.GT.0, THE LINE IS FINISHED, AND (IE-1)
C    EXTRA BLANK LINES ARE OUTPUT.
C  LUNTYP RECEIVES THE TYPE OF LOGICAL UNIT FOR OUTPUT.
C    1 - ERROR. 2 - LISTING. 3 - PRINT. 4 - OUTPUT.
 
C  THE OUTPUT BUFFER STARTING AT IOUT(1,LUNTYP) IS USED.
 
C  WORDS LONGER THAN OUTPUT WIDTH NOT TRUNCATED (UNLESS THEY
C    ARE LONGER THAN THE OUTPUT BUFFER).
 
      DIMENSION IBF(N)
 
      COMMON /BINXXX/ IENDRC,LENDRC,INSBLK
      COMMON /BLKXXX/ KBLANK
      COMMON /JSTXXX/ IOUT(132,5),LOUT,ICAP,
     * JIOUT(5),IENDWD(5),INDEN(5),LWIDTH(5),PSEQ,SEQINC,NSQDIG
 
      IF (ABS(LWIDTH(LUNTYP)).LE.INDEN(LUNTYP).OR.
     * LWIDTH(LUNTYP).GT.LOUT.OR. N.LT.1)  CALL BUG (5, N)
 
      JOUT = JIOUT(LUNTYP)
 
      IF (IENDWD(LUNTYP).GE.0)  GO TO 10
      CALL INDENT (INDEN(LUNTYP), LUNTYP)
      JOUT = JIOUT(LUNTYP)
 
C     IF INSUFFICIENT ROOM, EMPTY BUFFER FIRST.
   10 IF (JOUT+N.GT.ABS(LWIDTH(LUNTYP)).AND.
     *    IENDWD(LUNTYP).GT.INDEN(LUNTYP))  THEN
C       OUTPUT LINE UP TO WORD BREAK.
        CALL WRTREC (IOUT(1,LUNTYP), IENDWD(LUNTYP), LUNTYP, 4)
        JE = JOUT
        IF (IOUT(JE,LUNTYP).EQ.KBLANK)  JE = JE - 1
        I = IENDWD(LUNTYP)
C       ALLOW FOR WORD BREAK AT NON-BLANK BY EXTERNAL SETTING OF IENDWD.
        IF (I.LT.JE)  THEN
          IF (IOUT(I+1,LUNTYP).EQ.KBLANK)  I = I + 1
        ENDIF
C       START NEW LINE AND COPY UNFINISHED WORD TO START OF BUFFER.
        CALL INDENT (INDEN(LUNTYP), LUNTYP)
        JOUT = JIOUT(LUNTYP)
   50   IF (I.GE.JE)  GOTO 55
          I = I + 1
          JOUT = JOUT + 1
          IOUT(JOUT,LUNTYP) = IOUT(I,LUNTYP)
          GOTO 50
      ENDIF
 
C     COPY TYPESETTING MARKS AS A SINGLE WORD (UP TO THE LENGTH OF THE
C     OUTPUT BUFFER).
   55 DO I = 1, N
        JOUT = JOUT + 1
        IOUT(JOUT,LUNTYP) = IBF(I)
        IF (JOUT.GE.LOUT)  THEN
          CALL WRTREC (IOUT(1,LUNTYP), JOUT, LUNTYP, 4)
C         IF BINARY OUTPUT, FOOL WRECB INTO THINKING LAST BUFFER CONTAINING
C         TYPESETTING MARKS WAS TERMINATED - AND HENCE IT WILL NOT INSERT BLANK
C         SEPARATOR BETWEEN OUTPUT BUFFERS.
          IF (LUNTYP.EQ.3.AND.LWIDTH(3).LT.0) LENDRC = 1
          CALL INDENT (INDEN(LUNTYP), LUNTYP)
          JOUT = JIOUT(LUNTYP)
        ENDIF
      ENDDO
 
C     END OF INPUT BUFFER.
      IF (IE.LT.0)  THEN
C       IF BINARY OUTPUT AND THERE ARE STILL TYPESETTING MARKS IN THE OUTPUT
C       BUFFER, EMPTY THE BUFFER, SETTING A FLAG TO PREVENT INSERTION OF A
C       BLANK BETWEEN BUFFERS.
        IF (JOUT.GT.0.AND.LUNTYP.EQ.3.AND.LWIDTH(3).LT.0) THEN
          CALL WRTREC (IOUT(1,LUNTYP), JOUT, LUNTYP, 4)
          CALL INDENT (INDEN(LUNTYP), LUNTYP)
          JOUT = JIOUT(LUNTYP)
          LENDRC = 1
        ENDIF
        GO TO 100
      ENDIF
      IF (IE.GT.0)  GO TO 60
C
      IF (JOUT.EQ.0)  GO TO 100
      IENDWD(LUNTYP) = JOUT
      IF (JOUT.GE.ABS(LWIDTH(LUNTYP)))  GO TO 100
      JOUT = JOUT + 1
      IOUT(JOUT,LUNTYP) = KBLANK
      GO TO 100
C
   60 JIOUT(LUNTYP) = JOUT
      CALL BLKLIN (IE-1, 0, LUNTYP)
      JOUT = 0
C
  100 JIOUT(LUNTYP) = JOUT
      RETURN
      END
      SUBROUTINE TYP2BUF (IBUF, LBUF, NW, ITYPMK, LIDAT, NTYPMK, NCPY)      WTPS
 
C  REVISED 29-APR-98.
C  INSERTS TYPESETTING MARKS INTO A BUFFER.
 
      COMMON /BLKXXX/ KBLANK
      COMMON /MISXXX/ IMPVAL,IPACH,IPCHN,IPUNC,IRAB,IKEYCH,ICMPRS,
     * ITUNC,ITINAP,ITIMPL,IUNVAR,LNKC,IDEPC,LICDEP,IPSUMM,ICHSEQ,
     * ITMSEQ,INSRVA,IFATT,ITINTR,ICMAND,IUNRNG,IOMTOR,NEWFLS,IRSEMI,
     * IOMSTC,IADDCH,IEMPCH,IVARUN,ISCALC,ICNOTE,ICIMGE,ITIMGE,MTIMGE,
     * NTIMGE,IOMNSC,IOMCMT,IOMLOW,IERRPC,IERRAB,ICHNSE,NUMST0,IUMEAN,
     * NADNAM,NEMNAM,NODELO,IOMUSP,ICKYIMG,ITKYIMG,ISUPIMG,ICTIMGE,
     * ICTNAME,IHTML,IRTF,MTHEAD,NTHEAD,ITMHDGS,LCDNAM,MTFILE,NTFILE,
     * ITMFILS,MXHEAD,NXHEAD,IDXHDGS,INSIMGFN,ICOFILE,IUCC,IOUNC,ITLINK,
     * MTLINK,NTLINK,NAUTOCC,IOUTSUBJ
 
      DIMENSION IBUF(LBUF),ITYPMK(LIDAT)
 
      IF (NW.LE.0.OR.NW.GT.NTYPMK)  CALL BUG(21, NW)
      IF (ITYPMK(NW).EQ.0)  GOTO 100
      IB = ITYPMK(NW)
      LEN = ITYPMK(IB) - 3
      IF (LEN.GT.0.AND.LEN.LE.LBUF)  THEN
        IB = IB + 3
        CALL COPIA (ITYPMK(IB), IBUF, LEN)
        NCPY = LEN
      ELSE
        NCPY = 0
      ENDIF
 
  100 RETURN
      END
