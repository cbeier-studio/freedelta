      SUBROUTINE CICOD (ICFLAG, IVAL, NC, ICODES, NCODES, NSIG)             DIR1
C
C* REVISED 18-FEB-97.
C* READS A CHARACTER-INDEXED LIST OF CODED VALUES.
C
C  IFLAG RETURNS FLAGS INDICATING THE STATUS OF THE VALUE READ FOR
C    EACH CHARACTER. FOR CHARACTER IC, ICFLAG(IC) NEGATIVE, ZERO, OR
C    POSITIVE INDICATES AN INVALID VALUE READ, NO VALUE READ, OR
C    A VALID VALUE READ, RESPECTIVELY.
C  IVAL RETURNS THE VALUES READ.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  ICODES RECEIVES A LIST OF CODE WORDS (SEE SUBR. CONPHR).
C  NCODES RECEIVES THE NUMBER OF CODE WORDS.
C  NSIG RECEIVES THE NUMBER OF SIGNIFICANT SYMBOLS IN EACH CODE WORD.
C
C  THE INPUT TAKES THE FORM IC1,IV1 IC2,IV2 ... AND IS TERMINATED
C    BY A BLANK-STAR. THE 'ICI,' ARE OPTIONAL (SEE SUBR. CNUM).
C    IVAL(IC1) IS SET TO THE NUMBER CORRESPONDING TO CODE IV1, ETC.
C  NEW RECORDS ARE READ IF REQUIRED.
C  IF AN ERROR IS FOUND, A MESSAGE IS PRINTED, IDERR IS SET, AND
C    NCERR IS INCREMENTED.
C  ON EXIT, JBUF IS POSITIONED AT THE TERMINATING STAR.
C
C
      DIMENSION ICFLAG(NC),IVAL(NC)
      CHARACTER*1 ICODES(NSIG,NCODES)
C
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
C
C     INITIALIZE.
      DO 20 I = 1, NC
   20   ICFLAG(I) = 0
      IC = 0
C
C     READ AND DECODE NEXT WORD.
   30 CALL NEXTWD (JE)
        IF (IBUF(JBUF).EQ.KDSTAR)  GO TO 200
        CALL CNUM (ICFLAG, IB, IE, IC, NC, JE)
        IF (IC.LE.0)  GO TO 120
        CALL CONPHR (ICODES, NSIG, NCODES, NSIG, IBUF, JBUF, JE-1,
     *   IVALUE, KE)
        IF (IVALUE.NE.0)  GO TO 100
C       ERROR MESSAGE.
        CALL MESSA (12, 3, KE)
        DO 40 JC = IB, IE
          ICFLAG(JC) = -1
   40     CONTINUE
        GOTO 120
 
  100   DO 110 JC = IB, IE
          IVAL(JC) = IVALUE
  110     CONTINUE
C
  120   JBUF = JE
        GO TO 30
C
  200 RETURN
      END
      SUBROUTINE CON1 (ICPH, JE)                                            DIR1
C
C* REVISED 29/3/85.
C* IDENTIFIES TYPE 1 CONTROL PHRASE.
C
C  ICPH. IF A CONTROL PHRASE IS FOUND, ICPH RETURNS ITS NUMBER.
C    OTHERWISE, IT RETURNS 0.
C  JE. IF A CONTROL PHRASE IS FOUND, JE RETURNS THE POSITION IN IBUF
C    IMMEDIATELY AFTER THE END OF THE PHRASE.
C
      CHARACTER*1 ICON(8,5)                                                   =*
C
      COMMON /DIR1XX/ NCON1,JDIR1(5)
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
C
C     1 DATA BUFFER SIZE
      DATA ICON(1,1),ICON(2,1),ICON(3,1),ICON(4,1),ICON(5,1),
     * ICON(6,1),ICON(7,1),ICON(8,1)/'D','A','B','U','S','I',' ',' '/
C     2 MAXIMUM NUMBER OF ITEMS
      DATA ICON(1,2),ICON(2,2),ICON(3,2),ICON(4,2),ICON(5,2),
     * ICON(6,2),ICON(7,2),ICON(8,2)/'M','A','N','U','O','F','I','T'/
C     3 MAXIMUM NUMBER OF STATES
      DATA ICON(1,3),ICON(2,3),ICON(3,3),ICON(4,3),ICON(5,3),
     * ICON(6,3),ICON(7,3),ICON(8,3)/'M','A','N','U','O','F','S','T'/
C     4 NUMBER OF CHARACTERS
      DATA ICON(1,4),ICON(2,4),ICON(3,4),ICON(4,4),ICON(5,4),
     * ICON(6,4),ICON(7,4),ICON(8,4)/'N','U','O','F','C','H',' ',' '/
C     5 STATE CODES
      DATA ICON(1,5),ICON(2,5),ICON(3,5),ICON(4,5),ICON(5,5),
     * ICON(6,5),ICON(7,5),ICON(8,5)/'S','T','C','O',' ',' ',' ',' '/
C
      CALL CONPHR (ICON, 8, NCON1, 2, IBUF, JBUF+1, JEDAT-1, ICPH, JE)
      RETURN
      END
      SUBROUTINE CON2 (ICPH, JE)                                            DIR1
C
C* REVISED 29/3/85.
C* IDENTIFIES TYPE 2 CONTROL PHRASE.
C
C  ICPH. IF A CONTROL PHRASE IS FOUND, ICPH RETURNS ITS NUMBER.
C    OTHERWISE, IT RETURNS 0.
C  JE. IF A CONTROL PHRASE IS FOUND, JE RETURNS THE POSITION IN IBUF
C    IMMEDIATELY AFTER THE END OF THE PHRASE.
C
      CHARACTER*1 ICON(8,1)
C
      COMMON /DIR2XX/ NCON2,JDIR2(1)
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
C
C     1 CHARACTER TYPES
      DATA ICON(1,1),ICON(2,1),ICON(3,1),ICON(4,1),ICON(5,1),
     * ICON(6,1),ICON(7,1),ICON(8,1)/'C','H','T','Y',' ',' ',' ',' '/
C
      CALL CONPHR (ICON, 8, NCON2, 2, IBUF, JBUF+1, JEDAT-1, ICPH, JE)
      RETURN
      END
      SUBROUTINE CON3 (ICPH, JE)                                            DIR1
C
C* REVISED 18/12/87.
C* IDENTIFIES TYPE 3 CONTROL PHRASE.
C
C  ICPH. IF A CONTROL PHRASE IS FOUND, ICPH RETURNS ITS NUMBER.
C    OTHERWISE, IT RETURNS 0.
C  JE. IF A CONTROL PHRASE IS FOUND, JE RETURNS THE POSITION IN IBUF
C    IMMEDIATELY AFTER THE END OF THE PHRASE.
C
      CHARACTER*1 ICON(8,1)
C
      COMMON /DIR3XX/ NCON3,JDIR3(1)
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
C
C     1 NUMBERS OF STATES
      DATA ICON(1,1),ICON(2,1),ICON(3,1),ICON(4,1),ICON(5,1),
     * ICON(6,1),ICON(7,1),ICON(8,1)/'N','U','O','F','S','T',' ',' '/
C
      CALL CONPHR (ICON, 8, NCON3, 2, IBUF, JBUF+1, JEDAT-1, ICPH, JE)
      RETURN
      END
      SUBROUTINE DIR1 (IR, W, IW, LW)                                       DIR1
C
C* REVISED 2-APR-93.
C* READS AND PROCESSES TYPE 1 DIRECTIVES.
C
C  IR RETURNS 1 IF THE CURRENT DIRECTIVE IS TYPE 1, 0 OTHERWISE.
C
C  ON ENTRY, JBUF MUST BE POSITIONED AT A BLANK-STAR.
C  IF A DIRECTIVE IS PROCESSED -
C    NEW RECORDS ARE READ AS REQUIRED.
C    JBUF IS POSITIONED AT THE NEXT BLANK-STAR.
C
      DIMENSION W(LW),IW(LW)
C
      COMMON /DIMXXX/ NC,MI,MS,LIDAT,LCSTR
      COMMON /DIR1XX/ NCON1,JDIR1(5)
      COMMON /INIXXX/ JI,JT,JIM,IVARIT,MASTIN,MISTOP
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /VALXXX/ KVAR,KUNK,KNA,KVAL(64),LKVAL
C
C---  READ NEXT CONTROL PHRASE.
      IR = 0
      CALL CON1 (ICPH, JE)
      IF (ICPH.LE.0)  GO TO 8500
      IR = 1
      JBUF = JE
C
C-    ALLOW FOR INTERDEPENDENCIES.
      GO TO (90,20,90,90,50), ICPH
   20 IF (JDIR1(ICPH).EQ.0)  MI = 0
      JDIR1(ICPH) = 0
      GO TO 90
   50 IF (JDIR1(3).EQ.0)  MS = 0                                              =*
C-
   90 CALL CHKDIR (1, JDIR1, ICPH, W, IW, LW)
      IF (IDERR.NE.0)  GO TO 6000
C
C---  PROCESS DIRECTIVE.
      GO TO (100,200,300,400,500), ICPH
C
C--   DATA BUFFER SIZE
  100 N = MAX0 (100, NC)
C     M = MAX0(N, 5*MI)
      CALL RDINT (LIDAT, N, 0, 8*N)
      JDIR1(1) = 1
      GO TO 6000
C
C--   MAXIMUM NUMBER OF ITEMS
  200 CALL RDINT (I, 1, 1, 0)
      IF (MI.LE.0.OR.I.LT.MI)  MI = I
      MI = MAX0(MI,1)
      JI = MI
      JIM = MI
      GO TO 6000
C
C--   MAXIMUM NUMBER OF STATES
  300 CALL RDINT (I, 1, 1, 0)
      IF (IDERR.NE.0)  GO TO 6000
      MS = I
      IF (LKVAL.LE.0)  GO TO 6000
      IF (MS.GT.LKVAL)  CALL MESSB (16, LKVAL, 1, 3, JBUF)
      GO TO 6000
C
C--   NUMBER OF CHARACTERS
  400 CALL RDINT (NC, 1, 1, 0)
      LIDAT = MAX0 (3*NC, LIDAT)
C     LIDAT MUST BE AN EVEN NUMBER, SO THAT THE VALUES OF LIDAT AND
C     LIDATR ALIGN TO A REAL WORD BOUNDARY.
      LIDAT = (LIDAT/2) * 2
      GO TO 6000
C
C--   STATE CODES
  500 CALL VALCOD (MS)
C
C---  TEST FOR ERROR.
 6000 IF (IDERR.EQ.0)  GO TO 8000
      CALL SKDELW (0)
C
C---  CHECK PRESENCE OF NEXT DELIMITER.
 8000 CALL CHDELW (0)
C
 8500 RETURN
      END
      SUBROUTINE DIR2 (IR, W, IW, LW)                                       DIR1
C
C* REVISED 7/7/87.
C* READS AND PROCESSES TYPE 2 DIRECTIVE.
C
C  IR RETURNS 1 IF THE CURRENT DIRECTIVE IS TYPE 2, 0 OTHERWISE.
C
C  ON ENTRY, JBUF MUST BE POSITIONED AT A BLANK-STAR.
C  IF A DIRECTIVE IS PROCESSED -
C    NEW RECORDS ARE READ AS REQUIRED.
C    JBUF IS POSITIONED AT THE NEXT BLANK-STAR.
C
C
      DIMENSION W(LW),IW(LW)
      CHARACTER*1 LTCOD(2,7)                                                  =*
C
      COMMON /ADRXXX/ IITYPC,IIMC,IIMI,IWTC,IWTI,INSTAT,IKSTAT,
     * INEWOR,INDEC,IICDES,ILCDES,IITMAD,IWW1C,IWW2C,IWW1I,IWW2I,
     * IWW1S,IWW2S,IIDAT,IIDAM,IIDAV,IIPARA,IIEMPF,ILINKC,IICHHD,
     * IITSHD,IISBND,IIVCON,IICDEP,ILSTDE,INEWFL,IIMPL1,IIMPL2,
     * IIMPFL,IISUMM,IICPTW,IICPTB,IITPTR,ILNAME,IINTRL,IMANDC,IRBND,
     * INBND,IITXPT,INORNG,IIOMOR,IIFILS,IIREPS,IIADDT,IIADDC,IIEMPT,
     * IIEMPC,IMINC,IMAXC,INUMRN,INAFLG,ISCALF,IISRTS,IICNOT,IICNGP,
     * IITYMK,IIFMT,IIOMPD,IIOMLO,IICIMG,IICIGP,IITIMG,IITREC,IPCERR,
     * IABERR,IIOMFC,IIALTC,IIADNM,IIADDL,IIEMNM,IIEMPL,IIOUSP,IICSYN,
     * IILANG,IICSTR,IITHD,IITHREC,IICDNAM,IITFIL,IITFREC,IIXHD,IIXHREC,
     * IIFNT,IIUSECC,IIFOFSET,IITLNK,IILREC,IITLNK2,IINAUTOCC,IIOSUBJ,
     * ILAST
      COMMON /DIMXXX/ NC,MI,MS,LIDAT,LCSTR
      COMMON /DIR2XX/ NCON2,JDIR2(1)
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /TCHXXX/ NTCOD,ITCOD(2,7),JTCOD(7)
C
C---  READ NEXT CONTROL PHRASE.
      IR = 0
      CALL CON2 (ICPH, JE)
      IF (ICPH.LE.0)  GO TO 8500
      IR = 1
      JBUF = JE
      CALL CHKDIR (2, JDIR2, ICPH, W, IW, LW)
      IF (IDERR.NE.0)  GO TO 6000
C
C---  PROCESS DIRECTIVE.
C
C--   CHARACTER TYPES
      DO 50 I = 1, NTCOD
        LTCOD(1,I) = CHAR(ITCOD(1,I))
        LTCOD(2,I) = CHAR(ITCOD(2,I))
   50   CONTINUE
      CALL CICOD (IW(IWW1C), IW(IITYPC), NC, LTCOD, NTCOD, 2)
      IF (IDERR.NE.0)  GO TO 6000
      DO 110 IC = 1, NC
        I = IITYPC + IC - 1
        J = IW(I)
        IF (J.LE.0)  GO TO 110
        IW(I) = JTCOD(J)
  110   CONTINUE
C
C---  TEST FOR ERROR.
 6000 IF (IDERR.EQ.0)  GO TO 8000
      CALL SKDELW (0)
C
C---  CHECK PRESENCE OF NEXT DELIMITER.
 8000 CALL CHDELW (0)
C
 8500 RETURN
      END
      SUBROUTINE DIR3 (IR, W, IW, LW)                                       DIR1
 
C* REVISED 18/12/87.
C* READS AND PROCESSES TYPE 3 DIRECTIVE.
C
C  IR RETURNS 1 IF THE CURRENT DIRECTIVE IS TYPE 3, 0 OTHERWISE.
C
C  ON ENTRY, JBUF MUST BE POSITIONED AT A BLANK-STAR.
C  IF A DIRECTIVE IS PROCESSED -
C    NEW RECORDS ARE READ AS REQUIRED.
C    JBUF IS POSITIONED AT THE NEXT BLANK-STAR.
C
C
      DIMENSION W(LW),IW(LW)
C
      COMMON /ADRXXX/ IITYPC,IIMC,IIMI,IWTC,IWTI,INSTAT,IKSTAT,
     * INEWOR,INDEC,IICDES,ILCDES,IITMAD,IWW1C,IWW2C,IWW1I,IWW2I,
     * IWW1S,IWW2S,IIDAT,IIDAM,IIDAV,IIPARA,IIEMPF,ILINKC,IICHHD,
     * IITSHD,IISBND,IIVCON,IICDEP,ILSTDE,INEWFL,IIMPL1,IIMPL2,
     * IIMPFL,IISUMM,IICPTW,IICPTB,IITPTR,ILNAME,IINTRL,IMANDC,IRBND,
     * INBND,IITXPT,INORNG,IIOMOR,IIFILS,IIREPS,IIADDT,IIADDC,IIEMPT,
     * IIEMPC,IMINC,IMAXC,INUMRN,INAFLG,ISCALF,IISRTS,IICNOT,IICNGP,
     * IITYMK,IIFMT,IIOMPD,IIOMLO,IICIMG,IICIGP,IITIMG,IITREC,IPCERR,
     * IABERR,IIOMFC,IIALTC,IIADNM,IIADDL,IIEMNM,IIEMPL,IIOUSP,IICSYN,
     * IILANG,IICSTR,IITHD,IITHREC,IICDNAM,IITFIL,IITFREC,IIXHD,IIXHREC,
     * IIFNT,IIUSECC,IIFOFSET,IITLNK,IILREC,IITLNK2,IINAUTOCC,IIOSUBJ,
     * ILAST
      COMMON /DIMXXX/ NC,MI,MS,LIDAT,LCSTR
      COMMON /DIR3XX/ NCON3,JDIR3(1)
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
C
C---  READ NEXT CONTROL PHRASE.
      IR = 0
      CALL CON3 (ICPH, JE)
      IF (ICPH.LE.0)  GO TO 8500
      IR = 1
      JBUF = JE
      CALL CHKDIR (3, JDIR3, ICPH, W, IW, LW)
      IF (IDERR.NE.0)  GO TO 6000
 
C---  PROCESS DIRECTIVE.
 
      GOTO (100), ICPH
 
C--   NUMBERS OF STATES
  100 CALL NUMSTA (IW(IWW1C), IW(IITYPC), IW(INSTAT), NC, MS)
      IF (IDERR.NE.0)  GO TO 6000
      CALL COPIA (IW(INSTAT), IW(IKSTAT), NC)
      GOTO 6000
 
C---  TEST FOR ERROR.
 6000 IF (IDERR.EQ.0)  GO TO 8000
      CALL SKDELW (0)
C
C---  CHECK PRESENCE OF NEXT DELIMITER.
 8000 CALL CHDELW (0)
C
 8500 RETURN
      END
      SUBROUTINE NUMSTA (ICFLAG, ITYPC, NSTAT, NC, MS)                      DIR1
 
C* REVISED 15-DEC-94.
C* READS THE NUMBERS OF STATES.
 
C  IFLAG RETURNS FLAGS INDICATING THE STATUS OF THE VALUE READ FOR
C    EACH CHARACTER. FOR CHARACTER IC, ICFLAG(IC) NEGATIVE, ZERO, OR
C    POSITIVE INDICATES AN INVALID VALUE READ, NO VALUE READ, OR
C    A VALID VALUE READ, RESPECTIVELY.
C  ITYPC RECEIVES THE CHARACTER TYPES.
C  NSTAT RETURNS THE NUMBERS OF STATES.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  MS RECEIVES THE MAXIMUM NUMBER OF STATES.
C
C  THE INPUT TAKES THE FORM IC1,IV1 IC2,IV2 ... AND IS TERMINATED
C    BY A STAR-WORD. THE 'ICI,' ARE OPTIONAL (SEE SUBR. CNUM).
C  NEW RECORDS ARE READ IF REQUIRED.
C  IF AN ERROR IS FOUND, A MESSAGE IS PRINTED, IDERR IS SET, AND
C    NCERR IS INCREMENTED.
C  ON EXIT, JBUF IS POSITIONED AT THE STAR.
C
C
      DIMENSION ICFLAG(NC),ITYPC(NC),NSTAT(NC)
C
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
C
C     INITIALIZE.
      DO 20 IC = 1, NC
   20   ICFLAG(IC) = 0
      IC = 0
C
C     READ AND DECODE NEXT WORD.
   30 CALL NEXTWD (JE)
        IF (IBUF(JBUF).EQ.KDSTAR)  GO TO 200
        CALL CNUM (ICFLAG, IB, IE, IC, NC, JE)
        IF (IC.LE.0)  GO TO 100
        IF (JBUF.GE.JE)  GO TO 70
        CALL IDKOD (I, IBUF(JBUF), JE-JBUF, IERR)
        IF (IERR.NE.0)  GO TO 50
        IF (I.LT.0.OR.I.GT.MS)  GOTO 60
        DO 40 JC = IB, IE
          IF ((ITYPC(JC).LE.2.AND.I.LT.1)
     *     .OR.(ITYPC(JC).GE.3.AND.I.GT.1)
     *     .OR.(ITYPC(JC).GE.5.AND.I.GT.1))  GO TO 60
          NSTAT(JC) = I
   40     CONTINUE
        GO TO 100
 
C       ERROR MESSAGES.
   50   IERRNO = 21
        IPOINT = JBUF + IERR -1
        GO TO 80
   60   IERRNO = 22
        IPOINT = JBUF
        GO TO 80
   70   IERRNO = 10
        IPOINT = JBUF
   80   CALL MESSA (IERRNO, 3, IPOINT)
        DO 85 JC = IB, IE
          ICFLAG(JC) = -1
   85     CONTINUE
C
  100   JBUF = JE
        GO TO 30
C
  200 RETURN
      END
      SUBROUTINE VALCOD (MS)                                                DIR1
 
C* REVISED 2-APR-93.
C* READS VALUE CODES.
 
C  MS RECEIVES OR RETURNS THE MAXIMUM NUMBER OF STATES.
C
C  THE VALUE CODES ARE STORED IN THE FIRST MS LOCATIONS OF KVAL.
C  IF THERE ARE NO ERRORS, LKVAL IS SET TO MS. OTHERWISE,
C    IT IS SET TO 0.
C  NEW RECORDS ARE READ IF REQUIRED.
C  IF AN ERROR IS FOUND, A MESSAGE IS PRINTED, IDERR IS SET, AND
C    NCERR IS INCREMENTED.
C
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /INPXXX/ IBUF(121),JBUF,JBDAT,JEDAT,IDERR,NCERR,NSERR,NWERR
      COMMON /NUMXXX/ KNUM(10),KDEC,KMINUS
      COMMON /VALXXX/ KVAR,KUNK,KNA,KVAL(64),LKVAL
C
      IF (MS.GT.64)  GO TO 200
C
C-    READ AND CHECK LIST OF CODES.
      IS = 0
   10 CALL NEXTWD (JE)
        IF (IBUF(JBUF).EQ.KDSTAR)  GO TO 150
        IF (IS.GE.64)  GO TO 200
        IS = IS + 1
        KVAL(IS) = IBUF(JBUF)
        IF (JE.NE.JBUF+1)  GO TO 50
C       ALL RESERVED CHARACTERS MUST BE CHECKED.                              =/
        IF (KVAL(IS).EQ.KVAR.OR.KVAL(IS).EQ.KUNK.OR.KVAL(IS).EQ.KNA
     *   .OR.KVAL(IS).EQ.KMINUS.OR.KVAL(IS).EQ.KDEC
     *   .OR.KVAL(IS).EQ.KDPLUS.OR.KVAL(IS).EQ.KDSTAR
     *   .OR.KVAL(IS).EQ.KDNUM.OR.KVAL(IS).EQ.KDSOL
     *   .OR.KVAL(IS).EQ.KDLBRA.OR.KVAL(IS).EQ.KDRBRA
     *   .OR.KVAL(IS).EQ.KDCOM.OR.KVAL(IS).EQ.KDRANG
     *   .OR.KVAL(IS).EQ.KDAMP
     *   .OR.KVAL(IS).EQ.KDCOLN.OR.KVAL(IS).EQ.KDSTOP)
     *   GO TO 60
        IF (IS.EQ.1)  GO TO 100
        N = IS - 1
        DO 20 I = 1, N
          IF (KVAL(IS).EQ.KVAL(I))  GO TO 60
   20     CONTINUE
        GO TO 100
 
C       ERROR MESSAGES.
   50   IERRNO = 12
        IPOINT = JBUF + 1
        GO TO 90
   60   IERRNO = 12
        IPOINT = JBUF
   90   CALL MESSA (IERRNO, 3, IPOINT)
 
  100   JBUF = JE
        GO TO 10
C
  150 IF (IS.EQ.0.OR.IS.LT.MS)  GO TO 210
      GO TO 300
C
C-    ERROR MESSAGES.
  200 CALL MESSA (137, 3, JBUF)
      CALL SKDELW (0)
      GO TO 300
  210 CALL MESSA (40, 3, JBUF-1)
C
C-    SET MS AND LKVAL.
  300 IF (IDERR.NE.0)  GO TO 350
      IF (MS.LE.0)  MS = IS
      LKVAL = IS
      GO TO 400
  350 IF (MS.LE.0)  MS = 2
      LKVAL = 0
  400 RETURN
      END
