      SUBROUTINE RDRL (IT, IDAT, IWRD, IW, ITPTR, RBF, NAFLG, LFLG)         TINT
 
C  REVISED 3-JUL-89.
C  READS AND OUTPUTS NEXT REAL RANGE.
 
C  IT RECEIVES THE ITEM NUMBER.
C  IDAT RECEIVES THE DATA BUFFER.
C  IWRD RECEIVES A POINTER TO THE ITEM IN IDAT.
C  ITPTR RECEIVES AND RETURNS A POINTER TO THE ITEM ON THE INPUT FILE.
C  RBF RETURNS THE DATA.
C  NAFLG RECEIVES WORKING SPACE TO STORE BIT FLAGS FOR INAPPLICABLE
C   CHARACTERS.
C  LFLG RECEIVES THE LENGTH OF NAFLG.
 
      COMMON /DAOXXX/ IWOUT,IBOUT,IOUT(32)
      COMMON /LUNDAX/ LRECDA,IRECDA
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /SCR4XX/ LRECS4,IRECS4
      COMMON /WRDSIZ/ NBITS,NCHRWD
 
      DIMENSION IDAT(LRECS4),NAFLG(LFLG),RBF(2)
      LOGICAL BITTST
 
      IW = IWRD
 
      DO 100 I = 1, 3
        IF (IW.GT.LRECS4) THEN
          CALL RDSCRI (IDAT, ITPTR)
          IW = 1
        ENDIF
        IF (I.LE.2)  THEN
          IWOUT = IWOUT + 1
          IOUT(IWOUT) = IDAT(IW)
          RBF(I) = RELIN (IDAT(IW))
          IF (IWOUT.GE.LRECDA)  THEN
            CALL WRDAI (IOUT, IWOUT, LUNDA, LRECDA, IRECDA)
            IWOUT = 0
          ENDIF
        ELSE
          IF (BITTST(1, IDAT(IW), NBITS))  CALL SETBIT(IT, NAFLG, NBITS)
        ENDIF
        IW = IW + 1
  100 CONTINUE
 
      RETURN
      END
      SUBROUTINE RSHELL (X, N, KEY, NK)                                     TINT
 
C  REVISED 30/9/87.
C  SORTS AN ARRAY OF REALS, AND OPTIONALLY PRODUCES A KEY.
C
C  SHELL, MODIFIED FRANK AND LAZARUS, CACM 3,20 (1960)
C
C  X IS THE ARRAY OF REAL NUMBERS TO BE SORTED.
C  IABS(N) IS THE NUMBER OF NUMBERS TO BE SORTED. IF N IS NEGATIVE,
C     POINTERS TO THE ORIGINAL ORDER OF X WILL BE PRODUCED IN THE
C     ARRAY KEY.
C  KEY IS AN ARRAY WHICH MUST BE OF DIMENSION N (IF USED).
C     IF THE NUMBER X(I) IS, AFTER SORTING, IN X(J), THEN KEY(J)=I.
C
      DIMENSION X(N),KEY(NK)
C
      NO = IABS(N)
      MO = NO
      IF(N.GT.0)  GO TO 10
      DO 11 I = 1, NO
   11 KEY(I)=I
   10 IF (MO.GT.15)  GO TO 3
      IF (MO.LE.1 )  GO TO 9
      MO=2*(MO/4)+1
      GO TO 4
    3 MO=2*(MO/8)+1
    4 KO=NO-MO
      JO=1
    5 I=JO
    6 IMO = I+MO
      IF (X(I).LE.X(IMO))  GO TO 8
      TEMP=X(I)
      X(I)=X(IMO)
      X(IMO)= TEMP
      IF (N.GT.0)  GO TO 13
      KEMP=KEY(I)
      KEY(I)=KEY(IMO)
      KEY(IMO)=KEMP
   13 I=I-MO
      IF (I.GE.1)  GO TO 6
    8 JO = JO + 1
      IF (JO.LE.KO)   GO TO 5
      GO TO 10
    9 RETURN
      END
