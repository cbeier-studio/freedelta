      SUBROUTINE PAUCRD (IMC, ITYPC, KSTAT, WTC, NC, ITYPMK, LIDAT, JIM)    TPAU
 
C* REVISED 24-MAR-93.
C* OUTPUTS CONTROL CARDS FOR PAUP FORMAT.
 
C  IMC RECEIVES THE CHARACTER MASK. (NOTE THAT CHARACTERS WITH
C   KSTAT(IC).LE.1.OR.KSTAT(IC).GT.26 HAVE BEEN MASKED OUT BY
C   SUBR. CHKDK.)
C  ITYPC RECEIVES THE CHARACTER TYPES.
C  KSTAT RECEIVES THE NUMBERS OF KEY STATES.
C  WTC RECEIVES THE CHARACTER WEIGHTS.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  ITYPMK RECEIVES TYPESETTING MARKS.
C  LIDAT RECEIVES THE LENGTH OF ITYPMK.
C  JIM RECEIVES THE NUMBER OF MASKED-IN ITEMS.
 
C  THE OUTPUT BUFFER IS IOUT(1,4).
 
      DIMENSION IMC(NC),ITYPC(NC),KSTAT(NC),WTC(NC),ITYPMK(LIDAT),
     * IA(15)
      CHARACTER*1 KODPAU(2,8),LFMT(15,2),PAR(6,2)
 
      COMMON /ALPXXX/ KA,KB,KC,KD,KE,KF,KG,KH,KI,KJ,KK,KL,KM,
     *                KN,KO,KP,KQ,KR,KS,KT,KU,KV,KW,KX,KY,KZ
      COMMON /BLKXXX/ KBLANK
      COMMON /DELXXX/ KDPLUS,KDSTAR,KDNUM,KDSOL,KDLBRA,KDRBRA,
     * KDCOM,KDRANG,KDAMP,KDCOLN,KDSTOP,KDINF,KDLPAR,KDRPAR,KDBSLSH
      COMMON /HEDXXX/ LHEAD,IHEAD(200)
      COMMON /JSTXXX/ IOUT(132,5),LOUT,ICAP,
     * JIOUT(5),IENDWD(5),INDEN(5),LWIDTH(5),PSEQ,SEQINC,NSQDIG
      COMMON /LUFXXX/ FNAME(19),LFNAME(19)
        CHARACTER FNAME*80
      COMMON /LUNXXX/ LUNE,LUNL,LUNO,LUNP,LUNS1,LUNBO,LUNBI,LUNI,LUNDA,
     * LUNS2,LUNS3,LUNS4,LUNS5,LUNS6,LUNS7
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
      COMMON /MISXXX/ IMPVAL,IPACH,IPCHN,IPUNC,IRAB,IKEYCH,ICMPRS,
     * ITUNC,ITINAP,ITIMPL,IUNVAR,LNKC,IDEPC,LICDEP,IPSUMM,ICHSEQ,
     * ITMSEQ,INSRVA,IFATT,ITINTR,ICMAND,IUNRNG,IOMTOR,NEWFLS,IRSEMI,
     * IOMSTC,IADDCH,IEMPCH,IVARUN,ISCALC,ICNOTE,ICIMGE,ITIMGE,MTIMGE,
     * NTIMGE,IOMNSC,IOMCMT,IOMLOW,IERRPC,IERRAB,ICHNSE,NUMST0,IUMEAN,
     * NADNAM,NEMNAM,NODELO,IOMUSP,ICKYIMG,ITKYIMG,ISUPIMG,ICTIMGE,
     * ICTNAME,IHTML,IRTF,MTHEAD,NTHEAD,ITMHDGS,LCDNAM,MTFILE,NTFILE,
     * ITMFILS,MXHEAD,NXHEAD,IDXHDGS,INSIMGFN,ICOFILE,IUCC,IOUNC,ITLINK,
     * MTLINK,NTLINK,NAUTOCC,IOUTSUBJ
      COMMON /PAUPXX/ KPAU(32)
      COMMON /SYMXXX/ KPOINT,KDASH,KSTAR,KVERT,KEQUAL,KCOMMA,KSEMIC,
     * KCOLON,KSTOP,KSOL,KLPAR,KRPAR,KDOLLA,KQUEST,KEXCL,KAT,KLBRACE,
     * KRBRACE
 
C     KEY WORDS REQUIRED FOR PAUP SPECIFICATIONS.
C     1 - COMMENT. 2 - PARAMETERS. 3 - SYMBOLS.
C     4 - UNORDERED. 5 - DATA. 6 - GO. 7 - WEIGHTS. 8 - END.
 
      DATA LFMT
     *     /'(','A','8',',','A','1','/','(',' ',' ',' ','A','1',')',')',
     *      '(','A','8',',','A','1',',',' ',' ',' ','A','1',')',' ',' '/
      DATA PAR
     *     /'N','O','T','U','=',' ',
     *      'N','C','H','A','R','='/
C
C     KEY WORDS
      DATA KODPAU(1,1),KODPAU(2,1)/'C','O'/
      DATA KODPAU(1,2),KODPAU(2,2)/'P','A'/
      DATA KODPAU(1,3),KODPAU(2,3)/'S','Y'/
      DATA KODPAU(1,4),KODPAU(2,4)/'U','N'/
      DATA KODPAU(1,5),KODPAU(2,5)/'D','A'/
      DATA KODPAU(1,6),KODPAU(2,6)/'G','O'/
      DATA KODPAU(1,7),KODPAU(2,7)/'W','E'/
      DATA KODPAU(1,8),KODPAU(2,8)/'E','N'/
      DATA NKODES /8/
 
      CALL ENDLN (4)
C
      MCHAR = NONZER(IMC,NC)
C
C--   READ SPECIFICATION CARDS
   50 CALL CARDI (IOUT(1,4), ICARD)
        IF (ICARD.LT.0)  GO TO 1000
C-
        ICOL = 1
   60   IF (ICOL.GE.79)  GO TO 950
          IF (IOUT(ICOL,4).EQ.KDNUM)  GO TO 70
          ICOL = ICOL + 1
          GO TO 60
C
   70   ICOL = ICOL + 1
        IB = ICOL
   75   IF (ICOL.GE.80)  GO TO 80
          IF (IOUT(ICOL,4).EQ.KBLANK)  GO TO 80
          ICOL = ICOL + 1
          GO TO 75
   80   IE = ICOL - 1
        CALL CONPHR (KODPAU, 2, NKODES, 2, IOUT(1,4), IB, IE, ICODE, JE)
        IF (ICODE.LE.0)  GO TO 900
        IF (ICODE.EQ.1)  GOTO 95
C
C-      BEGIN KEY WORD IN COLUMN 1
        NCHAR = IE - IB + 1
        DO 90 I = 1, NCHAR
          IOUT(I,4) = IOUT(IB+I-1,4)
   90     CONTINUE
        JIOUT(4) = NCHAR
        CALL JSTS (KBLANK, -1, 4)
C
C-      ACT ON KEY WORD.
   95   GO TO (100,200,300,400,500,600,700,800), ICODE
 
C-      COMMENT.
  100   IOUT(1,4) = KEXCL
        CALL SENSIM (IHEAD(2), LHEAD, IOUT(2,4), 79, 1, JE, 0, 0)
        JE = JE + 1
        CALL WRTREC (IOUT(1,4), JE, 4, 4)
        GO TO 50
 
C-      PARAMETERS.
  200   CALL COPCIA (PAR(1,1), IA, 5)
        CALL JSTOUT (IA, 5, -1, 4, 0)
        CALL JSTI (JIM, 0, 4)
        CALL COPCIA (PAR(1,2), IA, 6)
        CALL JSTOUT (IA, 6, -1, 4, 0)
        CALL JSTI (MCHAR, -1, 4)
        CALL JSTS (KSEMIC, 1, 4)
        GO TO 50
 
C-      SYMBOLS.
  300   NSMAX = 0
        DO 310 IC = 1, NC
          IF (IMC(IC).EQ.0)  GOTO 310
          IF (KSTAT(IC).GT.NSMAX)  NSMAX = KSTAT(IC)
  310   CONTINUE
        CALL JSTS (KPAU(1), -1, 4)
        CALL JSTS (KDASH, -1, 4)
        I = MIN (NSMAX, 9+NUMST0)
        CALL JSTS (KPAU(I), -1, 4)
        IF (NSMAX.GT.9+NUMST0)  THEN
          CALL ENDWD (4)
          CALL JSTS (KPAU(10+NUMST0), -1, 4)
          IF (NSMAX.GT.10+NUMST0)  THEN
            CALL JSTS (KDASH, -1, 4)
            CALL JSTS (KPAU(NSMAX), -1, 4)
          ENDIF
        ENDIF
        CALL JSTS (KSEMIC, 1, 4)
        GOTO 50
 
C-      UNORDERED.
  400   IB = 0
        IE = 0
        ICM = 0
        JIOUT(4) = JE
        DO 450 IC = 1, NC
          IF (IMC(IC).EQ.0)  GOTO 450
          ICM = ICM + 1
          IF (IABS(ITYPC(IC)).GT.1)  GOTO 450
          IF (KSTAT(IC).EQ.2)  GOTO 450
          IF (IB.EQ.0)  GOTO 410
          IF (ICM.EQ.IE+1)  GOTO 420
          CALL JSTI (IB, -1, 4)
          IF (IB.NE.IE)  THEN
            CALL PRANGE (1, ITYPMK, LIDAT, 4)
            CALL JSTI (IE, -1, 4)
          ENDIF
          CALL ENDWD (4)
  410     IB = ICM
  420     IE = ICM
  450   CONTINUE
        IF (IB.GT.0)  THEN
          CALL JSTI (IB, -1, 4)
          IF (IB.NE.IE)  THEN
            CALL PRANGE (1, ITYPMK, LIDAT, 4)
            CALL JSTI (IE, -1, 4)
          ENDIF
          CALL JSTS (KSEMIC, 1, 4)
        ENDIF
        GOTO 50
 
C       DATA.
  500   I = 1
        J = LPUDEF
        K = 9
        L = 15
        IF (MCHAR.LE.LPUDEF-9)  THEN
          I = 2
          J = MCHAR
          K = 8
          L = 13
        ENDIF
        CALL COPCIA (LFMT(1,I), IA, L)
        CALL JNKOD (J, IA(K), 3)
        CALL JSTOUT (IA, L, -1, 4, 0)
        CALL JSTS (KSEMIC, 1, 4)
        REWIND LUNS1
        LUNREC(LUNS1) = 0
  510   CALL RREC (IOUT(1,4), LPUDEF, LUNS1, LREC)
C     *    FNAME(LUNS1), LFNAME(LUNS1), LUNREC(LUNS1))
          IF (LREC.LT.0)  GOTO 550
          LUNREC(LUNS1) = LUNREC(LUNS1) + 1
          IF (LREC.EQ.0)  GOTO 540
          CALL WRTREC (IOUT(1,4), LREC, 4, 4)
  540   GOTO 510
  550   CONTINUE
        CLOSE (UNIT=LUNS1, STATUS='DELETE')
        GOTO 50
 
C       GO.
  600   CALL JSTS (KSEMIC, 1, 4)
        GOTO 50
 
C       WEIGHTS.
  700   ICM = 0
        WLAST = -1.0
        KNT = 0
        DO 710 IC = 1, NC
          IF (IMC(IC).EQ.0)  GOTO 710
          ICM = ICM + 1
          WT = WTC(IC)
          IF (WT.LE.0)  WT = 1.0
          IF (WLAST.EQ.WT)  THEN
            KNT = KNT + 1
          ELSE
            IF (KNT.GT.1)  THEN
              CALL JSTI (KNT, -1, 4)
              CALL JSTS (KSTAR, -1, 4)
            ENDIF
            IF (KNT.GT.0)  THEN
              CALL JSTR (WLAST, -1, -1, 4, 0)
              CALL ENDWD (4)
              KNT = 0
            ENDIF
            WLAST = WT
            KNT = KNT + 1
          ENDIF
  710     CONTINUE
        IF (KNT.GT.0)  THEN
          IF (KNT.GT.1)  THEN
            CALL JSTI (KNT, -1, 4)
            CALL JSTS (KSTAR, -1, 4)
          ENDIF
          CALL JSTR (WLAST, -1, -1, 4, 0)
          CALL JSTS (KSEMIC, 1, 4)
        ENDIF
        GOTO 50
 
C       END.
  800   CALL JSTS (KSEMIC, 1, 4)
        GOTO 50
 
  900 CALL MESSA (12, 3, JE)
C
  950 CALL WRTREC (IOUT(1,4), 80, 4, 4)
      GO TO 50
C
 1000 CONTINUE
      END
      SUBROUTINE PAUPTI (ITM, ISBND, LIDAT, ITYPC, IMC, NSTAT, KSTAT,       TPAU
     * IWORK, NC, ISTAT, MS, IMI, JI)
 
C* REVISED 1-SEP-93.
C  OUTPUTS AN ITEM IN PAUP FORMAT.
 
C  ITM RECEIVES THE ITEM.
C  ISBND RECEIVES THE KEY STATE BOUNDARIES.
C  LIDAT RECEIVES THE DIMENSION OF ITM AND ISBND.
C  ITYPC RECEIVES THE CHARACTER TYPES.
C  IMC RECEIVES THE CHARACTER MASK.
C  NSTAT RECEIVES THE NUMBERS OF STATES.
C  KSTAT RECEIVES THE NUMBERS OF KEY STATES.
C  IWORK RECEIVES WORKING SPACE OF LENGTH NC.
C  NC RECEIVES THE NUMBER OF CHARACTERS.
C  ISTAT IS WORKING SPACE OF LENGTH MS.
C  MS RECEIVES THE MAXIMUM NUMBER OF STATES.
C  IMI RECEIVES THE ITEM MASK.
C  JI RECEIVES THE ITEM NUMBER.
 
C  PROCEDURE FOR DETERMINING PAUP VALUES (SAME AS FOR HENNIG).
C    1. NUMERIC CHARACTERS WITHOUT KEY STATES ARE EXCLUDED.
C    2. ONLY `NORMAL' VALUES OF NUMERIC CHARACTERS ARE USED. EXTREME VALUES
C       ARE IGNORED.
C    3. KEY STATES ARE APPLIED. ALL NUMERIC CHARACTERS ARE SUBSEQUENTLY TREATED
C       AS ORDERED MULTISTATE.
C    4. IF A `USE MEAN VALUES' DIRECTIVE IS IN FORCE, MULTIPLE VALUES OF ORDERED
C       MULTISTATE CHARACTERS (INCLUDING FORMER NUMERIC CHARACTERS) ARE REPLACED
C       BY THEIR MEAN.
C    5. IF ONLY ONE STATE VALUE IS PRESENT, THAT VALUE IS OUTPUT.
C    6. IF ALL POSSIBLE STATE VALUES ARE PRESENT, OR IF MORE THAN ONE VALUE IS
C       PRESENT AND `TREAT VARIABLE AS UNKNOWN' HAS BEEN SPECIFIED, THEN ?
C       IS OUTPUT.
C       OTHERWISE -
C    7. FOR ORDERED MULTISTATE CHARACTERS (INCLUDING FORMER NUMERICS)
C       A SINGLE VALUE IS OBTAINED AS IN STEP 4.
C    8. FOR UNORDERED MULTISTATES, A SINGLE VALUE IS OBTAINED FROM THE ORIGINAL
C       DATA (BEFORE THE APPLICATION OF KEY STATES) BY SELECTING THE FIRST VALUE
C       CODED, UNLESS `USE LAST VALUE CODED' HAS BEEN SPECIFIED, WHEN THE LAST
C       VALUE IS SELECTED. KEY STATES ARE THEN APPLIED IF SPECIFIED.
C    9. THE VALUE IS OUTPUT.
 
      DIMENSION ITM(LIDAT),ISBND(LIDAT),
     * ITYPC(NC),IMC(NC),NSTAT(NC),KSTAT(NC),IWORK(NC),
     * ISTAT(MS),IMI(JI)
 
      COMMON /ALPXXX/ KA,KB,KC,KD,KE,KF,KG,KH,KI,KJ,KK,KL,KM,
     *                KN,KO,KP,KQ,KR,KS,KT,KU,KV,KW,KX,KY,KZ
      COMMON /BLKXXX/ KBLANK
      COMMON /ITSXXX/ ITSS
      COMMON /JSTXXX/ IOUT(132,5),LOUT,ICAP,
     * JIOUT(5),IENDWD(5),INDEN(5),LWIDTH(5),PSEQ,SEQINC,NSQDIG
      COMMON /LUOXXX/ NUN,LPAGE,LPRINT,LTOP,LPRDEF,LPUDEF,
     * LUNCOM(15),LUNPRE(15),LUNUSE(19),LUNREC(19),LUNPAG(19)
      COMMON /MISXXX/ IMPVAL,IPACH,IPCHN,IPUNC,IRAB,IKEYCH,ICMPRS,
     * ITUNC,ITINAP,ITIMPL,IUNVAR,LNKC,IDEPC,LICDEP,IPSUMM,ICHSEQ,
     * ITMSEQ,INSRVA,IFATT,ITINTR,ICMAND,IUNRNG,IOMTOR,NEWFLS,IRSEMI,
     * IOMSTC,IADDCH,IEMPCH,IVARUN,ISCALC,ICNOTE,ICIMGE,ITIMGE,MTIMGE,
     * NTIMGE,IOMNSC,IOMCMT,IOMLOW,IERRPC,IERRAB,ICHNSE,NUMST0,IUMEAN,
     * NADNAM,NEMNAM,NODELO,IOMUSP,ICKYIMG,ITKYIMG,ISUPIMG,ICTIMGE,
     * ICTNAME,IHTML,IRTF,MTHEAD,NTHEAD,ITMHDGS,LCDNAM,MTFILE,NTFILE,
     * ITMFILS,MXHEAD,NXHEAD,IDXHDGS,INSIMGFN,ICOFILE,IUCC,IOUNC,ITLINK,
     * MTLINK,NTLINK,NAUTOCC,IOUTSUBJ
      COMMON /NUMXXX/ KNUM(10),KDEC,KMINUS
      COMMON /PAUPXX/ KPAU(32)
      COMMON /SCRNMX/ SCRNAM(7)
        CHARACTER*8 SCRNAM
      COMMON /SCRXXX/ LUNTS1,LUNTS2,LUNTS3,LUNTS4,LUNTS5,LUNTS6,LUNTS7
      COMMON /SYMXXX/ KPOINT,KDASH,KSTAR,KVERT,KEQUAL,KCOMMA,KSEMIC,
     * KCOLON,KSTOP,KSOL,KLPAR,KRPAR,KDOLLA,KQUEST,KEXCL,KAT,KLBRACE,
     * KRBRACE
 
C     LOCAL ARRAYS.
      DIMENSION KALP(26),ITSF(3)
      CHARACTER FSPEC*60
      EQUIVALENCE (KA,KALP(1))
 
      IF (JI.GT.1)  GOTO 10
 
C-    DEFINE STATE SYMBOLS.
C-    USE STATE SYMBOLS (1-9 A-W) OR (0-9 A-X), DEPENDING ON VALUE OF NUMST0
      IF (NUMST0.NE.0) NUMST0 = 1
      DO 2 I = 1, 9 + NUMST0
        KPAU(I) = KNUM(I-NUMST0+1)
    2 CONTINUE
      DO 4 I = 10 + NUMST0, 32
        KPAU(I) = KALP(I-NUMST0-9)
    4 CONTINUE

C-    OPEN SCRATCH FILE FOR MATRIX.
      CALL GETAU (L)
      FSPEC = SCRNAM(1)
      CALL SETLUN (FSPEC, L, LUNTS1)
      CALL UOPEN (L, LUNUSE(L), FSPEC, IDUMMY, IERR)
      IF (IERR.NE.0)  CALL MESSA (109, -1, 0)
 
   10 IF (IMI(JI).EQ.0)  GOTO 2000
 
C     EXTRACT ITEM NAME.
      LUNTYP = LUNTS1
      CALL SENSIM (ITM(NC+2), LIDAT, IOUT(1,LUNTYP), 8, 1, L, 0, 0)
      IF (NONZER(IMC,NC).GT.LPUDEF-9)  THEN
        CALL WRTREC (IOUT(1,LUNTYP), L, LUNTYP, 4)
        JBF = 0
      ELSE
        DO 20 I = L+1, 9
          IOUT(I,LUNTYP) = KBLANK
   20   CONTINUE
        JBF = 9
      ENDIF
 
C--   OUTPUT ATTRIBUTES.
 
      CALL SETIA (IWORK, NC, 1)
      DO 1000 IC = 1, NC
        IF (IMC(IC).EQ.0)  GOTO 1000
        JBF = JBF + 1
        IF (ITM(IC).LE.0)  GO TO 510
        JTYPC = IABS(ITYPC(IC))
 
C       APPLY KEY STATES.
        CALL FNDKST (ITM, ISBND, IC, LIDAT, ITYPC, KSTAT, IWORK, NC,
     *   1, ISTAT, MS, ITSF, JI, 0.0, 0.0)
        KNS = KSTAT(IC)
        NZ = NONZER (ISTAT, KNS)
        IF (NZ.EQ.1)  THEN
          DO IS = 1, KNS
            IF (ISTAT(IS).NE.0)  THEN
              IOUT(JBF,LUNTYP) = KPAU(IS)
              GOTO 600
            ENDIF
          ENDDO
        ELSEIF (NZ.GT.1)  THEN
          IF (JTYPC.GE.2.AND.IUMEAN.NE.0) GOTO 100
          IF (NZ.EQ.KNS)  GOTO 510
C         TREAT VARIABLE AS UNKNOWN.
          IF (IVARUN.NE.0)  GOTO 510
          IF (JTYPC.GE.2)  GOTO 100
          GOTO 200
        ELSE
          GOTO 510
        ENDIF
 
C       USE MEAN VALUES.
  100   VAL = 0.0
        N = 0
        DO I = 1, KNS
          IF (ISTAT(I).NE.0)  THEN
            VAL = VAL + I
            N = N + 1
          ENDIF
        ENDDO
        VAL = VAL/N
        IS = INT((VAL + 0.49))
        IOUT(JBF,LUNTYP) = KPAU(IS)
        GOTO 600
 
C-      UNORDERED MULTISTATE.
        
  200   JG = ITM(IC)
        JGN = JG + ITM(JG)
        JSG = JG + 1
 
C       FIND FIRST VALUE CODED.
        IF (IFATT.NE.0)  THEN
  255     IF (JSG.GE.JGN)  GOTO 510
          IF (ITM(JSG+1).NE.0)  GOTO 260
            JSG = JSG + ITM(JSG)
            GOTO 255
  260     IVAL = ITM(JSG+2)
      
        ELSE
C       FIND LAST VALUE CODED.
      
          LSTJSG = 0
  265     IF (JSG.GE.JGN)  GOTO 270
          IF (ITM(JSG+1).NE.0)  LSTJSG = JSG
            JSG = JSG + ITM(JSG)
            GOTO 265
  270     IF (LSTJSG.EQ.0)  GOTO 510
          JSG = LSTJSG
          IVAL = ITM(JSG+ITM(JSG)-1)
        ENDIF
        ITS = ITM(JSG+1)
        IF (ITS.GT.ITSS)  GOTO 510
 
C       APPLY KEY STATES, IF SPECIFIED.
        IF (ISBND(IC).NE.0)  THEN
C         DETERMINE KEY STATE. USE FIRST KEY STATE FOUND.
          IS = 0
          NS = KSTAT(IC)
          NG = ISBND(IC)
          NSG = NG + 1
          NGN = NG + ISBND(NG)
        
C         SCAN GROUPS OF KEY STATES.
  280     IF (NSG.GE.NGN)  GO TO 290
            IS = IS + 1
            ITS = ISBND(NSG+1)
            NB = NSG + 2
            NE = NSG + ISBND(NSG) - 1
        
            DO N = NB, NE
              IF (IVAL.EQ.ISBND(N))  GOTO 285
            ENDDO
            NSG = NSG + ISBND(NSG)
            GO TO 280
        ELSE
          IS = IVAL
        ENDIF

  285   IOUT(JBF,LUNTYP) = KPAU(IS)
        GOTO 600
  290   IOUT(JBF,LUNTYP) = KQUEST
        GOTO 600

C       UNKNOWN OR NOT APPLICABLE.
  510   IOUT(JBF,LUNTYP) = KQUEST
 
  600   IF (JBF.GE.LPUDEF)  THEN
           CALL WRTREC (IOUT(1,LUNTYP), JBF, LUNTYP, 4)
           JBF = 0
        ENDIF
 
 1000   CONTINUE
 
      IF (JBF.GT.0)  CALL WRTREC (IOUT(1,LUNTYP), JBF, LUNTYP, 4)
 
 2000 RETURN
      END
